// Class /Script/FortniteAI.FortAthenaAIBotMovementDigestedSkillSet
// Size: 0x298
class UFortAthenaAIBotMovementDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
	float SlowDownDistanceSquared; // 0x30 (0x4)
	float TraversalSpeedEstimation; // 0x34 (0x4)
	float TraversalSpeedEstimationWithThreat; // 0x38 (0x4)
	float GliderDeployMinAngle; // 0x3c (0x4)
	float GliderDeployMaxAngle; // 0x40 (0x4)
	float GliderNoiseMinDistance; // 0x44 (0x4)
	float GliderNoiseMaxDistance; // 0x48 (0x4)
	float GliderNoiseMinDelay; // 0x4c (0x4)
	float GliderNoiseMaxDelay; // 0x50 (0x4)
	float GliderNoiseDistanceTreshold; // 0x54 (0x4)
	float GliderStopRotationDistance; // 0x58 (0x4)
	float GliderLandingDistance; // 0x5c (0x4)
	float GliderRotationLerpDuration; // 0x60 (0x4)
	bool GliderBehaviorEnableFlag; // 0x64 (0x1)
	unsigned char unreflected_65[0x3]; // 0x65 (0x3) 
	float GliderBehaviorMinInterval; // 0x68 (0x4)
	float GliderBehaviorMaxInterval; // 0x6c (0x4)
	float GliderBehaviorMinRadius; // 0x70 (0x4)
	float GliderBehaviorMaxRadius; // 0x74 (0x4)
	float GliderBehaviorSurveyProbability; // 0x78 (0x4)
	bool GliderMovementTypeEnableFlag; // 0x7c (0x1)
	unsigned char unreflected_7d[0x3]; // 0x7d (0x3) 
	float GliderLinearProbability; // 0x80 (0x4)
	float GliderSpiralMinRadius; // 0x84 (0x4)
	float GliderSpiralMaxRadius; // 0x88 (0x4)
	float GliderSpiralMinAngle; // 0x8c (0x4)
	float GliderSpiralMaxAngle; // 0x90 (0x4)
	float GliderSpiralMinInterval; // 0x94 (0x4)
	float GliderSpiralMaxInterval; // 0x98 (0x4)
	float GliderSpiralProbability; // 0x9c (0x4)
	float GliderSerpentineMinAngle; // 0xa0 (0x4)
	float GliderSerpentineMaxAngle; // 0xa4 (0x4)
	float GliderSerpentineMinRadius; // 0xa8 (0x4)
	float GliderSerpentineMaxRadius; // 0xac (0x4)
	float GliderSerpentineMinInterval; // 0xb0 (0x4)
	float GliderSerpentineMaxInterval; // 0xb4 (0x4)
	float GliderSerpentineMinPeriod; // 0xb8 (0x4)
	float GliderSerpentineMaxPeriod; // 0xbc (0x4)
	float GliderSerpentineProbability; // 0xc0 (0x4)
	float JumpOffMinAngle; // 0xc4 (0x4)
	float JumpOffMaxAngle; // 0xc8 (0x4)
	float MaxPatrolDistance; // 0xcc (0x4)
	float MaxPatrolDistanceRandomDeviation; // 0xd0 (0x4)
	float WobbleProbability; // 0xd4 (0x4)
	float MaxDelayBetweenWobblingMovement; // 0xd8 (0x4)
	float MaxDelayBetweenWobblingMovementRandomDeviation; // 0xdc (0x4)
	bool bAllowSwimWobble; // 0xe0 (0x1)
	unsigned char unreflected_e1[0x3]; // 0xe1 (0x3) 
	float MaxWobblingDuration; // 0xe4 (0x4)
	float MaxWobblingDurationRandomDeviation; // 0xe8 (0x4)
	float MaxWobblingIntensity; // 0xec (0x4)
	float WobblingIntensityDeviation; // 0xf0 (0x4)
	float MaxWobblingFrequency; // 0xf4 (0x4)
	float WobblingFrequencyDeviation; // 0xf8 (0x4)
	float WobblingStickToPathCorridorStrength; // 0xfc (0x4)
	float MaxAfterLaunchedPauseTime; // 0x100 (0x4)
	float MaxAfterLaunchedFromVortexPauseTime; // 0x104 (0x4)
	float AfterLaunchedPauseTimeDeviation; // 0x108 (0x4)
	bool bSteerMovementWhenLaunched; // 0x10c (0x1)
	unsigned char unreflected_10d[0x3]; // 0x10d (0x3) 
	float SteerMovementWhenLaunchedDirectionUpdateTime; // 0x110 (0x4)
	float MaxReactionTimeToDangerZone; // 0x114 (0x4)
	float MaxReactionTimeToDangerZoneDeviation; // 0x118 (0x4)
	bool bLimitBlockingObstacleAngle; // 0x11c (0x1)
	bool bEnableSwimSprintJump; // 0x11d (0x1)
	unsigned char unreflected_11e[0x2]; // 0x11e (0x2) 
	float SwimSprintJumpDelay; // 0x120 (0x4)
	float SwimSprintJumpDelayDeviation; // 0x124 (0x4)
	float SwimUnblockJumpHeightThreshold; // 0x128 (0x4)
	bool bSwimSprintJumpNav2D; // 0x12c (0x1)
	unsigned char unreflected_12d[0x3]; // 0x12d (0x3) 
	float TacticalSprintEvaluationMinTime; // 0x130 (0x4)
	float TacticalSprintEvaluationMaxTime; // 0x134 (0x4)
	float TacticalSprintMinTriggerChance; // 0x138 (0x4)
	float TacticalSprintMaxTriggerChance; // 0x13c (0x4)
	float TacticalSprintMinTriggerChanceInUrgentMovement; // 0x140 (0x4)
	float TacticalSprintMaxTriggerChanceInUrgentMovement; // 0x144 (0x4)
	float TacticalSprintMaxSlopeAngle; // 0x148 (0x4)
	float TacticalSprintMinPathTargetDistance; // 0x14c (0x4)
	float TacticalSprintMaxPathAlignmentAngle; // 0x150 (0x4)
	float TacticalSprintMaxPathConeAngle; // 0x154 (0x4)
	float TacticalSprintPathConeRearOffset; // 0x158 (0x4)
	bool TacticalSprintUsageEnabled; // 0x15c (0x1)
	unsigned char unreflected_15d[0x3]; // 0x15d (0x3) 
	float TacticalSprintJumpTriggerChance; // 0x160 (0x4)
	float TacticalSprintJumpDelay; // 0x164 (0x4)
	float TacticalSprintJumpDelayDeviation; // 0x168 (0x4)
	float TacticalSprintJumpDelayInitialRatio; // 0x16c (0x4)
	struct FVector SlidingBoxExtent; // 0x170 (0x18)
	float SlidingEnabled[0x4]; // 0x188 (0x4) (ARRAY) 
	float SlidingEvaluationMinTime; // 0x198 (0x4)
	float SlidingEvaluationMaxTime; // 0x19c (0x4)
	float SlidingTriggerChanceStyleMalus; // 0x1a0 (0x4)
	float SlidingTriggerChanceStyleMalusRandomDeviation; // 0x1a4 (0x4)
	float SlidingTriggerChanceFlat; // 0x1a8 (0x4)
	float SlidingTriggerChanceLittleSlope; // 0x1ac (0x4)
	float SlidingTriggerChanceSteepSlope; // 0x1b0 (0x4)
	float SlidingDuringUrgentMovementTriggerChanceFlat; // 0x1b4 (0x4)
	float SlidingDuringUrgentMovementTriggerChanceLittleSlope; // 0x1b8 (0x4)
	float SlidingDuringUrgentMovementTriggerChanceSteepSlope; // 0x1bc (0x4)
	float MinSlidingDuration; // 0x1c0 (0x4)
	float SlidingCooldownMinTime; // 0x1c4 (0x4)
	float SlidingCooldownMaxTime; // 0x1c8 (0x4)
	float SlidingStopMinDelay; // 0x1cc (0x4)
	float SlidingStopMaxDelay; // 0x1d0 (0x4)
	float SlidingMaxPathConeAngle; // 0x1d4 (0x4)
	float SlidingMinPathTargetDistance; // 0x1d8 (0x4)
	float SlidingAllowResumeFocusOnTargetTriggerChance; // 0x1dc (0x4)
	float MoveToRangeAttackMinOffset; // 0x1e0 (0x4)
	float MoveToRangeAttackMaxOffset; // 0x1e4 (0x4)
	float LKPMinOffset; // 0x1e8 (0x4)
	float LKPMaxOffset; // 0x1ec (0x4)
	float SandTunnelJumpMinTime; // 0x1f0 (0x4)
	float SandTunnelJumpMaxTime; // 0x1f4 (0x4)
	float SandTunnelBurrowedAndHiddenChance; // 0x1f8 (0x4)
	float SandTunnelBurrowedAndHiddenMinTime; // 0x1fc (0x4)
	float SandTunnelBurrowedAndHiddenMaxTime; // 0x200 (0x4)
	unsigned char unreflected_204[0x4]; // 0x204 (0x4) 
	struct FVector ZiplineOctreeBoxExtent; // 0x208 (0x18)
	float ThresholdDistanceToRescanForZiplines; // 0x220 (0x4)
	float CooldownBetweenZiplineUsages; // 0x224 (0x4)
	float DistanceToAddToZiplineStartPosition; // 0x228 (0x4)
	float RadiusFromZiplineEnterPointToLookAtExit; // 0x22c (0x4)
	bool ZiplineUsageEnabled; // 0x230 (0x1)
	unsigned char unreflected_231[0x7]; // 0x231 (0x7) 
	struct FDigestedBotKnockbackSettings DefaultKnockbackSettings; // 0x238 (0x50)
	struct TArray<struct FDigestedBotKnockbackSettings> KnockbackSettingsSpecializations; // 0x288 (0x10)
};

