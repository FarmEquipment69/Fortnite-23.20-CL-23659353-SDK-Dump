// Class /Script/Engine.CharacterMovementComponent
// Size: 0xee0
class UCharacterMovementComponent : public UPawnMovementComponent
{
	unsigned char unreflected_150[0x10]; // 0x150 (0x10) 
	class ACharacter* CharacterOwner; // 0x160 (0x8)
	float GravityScale; // 0x168 (0x4)
	float MaxStepHeight; // 0x16c (0x4)
	float JumpZVelocity; // 0x170 (0x4)
	float JumpOffJumpZFactor; // 0x174 (0x4)
	unsigned char unreflected_178[0x1c]; // 0x178 (0x1c) 
	float WalkableFloorAngle; // 0x194 (0x4)
	float WalkableFloorZ; // 0x198 (0x4)
	struct TEnumAsByte<EMovementMode> MovementMode; // 0x19c (0x1)
	unsigned char CustomMovementMode; // 0x19d (0x1)
	enum ENetworkSmoothingMode NetworkSmoothingMode; // 0x19e (0x1)
	unsigned char unreflected_19f[0x1]; // 0x19f (0x1) 
	float GroundFriction; // 0x1a0 (0x4)
	unsigned char unreflected_1a4[0x44]; // 0x1a4 (0x44) 
	float MaxWalkSpeed; // 0x1e8 (0x4)
	float MaxWalkSpeedCrouched; // 0x1ec (0x4)
	float MaxSwimSpeed; // 0x1f0 (0x4)
	float MaxFlySpeed; // 0x1f4 (0x4)
	float MaxCustomMovementSpeed; // 0x1f8 (0x4)
	float MaxAcceleration; // 0x1fc (0x4)
	float MinAnalogWalkSpeed; // 0x200 (0x4)
	float BrakingFrictionFactor; // 0x204 (0x4)
	float BrakingFriction; // 0x208 (0x4)
	float BrakingSubStepTime; // 0x20c (0x4)
	float BrakingDecelerationWalking; // 0x210 (0x4)
	float BrakingDecelerationFalling; // 0x214 (0x4)
	float BrakingDecelerationSwimming; // 0x218 (0x4)
	float BrakingDecelerationFlying; // 0x21c (0x4)
	float AirControl; // 0x220 (0x4)
	float AirControlBoostMultiplier; // 0x224 (0x4)
	float AirControlBoostVelocityThreshold; // 0x228 (0x4)
	float FallingLateralFriction; // 0x22c (0x4)
	float CrouchedHalfHeight; // 0x230 (0x4)
	float Buoyancy; // 0x234 (0x4)
	float PerchRadiusThreshold; // 0x238 (0x4)
	float PerchAdditionalHeight; // 0x23c (0x4)
	struct FRotator RotationRate; // 0x240 (0x18)
	unsigned char bUseSeparateBrakingFriction; // 0x258 (0x1)
	unsigned char bApplyGravityWhileJumping; // 0x258 (0x1)
	unsigned char bUseControllerDesiredRotation; // 0x258 (0x1)
	unsigned char bOrientRotationToMovement; // 0x258 (0x1)
	unsigned char bSweepWhileNavWalking; // 0x258 (0x1)
	unsigned char bMovementInProgress; // 0x258 (0x1)
	unsigned char bEnableScopedMovementUpdates; // 0x258 (0x1)
	unsigned char bEnableServerDualMoveScopedMovementUpdates; // 0x259 (0x1)
	unsigned char bForceMaxAccel; // 0x259 (0x1)
	unsigned char bRunPhysicsWithNoController; // 0x259 (0x1)
	unsigned char bForceNextFloorCheck; // 0x259 (0x1)
	unsigned char bShrinkProxyCapsule; // 0x259 (0x1)
	unsigned char bCanWalkOffLedges; // 0x259 (0x1)
	unsigned char bCanWalkOffLedgesWhenCrouching; // 0x259 (0x1)
	unsigned char bNetworkSkipProxyPredictionOnNetUpdate; // 0x25a (0x1)
	unsigned char bNetworkAlwaysReplicateTransformUpdateTimestamp; // 0x25a (0x1)
	unsigned char bDeferUpdateMoveComponent; // 0x25a (0x1)
	unsigned char bEnablePhysicsInteraction; // 0x25a (0x1)
	unsigned char bTouchForceScaledToMass; // 0x25a (0x1)
	unsigned char bPushForceScaledToMass; // 0x25a (0x1)
	unsigned char bPushForceUsingZOffset; // 0x25a (0x1)
	unsigned char bScalePushForceToVelocity; // 0x25b (0x1)
	unsigned char unreflected_25c[0x4]; // 0x25c (0x4) 
	class USceneComponent* DeferredUpdatedMoveComponent; // 0x260 (0x8)
	float MaxOutOfWaterStepHeight; // 0x268 (0x4)
	float OutofWaterZ; // 0x26c (0x4)
	float Mass; // 0x270 (0x4)
	float StandingDownwardForceScale; // 0x274 (0x4)
	float InitialPushForceFactor; // 0x278 (0x4)
	float PushForceFactor; // 0x27c (0x4)
	float PushForcePointZOffsetFactor; // 0x280 (0x4)
	float TouchForceFactor; // 0x284 (0x4)
	float MinTouchForce; // 0x288 (0x4)
	float MaxTouchForce; // 0x28c (0x4)
	float RepulsionForce; // 0x290 (0x4)
	unsigned char unreflected_294[0x4]; // 0x294 (0x4) 
	struct FVector Acceleration; // 0x298 (0x18)
	struct FQuat LastUpdateRotation; // 0x2b0 (0x20)
	struct FVector LastUpdateLocation; // 0x2d0 (0x18)
	struct FVector LastUpdateVelocity; // 0x2e8 (0x18)
	float ServerLastTransformUpdateTimeStamp; // 0x300 (0x4)
	float ServerLastClientGoodMoveAckTime; // 0x304 (0x4)
	float ServerLastClientAdjustmentTime; // 0x308 (0x4)
	unsigned char unreflected_30c[0x4]; // 0x30c (0x4) 
	struct FVector PendingImpulseToApply; // 0x310 (0x18)
	struct FVector PendingForceToApply; // 0x328 (0x18)
	float AnalogInputModifier; // 0x340 (0x4)
	unsigned char unreflected_344[0xc]; // 0x344 (0xc) 
	float MaxSimulationTimeStep; // 0x350 (0x4)
	int MaxSimulationIterations; // 0x354 (0x4)
	int MaxJumpApexAttemptsPerSimulation; // 0x358 (0x4)
	float MaxDepenetrationWithGeometry; // 0x35c (0x4)
	float MaxDepenetrationWithGeometryAsProxy; // 0x360 (0x4)
	float MaxDepenetrationWithPawn; // 0x364 (0x4)
	float MaxDepenetrationWithPawnAsProxy; // 0x368 (0x4)
	float NetworkSimulatedSmoothLocationTime; // 0x36c (0x4)
	float NetworkSimulatedSmoothRotationTime; // 0x370 (0x4)
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x374 (0x4)
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x378 (0x4)
	float NetProxyShrinkRadius; // 0x37c (0x4)
	float NetProxyShrinkHalfHeight; // 0x380 (0x4)
	float NetworkMaxSmoothUpdateDistance; // 0x384 (0x4)
	float NetworkNoSmoothUpdateDistance; // 0x388 (0x4)
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x38c (0x4)
	float NetworkMinTimeBetweenClientAdjustments; // 0x390 (0x4)
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x394 (0x4)
	float NetworkLargeClientCorrectionDistance; // 0x398 (0x4)
	float LedgeCheckThreshold; // 0x39c (0x4)
	float JumpOutOfWaterPitch; // 0x3a0 (0x4)
	unsigned char unreflected_3a4[0x4]; // 0x3a4 (0x4) 
	struct FFindFloorResult CurrentFloor; // 0x3a8 (0xf0)
	struct TEnumAsByte<EMovementMode> DefaultLandMovementMode; // 0x498 (0x1)
	struct TEnumAsByte<EMovementMode> DefaultWaterMovementMode; // 0x499 (0x1)
	struct TEnumAsByte<EMovementMode> GroundMovementMode; // 0x49a (0x1)
	unsigned char unreflected_49b[0x9]; // 0x49b (0x9) 
	unsigned char bMaintainHorizontalGroundVelocity; // 0x4a4 (0x1)
	unsigned char bImpartBaseVelocityX; // 0x4a4 (0x1)
	unsigned char bImpartBaseVelocityY; // 0x4a4 (0x1)
	unsigned char bImpartBaseVelocityZ; // 0x4a4 (0x1)
	unsigned char bImpartBaseAngularVelocity; // 0x4a4 (0x1)
	unsigned char bJustTeleported; // 0x4a4 (0x1)
	unsigned char bNetworkUpdateReceived; // 0x4a4 (0x1)
	unsigned char bNetworkMovementModeChanged; // 0x4a4 (0x1)
	unsigned char bIgnoreClientMovementErrorChecksAndCorrection; // 0x4a5 (0x1)
	unsigned char bServerAcceptClientAuthoritativePosition; // 0x4a5 (0x1)
	unsigned char bNotifyApex; // 0x4a5 (0x1)
	unsigned char bCheatFlying; // 0x4a5 (0x1)
	unsigned char bWantsToCrouch; // 0x4a5 (0x1)
	unsigned char bCrouchMaintainsBaseLocation; // 0x4a5 (0x1)
	unsigned char bIgnoreBaseRotation; // 0x4a5 (0x1)
	unsigned char bFastAttachedMove; // 0x4a5 (0x1)
	unsigned char bAlwaysCheckFloor; // 0x4a6 (0x1)
	unsigned char bUseFlatBaseForFloorChecks; // 0x4a6 (0x1)
	unsigned char bPerformingJumpOff; // 0x4a6 (0x1)
	unsigned char bWantsToLeaveNavWalking; // 0x4a6 (0x1)
	unsigned char bUseRVOAvoidance; // 0x4a6 (0x1)
	unsigned char bRequestedMoveUseAcceleration; // 0x4a6 (0x1)
	unsigned char bWasSimulatingRootMotion; // 0x4a6 (0x1)
	unsigned char bAllowPhysicsRotationDuringAnimRootMotion; // 0x4a7 (0x1)
	float FormerBaseVelocityDecayHalfLife; // 0x4a8 (0x4)
	unsigned char bHasRequestedVelocity; // 0x4ac (0x1)
	unsigned char bRequestedMoveWithMaxSpeed; // 0x4ac (0x1)
	unsigned char bWasAvoidanceUpdated; // 0x4ac (0x1)
	unsigned char bProjectNavMeshWalking; // 0x4ac (0x1)
	unsigned char bProjectNavMeshOnBothWorldChannels; // 0x4ac (0x1)
	unsigned char unreflected_4ad[0x1f]; // 0x4ad (0x1f) 
	float AvoidanceConsiderationRadius; // 0x4cc (0x4)
	struct FVector RequestedVelocity; // 0x4d0 (0x18)
	struct FVector LastUpdateRequestedVelocity; // 0x4e8 (0x18)
	int AvoidanceUID; // 0x500 (0x4)
	struct FNavAvoidanceMask AvoidanceGroup; // 0x504 (0x4)
	struct FNavAvoidanceMask GroupsToAvoid; // 0x508 (0x4)
	struct FNavAvoidanceMask GroupsToIgnore; // 0x50c (0x4)
	float AvoidanceWeight; // 0x510 (0x4)
	unsigned char unreflected_514[0x4]; // 0x514 (0x4) 
	struct FVector PendingLaunchVelocity; // 0x518 (0x18)
	unsigned char unreflected_530[0x128]; // 0x530 (0x128) 
	float NavMeshProjectionInterval; // 0x658 (0x4)
	float NavMeshProjectionTimer; // 0x65c (0x4)
	float NavMeshProjectionInterpSpeed; // 0x660 (0x4)
	float NavMeshProjectionHeightScaleUp; // 0x664 (0x4)
	float NavMeshProjectionHeightScaleDown; // 0x668 (0x4)
	float NavWalkingFloorDistTolerance; // 0x66c (0x4)
	unsigned char unreflected_670[0x30]; // 0x670 (0x30) 
	struct FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x6a0 (0x30)
	unsigned char unreflected_6d0[0x18]; // 0x6d0 (0x18) 
	float MinTimeBetweenTimeStampResets; // 0x6e8 (0x4)
	unsigned char unreflected_6ec[0x54c]; // 0x6ec (0x54c) 
	struct FRootMotionSourceGroup CurrentRootMotion; // 0xc38 (0x48)
	struct FRootMotionSourceGroup ServerCorrectionRootMotion; // 0xc80 (0x48)
	unsigned char unreflected_cc8[0x168]; // 0xcc8 (0x168) 
	struct FRootMotionMovementParams RootMotionParams; // 0xe30 (0x70)
	struct FVector AnimRootMotionVelocity; // 0xea0 (0x18)
	unsigned char padding_eb8[0x28]; // 0xeb8 (0x28)

	/* Functions */

	// Function /Script/Engine.CharacterMovementComponent.SetWalkableFloorZ (Underlying native function: SetWalkableFloorZ 0x9ce2c1c)
	void SetWalkableFloorZ(float& InWalkableFloorZ); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetWalkableFloorAngle (Underlying native function: SetWalkableFloorAngle 0x9ce2b98)
	void SetWalkableFloorAngle(float& InWalkableFloorAngle); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetMovementMode (Underlying native function: SetMovementMode 0x1b57198)
	void SetMovementMode(struct TEnumAsByte<EMovementMode>& NewMovementMode, unsigned char& NewCustomMode); // (Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToIgnoreMask (Underlying native function: SetGroupsToIgnoreMask 0x9ce20f0)
	void SetGroupsToIgnoreMask(struct FNavAvoidanceMask& GroupMask); // (Final | Native | Public | HasOutParms | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToIgnore (Underlying native function: SetGroupsToIgnore 0x9ce206c)
	void SetGroupsToIgnore(int& GroupFlags); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToAvoidMask (Underlying native function: SetGroupsToAvoidMask 0x9ce1fdc)
	void SetGroupsToAvoidMask(struct FNavAvoidanceMask& GroupMask); // (Final | Native | Public | HasOutParms | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToAvoid (Underlying native function: SetGroupsToAvoid 0x9ce1f58)
	void SetGroupsToAvoid(int& GroupFlags); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetCrouchedHalfHeight (Underlying native function: SetCrouchedHalfHeight 0x9ce1ed4)
	void SetCrouchedHalfHeight(float& NewValue); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetAvoidanceGroupMask (Underlying native function: SetAvoidanceGroupMask 0x9ce1b18)
	void SetAvoidanceGroupMask(struct FNavAvoidanceMask& GroupMask); // (Final | Native | Public | HasOutParms | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetAvoidanceGroup (Underlying native function: SetAvoidanceGroup 0x9ce1a94)
	void SetAvoidanceGroup(int& GroupFlags); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.SetAvoidanceEnabled (Underlying native function: SetAvoidanceEnabled 0x9ce1a14)
	void SetAvoidanceEnabled(bool& bEnable); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.K2_GetWalkableFloorZ (Underlying native function: K2_GetWalkableFloorZ 0x9ce1400)
	float K2GetWalkableFloorZ(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle (Underlying native function: K2_GetWalkableFloorAngle 0x9ce13e8)
	float K2GetWalkableFloorAngle(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.K2_FindFloor (Underlying native function: K2_FindFloor 0x9ce12f4)
	void K2FindFloor(struct FVector& CapsuleLocation, struct FFindFloorResult& FloorResult); // (Native | Public | HasOutParms | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.K2_ComputeFloorDist (Underlying native function: K2_ComputeFloorDist 0x9ce1114)
	void K2ComputeFloorDist(struct FVector& CapsuleLocation, float& LineDistance, float& SweepDistance, float& SweepRadius, struct FFindFloorResult& FloorResult); // (Native | Public | HasOutParms | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.IsWalking (Underlying native function: IsWalking 0x2687fbc)
	bool IsWalking(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.IsWalkable (Underlying native function: IsWalkable 0x9ce1064)
	bool IsWalkable(struct FHitResult& Hit); // (Native | Public | HasOutParms | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetValidPerchRadius (Underlying native function: GetValidPerchRadius 0x9ce0f80)
	float GetValidPerchRadius(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetPerchRadiusThreshold (Underlying native function: GetPerchRadiusThreshold 0x9ce08e4)
	float GetPerchRadiusThreshold(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetMovementBase (Underlying native function: GetMovementBase 0x9ce08c4)
	class UPrimitiveComponent* GetMovementBase(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetMinAnalogSpeed (Underlying native function: GetMinAnalogSpeed 0x9ce0898)
	float GetMinAnalogSpeed(); // (Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime (Underlying native function: GetMaxJumpHeightWithJumpTime 0x9ce086c)
	float GetMaxJumpHeightWithJumpTime(); // (Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetMaxJumpHeight (Underlying native function: GetMaxJumpHeight 0x9ce0840)
	float GetMaxJumpHeight(); // (Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetMaxBrakingDeceleration (Underlying native function: GetMaxBrakingDeceleration 0x9ce0814)
	float GetMaxBrakingDeceleration(); // (Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetMaxAcceleration (Underlying native function: GetMaxAcceleration 0x9ce07e8)
	float GetMaxAcceleration(); // (Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateVelocity (Underlying native function: GetLastUpdateVelocity 0x23a8cd4)
	struct FVector GetLastUpdateVelocity(); // (Final | Native | Public | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateRotation (Underlying native function: GetLastUpdateRotation 0x9ce07a8)
	struct FRotator GetLastUpdateRotation(); // (Final | Native | Public | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateRequestedVelocity (Underlying native function: GetLastUpdateRequestedVelocity 0x9ce0780)
	struct FVector GetLastUpdateRequestedVelocity(); // (Final | Native | Public | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateLocation (Underlying native function: GetLastUpdateLocation 0x9ce0758)
	struct FVector GetLastUpdateLocation(); // (Final | Native | Public | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity (Underlying native function: GetImpartedMovementBaseVelocity 0x9ce071c)
	struct FVector GetImpartedMovementBaseVelocity(); // (Native | Public | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetCurrentAcceleration (Underlying native function: GetCurrentAcceleration 0x9ce06f4)
	struct FVector GetCurrentAcceleration(); // (Final | Native | Public | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetCrouchedHalfHeight (Underlying native function: GetCrouchedHalfHeight 0x890d754)
	float GetCrouchedHalfHeight(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetCharacterOwner (Underlying native function: GetCharacterOwner 0x9ce0314)
	class ACharacter* GetCharacterOwner(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.GetAnalogInputModifier (Underlying native function: GetAnalogInputModifier 0x9ce02fc)
	float GetAnalogInputModifier(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/Engine.CharacterMovementComponent.DisableMovement (Underlying native function: DisableMovement 0x86fff4c)
	void DisableMovement(); // (Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.ClearAccumulatedForces (Underlying native function: ClearAccumulatedForces 0x29876d0)
	void ClearAccumulatedForces(); // (Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.CapsuleTouched (Underlying native function: CapsuleTouched 0x9ce010c)
	void CapsuleTouched(class UPrimitiveComponent*& OverlappedComp, class AActor*& Other, class UPrimitiveComponent*& OtherComp, int& OtherBodyIndex, bool& bFromSweep, struct FHitResult& SweepResult); // (Native | Protected | HasOutParms)

	// Function /Script/Engine.CharacterMovementComponent.CalcVelocity (Underlying native function: CalcVelocity 0x9cdffc4)
	void CalcVelocity(float& DeltaTime, float& Friction, bool& bFluid, float& BrakingDeceleration); // (Native | Public | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.AddImpulse (Underlying native function: AddImpulse 0x9cdfb4c)
	void AddImpulse(struct FVector& Impulse, bool& bVelocityChange); // (Native | Public | HasDefaults | BlueprintCallable)

	// Function /Script/Engine.CharacterMovementComponent.AddForce (Underlying native function: AddForce 0x9cdfab8)
	void AddForce(struct FVector& Force); // (Native | Public | HasDefaults | BlueprintCallable)
};

