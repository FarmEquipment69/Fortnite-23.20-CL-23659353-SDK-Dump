// Class /Script/HoagieRuntime.FortHoagieVehicleConfigs
// Size: 0xac8
class UFortHoagieVehicleConfigs : public UFortPhysicsVehicleConfigs
{
	float StrafeForce; // 0x890 (0x4)
	float StrafeForceMin; // 0x894 (0x4)
	float MaxStrafeSpeedKmh; // 0x898 (0x4)
	float StrafeTooFastBrakeForce; // 0x89c (0x4)
	float LandedBrakeForce; // 0x8a0 (0x4)
	float LiftForce; // 0x8a4 (0x4)
	float MaxLiftSpeedKmh; // 0x8a8 (0x4)
	float LiftTooFastBrakeForce; // 0x8ac (0x4)
	float LateralDragCoefficient; // 0x8b0 (0x4)
	float LateralDragCoefficient2; // 0x8b4 (0x4)
	float LiftDragCoefficient; // 0x8b8 (0x4)
	float LiftDragCoefficient2; // 0x8bc (0x4)
	float MaxPitchForCameraYaw; // 0x8c0 (0x4)
	float MaxCameraYawAngle; // 0x8c4 (0x4)
	float CameraYawStiff; // 0x8c8 (0x4)
	float CameraYawDamp; // 0x8cc (0x4)
	float CameraYawStrength; // 0x8d0 (0x4)
	float UprightStiff; // 0x8d4 (0x4)
	float UprightDamp; // 0x8d8 (0x4)
	bool bUseVehiclePivotForCameraPitch; // 0x8dc (0x1)
	unsigned char unreflected_8dd[0x3]; // 0x8dd (0x3) 
	float ThrustTorqueAnglePercent; // 0x8e0 (0x4)
	float BoostThrustTorqueAnglePercent; // 0x8e4 (0x4)
	float ThrustTorqueStiff; // 0x8e8 (0x4)
	float ThrustTorqueDamp; // 0x8ec (0x4)
	float ThrustTorqueMaxAccel; // 0x8f0 (0x4)
	float ThrustTorque; // 0x8f4 (0x4)
	float YawTorque; // 0x8f8 (0x4)
	float YawTorqueDampingSpeed; // 0x8fc (0x4)
	float BoostForce; // 0x900 (0x4)
	float BoostMaxSpeedKmh; // 0x904 (0x4)
	float BoostDuration; // 0x908 (0x4)
	float BoostCooldown; // 0x90c (0x4)
	float BoostTorqueStiff; // 0x910 (0x4)
	float BoostTorqueDamp; // 0x914 (0x4)
	float AfterBoostBrakingForce; // 0x918 (0x4)
	float AfterBoostBrakingDuration; // 0x91c (0x4)
	float AfterBoostBrakingMinSpeed; // 0x920 (0x4)
	float PitchAngleRequiredForFullThrust; // 0x924 (0x4)
	float DistanceToGroundForLanding; // 0x928 (0x4)
	float StartupDelay; // 0x92c (0x4)
	float LandingSequenceDelay; // 0x930 (0x4)
	float RotorsRadius; // 0x934 (0x4)
	float RotorsRadiusInner; // 0x938 (0x4)
	float NoDriverBrakeForce; // 0x93c (0x4)
	float TimeBetweenRotorDamageTicks; // 0x940 (0x4)
	float AutoLandingForce; // 0x944 (0x4)
	float RotorDamageBoxSweepLength; // 0x948 (0x4)
	float CriticalStateLiftForce; // 0x94c (0x4)
	float IdleRotationMultiplier; // 0x950 (0x4)
	float LiftPitchDegrees; // 0x954 (0x4)
	float MinAltitudeForIdleNoise; // 0x958 (0x4)
	float DefaultLinearDamp; // 0x95c (0x4)
	float DefaultAngularDamp; // 0x960 (0x4)
	float LandingLinearDamp; // 0x964 (0x4)
	float LandingAngularDamp; // 0x968 (0x4)
	float LandingLiftAlpha; // 0x96c (0x4)
	float CriticalStateThrustMultiplier; // 0x970 (0x4)
	float BodyUpDotThresholdForLanding; // 0x974 (0x4)
	int CriticalHealthThreshold; // 0x978 (0x4)
	float DamagePerImpulseWhileCritical; // 0x97c (0x4)
	float RotorImpulseLinear; // 0x980 (0x4)
	float RotorImpulseAngular; // 0x984 (0x4)
	float RotorImpulseCooldown; // 0x988 (0x4)
	float StartupLift; // 0x98c (0x4)
	float StartupLiftTime; // 0x990 (0x4)
	float MaxAltitude; // 0x994 (0x4)
	float AltitudeForSpinning; // 0x998 (0x4)
	float RotorMaxSpeed; // 0x99c (0x4)
	float RotorAccel; // 0x9a0 (0x4)
	float RotorDecel; // 0x9a4 (0x4)
	float ExplodeRotorDecel; // 0x9a8 (0x4)
	float MinRotorSpeedForSkippingStartup; // 0x9ac (0x4)
	float RotorSpeedForStartupLift; // 0x9b0 (0x4)
	float CriticalLiftForceDecay; // 0x9b4 (0x4)
	float CriticalYawTorqueMin; // 0x9b8 (0x4)
	float CriticalYawTorqueMax; // 0x9bc (0x4)
	float CriticalYawTorqueRampDuration; // 0x9c0 (0x4)
	float RotorTraceRotationSpeed; // 0x9c4 (0x4)
	float RotorTraceBoxSize; // 0x9c8 (0x4)
	float RotorTraceBoxHeight; // 0x9cc (0x4)
	float MaxCriticalFallForce; // 0x9d0 (0x4)
	float BoostFOV; // 0x9d4 (0x4)
	float GentleCrashTimeToExplode; // 0x9d8 (0x4)
	float CriticalTimeForGentleCrash; // 0x9dc (0x4)
	float AutoLandingYawTorque; // 0x9e0 (0x4)
	float MinHeightForAutoLandingYawTorque; // 0x9e4 (0x4)
	float MinSpeedForScrapingBottom; // 0x9e8 (0x4)
	float FallDamageHeightBuffer; // 0x9ec (0x4)
	float TimeBetweenRotorPlayerDamage; // 0x9f0 (0x4)
	float RotorMoveSpeedRequiredToUpdateTraceDirSqr; // 0x9f4 (0x4)
	float FoliageTraceRate; // 0x9f8 (0x4)
	float RotorWashTicksPerFrame; // 0x9fc (0x4)
	float CriticalHitRadius; // 0xa00 (0x4)
	float AngleNormalUpForLockMovement; // 0xa04 (0x4)
	float MaxAutoLandingTime; // 0xa08 (0x4)
	float SpeedThresholdForCrashed; // 0xa0c (0x4)
	float CritMultiplier; // 0xa10 (0x4)
	float AltitudeForSprings; // 0xa14 (0x4)
	float MaxCrashingTime; // 0xa18 (0x4)
	float MaxCrashingScrapingTime; // 0xa1c (0x4)
	float MaxCrashingTimeSpentNotMoving; // 0xa20 (0x4)
	float LandscapeRotorImpulseMag; // 0xa24 (0x4)
	float HealthThresholdForLandscapeRotorImpulse; // 0xa28 (0x4)
	float MaxHeightBuffer; // 0xa2c (0x4)
	bool bImpulseOnOuterRotorHitLandscape; // 0xa30 (0x1)
	bool bSkipRotorImpulses; // 0xa31 (0x1)
	bool bEnableCVarScaling; // 0xa32 (0x1)
	unsigned char unreflected_a33[0x1]; // 0xa33 (0x1) 
	float CVarScalingInterp; // 0xa34 (0x4)
	struct FVector FoliageTraceBoxSize; // 0xa38 (0x18)
	struct FVector WaterBoxSize; // 0xa50 (0x18)
	struct FVector WaterBoxOffset; // 0xa68 (0x18)
	struct FVector RotorOffsetFromActorLocationOnServer; // 0xa80 (0x18)
	bool bSkipContactRotations; // 0xa98 (0x1)
	unsigned char unreflected_a99[0x7]; // 0xa99 (0x7) 
	struct FScalableFloat MaxAutoLandHeightWhenOutOfFuel; // 0xaa0 (0x28)
};

