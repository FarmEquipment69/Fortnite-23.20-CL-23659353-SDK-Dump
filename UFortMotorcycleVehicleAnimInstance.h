// Class /Script/MotorcycleRuntime.FortMotorcycleVehicleAnimInstance
// Size: 0x660
class UFortMotorcycleVehicleAnimInstance : public UFortVehicleAnimInstance
{
	class AFortMotorcycleVehicle* MotorcycleVehicle; // 0x5f0 (0x8)
	struct FRotator SwingArmRotation; // 0x5f8 (0x18)
	bool bIsInInventoryMode; // 0x610 (0x1)
	unsigned char unreflected_611[0x7]; // 0x611 (0x7) 
	class UFortPlayerAnimInstance_MotorcycleDriver* DriverAnimInstance; // 0x618 (0x8)
	bool bIsBikeParked; // 0x620 (0x1)
	bool bIsBikeOn; // 0x621 (0x1)
	bool bIsBikeStopping; // 0x622 (0x1)
	bool bIsReversing; // 0x623 (0x1)
	float TotalSpeed; // 0x624 (0x4)
	bool bIsSurfaceWater; // 0x628 (0x1)
	unsigned char unreflected_629[0x3]; // 0x629 (0x3) 
	float AdditiveAlpha; // 0x62c (0x4)
	bool bIsRevving; // 0x630 (0x1)
	unsigned char unreflected_631[0x3]; // 0x631 (0x3) 
	float AccelAlpha; // 0x634 (0x4)
	bool bIsThrottling; // 0x638 (0x1)
	bool bIsHonking; // 0x639 (0x1)
	bool bIsSoloJumpTrickOutro; // 0x63a (0x1)
	bool bIsJumpTrickNone; // 0x63b (0x1)
	float BrakeLeverAlpha; // 0x63c (0x4)
	bool bShouldExitFromLocomotion; // 0x640 (0x1)
	bool bStateRuleFromRevvingToThrottle; // 0x641 (0x1)
	bool bShouldPlayThrottleAnim; // 0x642 (0x1)
	bool bStateTransitionRuleToMovingLoop; // 0x643 (0x1)
	bool bEarlyOutFromMovingStart; // 0x644 (0x1)
	bool bShouldStop; // 0x645 (0x1)
	bool bShouldReverse; // 0x646 (0x1)
	bool bShouldReverseStop; // 0x647 (0x1)
	bool bShouldStopThrottling; // 0x648 (0x1)
	bool bIsFromJumpTrick; // 0x649 (0x1)
	bool bIsSoloJumpTrick; // 0x64a (0x1)
	bool bShouldJump; // 0x64b (0x1)
	bool bIsMoving; // 0x64c (0x1)
	enum EFortMotorcycleAirTrickType AirTrickType; // 0x64d (0x1)
	bool bIsLandingInPlace; // 0x64e (0x1)
	bool bStateRuleFallingToMoving; // 0x64f (0x1)
	float JumpChargeFactor; // 0x650 (0x4)
	float ForwardSpeed; // 0x654 (0x4)
	bool bStoppie; // 0x658 (0x1)
	bool bIsBraking; // 0x659 (0x1)
	bool bShouldBrake; // 0x65a (0x1)
	bool bEarlyOutBrakingOutro; // 0x65b (0x1)
	bool bShouldJumpTrick; // 0x65c (0x1)
	bool bStateTransitionRuleToReverseLoop; // 0x65d (0x1)
	bool bIsReverseNoFeet; // 0x65e (0x1)
	unsigned char padding_65f[0x1]; // 0x65f (0x1)

	/* Functions */

	// Function /Script/MotorcycleRuntime.FortMotorcycleVehicleAnimInstance.CollectConditionsFromDriver (Underlying native function: CollectConditionsFromDriver 0x738bfcc)
	void CollectConditionsFromDriver(); // (Final | Native | Public | BlueprintCallable)
};

