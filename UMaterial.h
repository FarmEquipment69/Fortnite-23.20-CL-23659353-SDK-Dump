// Class /Script/Engine.Material
// Size: 0x1e8
class UMaterial : public UMaterialInterface
{
	class UPhysicalMaterial* PhysMaterial; // 0x98 (0x8)
	class UPhysicalMaterialMask* PhysMaterialMask; // 0xa0 (0x8)
	class UPhysicalMaterial* PhysicalMaterialMap[0x8]; // 0xa8 (0x8) (ARRAY) 
	struct TArray<class UPhysicalMaterial*> RenderTracePhysicalMaterialOutputs; // 0xe8 (0x10)
	struct TEnumAsByte<EMaterialDomain> MaterialDomain; // 0xf8 (0x1)
	struct TEnumAsByte<EBlendMode> BlendMode; // 0xf9 (0x1)
	struct TEnumAsByte<EStrataBlendMode> StrataBlendMode; // 0xfa (0x1)
	struct TEnumAsByte<EDecalBlendMode> DecalBlendMode; // 0xfb (0x1)
	struct TEnumAsByte<EMaterialDecalResponse> MaterialDecalResponse; // 0xfc (0x1)
	unsigned char unreflected_fd[0x3]; // 0xfd (0x3) 
	struct FMaterialOverrideNanite NaniteOverrideMaterial; // 0x100 (0x38)
	uint32_t CachedConnectedInputs; // 0x138 (0x4)
	struct TEnumAsByte<EMaterialShadingModel> ShadingModel; // 0x13c (0x1)
	unsigned char bCastDynamicShadowAsMasked; // 0x13d (0x1)
	struct FMaterialShadingModelField ShadingModels; // 0x13e (0x2)
	float OpacityMaskClipValue; // 0x140 (0x4)
	unsigned char bEnableSeparateTranslucency; // 0x144 (0x1)
	unsigned char bEnableResponsiveAA; // 0x144 (0x1)
	unsigned char bScreenSpaceReflections; // 0x144 (0x1)
	unsigned char bContactShadows; // 0x144 (0x1)
	unsigned char TwoSided; // 0x144 (0x1)
	unsigned char DitheredLODTransition; // 0x144 (0x1)
	unsigned char DitherOpacityMask; // 0x144 (0x1)
	unsigned char bAllowNegativeEmissiveColor; // 0x144 (0x1)
	struct TEnumAsByte<EMaterialTranslucencyPass> TranslucencyPass; // 0x145 (0x1)
	struct TEnumAsByte<ETranslucencyLightingMode> TranslucencyLightingMode; // 0x146 (0x1)
	unsigned char bEnableMobileSeparateTranslucency; // 0x147 (0x1)
	int NumCustomizedUVs; // 0x148 (0x4)
	float TranslucencyDirectionalLightingIntensity; // 0x14c (0x4)
	float TranslucentShadowDensityScale; // 0x150 (0x4)
	float TranslucentSelfShadowDensityScale; // 0x154 (0x4)
	float TranslucentSelfShadowSecondDensityScale; // 0x158 (0x4)
	float TranslucentSelfShadowSecondOpacity; // 0x15c (0x4)
	float TranslucentBackscatteringExponent; // 0x160 (0x4)
	struct FLinearColor TranslucentMultipleScatteringExtinction; // 0x164 (0x10)
	float TranslucentShadowStartOffset; // 0x174 (0x4)
	unsigned char bDisableDepthTest; // 0x178 (0x1)
	unsigned char bWriteOnlyAlpha; // 0x178 (0x1)
	unsigned char bGenerateSphericalParticleNormals; // 0x178 (0x1)
	unsigned char bTangentSpaceNormal; // 0x178 (0x1)
	unsigned char bUseEmissiveForDynamicAreaLighting; // 0x178 (0x1)
	unsigned char bUsedAsSpecialEngineMaterial; // 0x178 (0x1)
	unsigned char bUsedWithSkeletalMesh; // 0x178 (0x1)
	unsigned char bUsedWithEditorCompositing; // 0x178 (0x1)
	unsigned char bUsedWithParticleSprites; // 0x179 (0x1)
	unsigned char bUsedWithBeamTrails; // 0x179 (0x1)
	unsigned char bUsedWithMeshParticles; // 0x179 (0x1)
	unsigned char bUsedWithNiagaraSprites; // 0x179 (0x1)
	unsigned char bUsedWithNiagaraRibbons; // 0x179 (0x1)
	unsigned char bUsedWithNiagaraMeshParticles; // 0x179 (0x1)
	unsigned char bUsedWithGeometryCache; // 0x179 (0x1)
	unsigned char bUsedWithStaticLighting; // 0x179 (0x1)
	unsigned char bUsedWithMorphTargets; // 0x17a (0x1)
	unsigned char bUsedWithSplineMeshes; // 0x17a (0x1)
	unsigned char bUsedWithInstancedStaticMeshes; // 0x17a (0x1)
	unsigned char bUsedWithGeometryCollections; // 0x17a (0x1)
	unsigned char bUsesDistortion; // 0x17a (0x1)
	unsigned char bUsedWithClothing; // 0x17a (0x1)
	unsigned char unreflected_17b[0x1]; // 0x17b (0x1) 
	unsigned char bUsedWithWater; // 0x17c (0x1)
	unsigned char bUsedWithHairStrands; // 0x17c (0x1)
	unsigned char bUsedWithLidarPointCloud; // 0x17c (0x1)
	unsigned char bUsedWithVirtualHeightfieldMesh; // 0x17c (0x1)
	unsigned char bUsedWithNanite; // 0x17c (0x1)
	unsigned char unreflected_17d[0x3]; // 0x17d (0x3) 
	unsigned char bUsedWithUI; // 0x180 (0x1)
	unsigned char bAutomaticallySetUsageInEditor; // 0x180 (0x1)
	unsigned char bFullyRough; // 0x180 (0x1)
	unsigned char bUseFullPrecision; // 0x180 (0x1)
	struct TEnumAsByte<EMaterialFloatPrecisionMode> FloatPrecisionMode; // 0x181 (0x1)
	unsigned char bUseLightmapDirectionality; // 0x182 (0x1)
	unsigned char bMobileEnableHighQualityBRDF; // 0x182 (0x1)
	unsigned char bUseAlphaToCoverage; // 0x182 (0x1)
	unsigned char unreflected_183[0x1]; // 0x183 (0x1) 
	unsigned char bForwardRenderUsePreintegratedGFForSimpleIBL; // 0x184 (0x1)
	unsigned char unreflected_185[0x3]; // 0x185 (0x3) 
	unsigned char bUseHQForwardReflections; // 0x188 (0x1)
	unsigned char bForwardBlendsSkyLightCubemaps; // 0x188 (0x1)
	unsigned char bUsePlanarForwardReflections; // 0x188 (0x1)
	unsigned char bNormalCurvatureToRoughness; // 0x188 (0x1)
	unsigned char AllowTranslucentCustomDepthWrites; // 0x188 (0x1)
	unsigned char Wireframe; // 0x188 (0x1)
	struct TEnumAsByte<EMaterialShadingRate> ShadingRate; // 0x189 (0x1)
	unsigned char bCanMaskedBeAssumedOpaque; // 0x18a (0x1)
	unsigned char bIsMasked; // 0x18a (0x1)
	unsigned char bIsPreviewMaterial; // 0x18a (0x1)
	unsigned char bIsFunctionPreviewMaterial; // 0x18a (0x1)
	unsigned char bUseMaterialAttributes; // 0x18a (0x1)
	unsigned char bEnableExecWire; // 0x18a (0x1)
	unsigned char bEnableNewHLSLGenerator; // 0x18a (0x1)
	unsigned char bCastRayTracedShadows; // 0x18a (0x1)
	unsigned char bUseTranslucencyVertexFog; // 0x18b (0x1)
	unsigned char bApplyCloudFogging; // 0x18b (0x1)
	unsigned char bIsSky; // 0x18b (0x1)
	unsigned char bComputeFogPerPixel; // 0x18b (0x1)
	unsigned char bOutputTranslucentVelocity; // 0x18b (0x1)
	unsigned char bAllowDevelopmentShaderCompile; // 0x18b (0x1)
	unsigned char bIsMaterialEditorStatsMaterial; // 0x18b (0x1)
	struct TEnumAsByte<EBlendableLocation> BlendableLocation; // 0x18c (0x1)
	unsigned char BlendableOutputAlpha; // 0x18d (0x1)
	unsigned char bEnableStencilTest; // 0x18d (0x1)
	struct TEnumAsByte<EMaterialStencilCompare> StencilCompare; // 0x18e (0x1)
	unsigned char StencilRefValue; // 0x18f (0x1)
	struct TEnumAsByte<ERefractionMode> RefractionMode; // 0x190 (0x1)
	unsigned char unreflected_191[0x3]; // 0x191 (0x3) 
	int BlendablePriority; // 0x194 (0x4)
	unsigned char bIsBlendable; // 0x198 (0x1)
	unsigned char unreflected_199[0x3]; // 0x199 (0x3) 
	uint32_t UsageFlagWarnings; // 0x19c (0x4)
	float RefractionDepthBias; // 0x1a0 (0x4)
	struct FGuid StateId; // 0x1a4 (0x10)
	unsigned char padding_1b4[0x34]; // 0x1b4 (0x34)
};

