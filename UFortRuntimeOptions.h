// Class /Script/FortniteGame.FortRuntimeOptions
// Size: 0x1230
class UFortRuntimeOptions : public URuntimeOptionsBase
{
	struct TArray<struct FRuntimeOptionPlaysetPropActorPath*> CreativePlaysetPropActorPaths; // 0x38 (0x10)
	bool bCanAccoladesDeviceGrantAccolades; // 0x48 (0x1)
	unsigned char unreflected_49[0x7]; // 0x49 (0x7) 
	struct TArray<struct FCreativeBetaPermissionConfig> CreativeBetaPermissions; // 0x50 (0x10)
	bool bEnableItemDefinitionWhiteListing; // 0x60 (0x1)
	bool bEnableItemDefinitionWhiteListingForTransientPickups; // 0x61 (0x1)
	bool bEnableItemDefinitionBlockListForTransientPickups; // 0x62 (0x1)
	bool bAlwaysReadyUpAllLocalPlayersForMatchmaking; // 0x63 (0x1)
	unsigned char unreflected_64[0x4]; // 0x64 (0x4) 
	struct TArray<struct FCreativeIslandResource> IslandResources; // 0x68 (0x10)
	struct TArray<struct TWeakObjectPtr<class UClass>> VolumeManagerBannedClasses; // 0x78 (0x10)
	int CreativeIslandDescriptionTagsMaxQty; // 0x88 (0x4)
	unsigned char unreflected_8c[0x4]; // 0x8c (0x4) 
	struct TArray<struct FCreativeIslandDescriptionTag> CreativeIslandDescriptionTagsWhitelist; // 0x90 (0x10)
	struct TArray<struct FString> CreativeIslandTypeBlocklist; // 0xa0 (0x10)
	struct TArray<struct FExperimentalCohortPercent> ExperimentalCohortPercent; // 0xb0 (0x10)
	struct TArray<struct FExperimentalBucketPercentList> ExperimentalBucketPercentList; // 0xc0 (0x10)
	bool bEnableSpectatorUpdates; // 0xd0 (0x1)
	bool bEnableNPCInteractionsForSpectators; // 0xd1 (0x1)
	bool bIsTournamentMode; // 0xd2 (0x1)
	bool bIsOutOfSeasonMode; // 0xd3 (0x1)
	bool bForceBRMode; // 0xd4 (0x1)
	bool bLoadDirectlyIntoLobby; // 0xd5 (0x1)
	bool bAllowBPTokenRefund; // 0xd6 (0x1)
	bool bEnableSpeculativeCreativeMMTeamSizeFix; // 0xd7 (0x1)
	bool bUseTournamentAnonymousOverrideEnabled; // 0xd8 (0x1)
	bool bForceDisallowAnonymousMode; // 0xd9 (0x1)
	bool bEnableGeneratedScreenshotForPortalPreview; // 0xda (0x1)
	bool bAllowLoadoutSwitchingInLobby; // 0xdb (0x1)
	int IngameMatchmakingDelaySeconds; // 0xdc (0x4)
	int NumSavedLoadouts; // 0xe0 (0x4)
	struct FName TournamentPlaylistName; // 0xe4 (0x4)
	int TournamentPlaylistPriorityBase; // 0xe8 (0x4)
	float TournamentModeQueueInterval; // 0xec (0x4)
	int MinimumAccountLevelForTournamentPlay; // 0xf0 (0x4)
	bool bEnableManualBroadcasterStart; // 0xf4 (0x1)
	bool bCreativeManualBroadcasterStart; // 0xf5 (0x1)
	bool bCreativeEnableTimerForPhoneToolEnforcement; // 0xf6 (0x1)
	bool bAutoloadRestrictedPlots; // 0xf7 (0x1)
	bool bDisableMyIslandDescriptionPanel; // 0xf8 (0x1)
	bool bEnableAllRemoteClientInfos; // 0xf9 (0x1)
	bool bEnableBuildPreviewForBroadcast; // 0xfa (0x1)
	bool bEnableRemoteAimSnapshotManagerForBroadcast; // 0xfb (0x1)
	float EsportsAnalyticsHeartbeatRate; // 0xfc (0x4)
	bool bUseBroadcastPostProcessing; // 0x100 (0x1)
	bool bUseBroadcastKillFeed; // 0x101 (0x1)
	bool bUseServerReplayActionFeed; // 0x102 (0x1)
	bool bReplayGoToTimeEnabled; // 0x103 (0x1)
	bool bBroadcastPipModeToggle; // 0x104 (0x1)
	bool bShowBroadcastPlayerEventScoreWidget; // 0x105 (0x1)
	bool bUseOutsideTopThreeSpectatorLeaderboard; // 0x106 (0x1)
	bool bReplayPauseZeroDeltas; // 0x107 (0x1)
	int CurrentSocialImportVersion; // 0x108 (0x4)
	float PawnDeathScreenDelay; // 0x10c (0x4)
	int CurrentVKImportVersion; // 0x110 (0x4)
	bool bEnableMassFriendImport; // 0x114 (0x1)
	bool bEnableSocialTab; // 0x115 (0x1)
	bool bAllowSocialPresenceUpdates; // 0x116 (0x1)
	bool bEnableToastSocialWidget; // 0x117 (0x1)
	bool bEnableToastSocialWidgetInStW; // 0x118 (0x1)
	bool bEnableINICachedSocialStatus; // 0x119 (0x1)
	unsigned char unreflected_11a[0x2]; // 0x11a (0x2) 
	int MaxINICachedSocialStatuses; // 0x11c (0x4)
	double MinSecondsBetweenINICachedSocialStatuses; // 0x120 (0x8)
	int NumDaysBeforeFailedImportReattempt; // 0x128 (0x4)
	bool bEnableSocialBanModal; // 0x12c (0x1)
	bool bEnableDedicatedServerSocialBanVoiceQuery; // 0x12d (0x1)
	bool bEnableDedicatedServerSocialBanVoiceEnforcement; // 0x12e (0x1)
	bool bDisplayLastOnlineTime; // 0x12f (0x1)
	bool bDisplayLastInteraction; // 0x130 (0x1)
	bool bEnableStartupSocialImport; // 0x131 (0x1)
	bool bEnableBladeRAF; // 0x132 (0x1)
	unsigned char unreflected_133[0x1]; // 0x133 (0x1) 
	int MinNumberOfInvitesToShowMultFriendAcctionAccept; // 0x134 (0x4)
	bool bEnableStartupErebusFriendImport; // 0x138 (0x1)
	bool bEnableVKImport; // 0x139 (0x1)
	bool bEnableSteamImport; // 0x13a (0x1)
	unsigned char unreflected_13b[0x5]; // 0x13b (0x5) 
	struct FString SocialImportURI; // 0x140 (0x10)
	int DaysBetweenSocialImportPrompts; // 0x150 (0x4)
	int DaysBetweenVKImportPrompt; // 0x154 (0x4)
	int FriendImportCaptionSelection; // 0x158 (0x4)
	bool bEnableSplitWalletTextNotice; // 0x15c (0x1)
	bool bShowAthenaStoreToast; // 0x15d (0x1)
	bool bShowAthenaStoreToastForRolloverAlone; // 0x15e (0x1)
	bool bAllow3DInspectOfRMTItems; // 0x15f (0x1)
	bool bAltUpdateFlow; // 0x160 (0x1)
	bool bShowRMTDescriptionPopup; // 0x161 (0x1)
	bool bAllowJuniorEndingMovie; // 0x162 (0x1)
	unsigned char unreflected_163[0x5]; // 0x163 (0x5) 
	struct TArray<struct FName> AthenaStarterGameMode; // 0x168 (0x10)
	bool AthenaStarterFill; // 0x178 (0x1)
	bool bPartyMembersFollowPartyLeaderRegion; // 0x179 (0x1)
	unsigned char unreflected_17a[0x2]; // 0x17a (0x2) 
	float PartyRichPresenceUpdateTime; // 0x17c (0x4)
	float PartySuggestionUpdateTimer; // 0x180 (0x4)
	int MaxPartySuggestionsToConsider; // 0x184 (0x4)
	bool bAllowLFG; // 0x188 (0x1)
	bool bAllowPartyPresenceUpdates; // 0x189 (0x1)
	bool bAllowGameplayPresenceUpdates; // 0x18a (0x1)
	bool bEnablePlaylistNameInRichPresence; // 0x18b (0x1)
	bool bAllowDiscordFrictionlessJoin; // 0x18c (0x1)
	bool bEnableInteractiveConsumables; // 0x18d (0x1)
	bool bEnableContextHelpMenu; // 0x18e (0x1)
	bool bShowAthenaItemShop; // 0x18f (0x1)
	bool bEnableShowdown; // 0x190 (0x1)
	bool bEnableTournamentMatchCaps; // 0x191 (0x1)
	bool bUsePlayingEventIds; // 0x192 (0x1)
	bool bRetryCMSLoads; // 0x193 (0x1)
	float RefreshScoreDelay; // 0x194 (0x4)
	bool bAlwaysForceTournamentLobbyPanelRefresh; // 0x198 (0x1)
	bool bEnableEventLeaderboards; // 0x199 (0x1)
	unsigned char unreflected_19a[0x2]; // 0x19a (0x2) 
	int NumCachedLeaderboardPages; // 0x19c (0x4)
	int MaxPagesPerLeaderboard; // 0x1a0 (0x4)
	int EventLeaderboardLiveRefreshTimeSeconds; // 0x1a4 (0x4)
	int EventLeaderboardLivePostEventRefreshWindowMinutes; // 0x1a8 (0x4)
	bool bGetLiveSessionsFromLeaderboards; // 0x1ac (0x1)
	bool bUseServerTournamentPlacementNotifications; // 0x1ad (0x1)
	bool bEnableCreativeTournamentStatTrackersNotifications; // 0x1ae (0x1)
	unsigned char unreflected_1af[0x1]; // 0x1af (0x1) 
	int MaximumEventLengthHoursForCallout; // 0x1b0 (0x4)
	bool bEnableHypeLeaderboards; // 0x1b4 (0x1)
	bool bEnableSwapRegionsButton; // 0x1b5 (0x1)
	bool bFillCompetitivePanelFromDiscovery; // 0x1b6 (0x1)
	unsigned char unreflected_1b7[0x1]; // 0x1b7 (0x1) 
	struct FString HypeLeaderboardEventId; // 0x1b8 (0x10)
	int HypeLeaderboardRefreshTimeSeconds; // 0x1c8 (0x4)
	bool bHypeLeaderboardIncludeFriendsTab; // 0x1cc (0x1)
	unsigned char unreflected_1cd[0x3]; // 0x1cd (0x3) 
	struct FName CreativePlaylistName; // 0x1d0 (0x4)
	struct FName BattleLabPlaylistName; // 0x1d4 (0x4)
	struct FName CampaignPlaylistName; // 0x1d8 (0x4)
	bool bEnableEventScoreClamping; // 0x1dc (0x1)
	unsigned char unreflected_1dd[0x3]; // 0x1dd (0x3) 
	int CreativeDisabledTabIndex; // 0x1e0 (0x4)
	bool bAllowIslandExporting; // 0x1e4 (0x1)
	bool bAllowCreativeModeratorMode; // 0x1e5 (0x1)
	bool bIslandExportingEnabledMCPOverride; // 0x1e6 (0x1)
	bool bEnableCreativeServerImportFriendsOption; // 0x1e7 (0x1)
	int MaxPlayersInCreativeServer; // 0x1e8 (0x4)
	int MaxPlayersInCreativeWhitelist; // 0x1ec (0x4)
	bool bShowSupportACreatorOnIslandLinkScreen; // 0x1f0 (0x1)
	bool bHideServersWithZeroPlayers; // 0x1f1 (0x1)
	bool bEnableIslandCodeEntryOnPlayerPortal; // 0x1f2 (0x1)
	bool bEnableIslandCodeEntryOnCuratedPortal; // 0x1f3 (0x1)
	bool bEnableIslandCodeEntryInFrontend; // 0x1f4 (0x1)
	unsigned char unreflected_1f5[0x3]; // 0x1f5 (0x3) 
	float RefreshFavoriteIslandsWaitTime; // 0x1f8 (0x4)
	int IslandCodeLength; // 0x1fc (0x4)
	bool bApplyCodeFormatting; // 0x200 (0x1)
	bool bEnableCreativePortalContentStatusUpdateMessages; // 0x201 (0x1)
	bool bAdvertiseBattleLabOwnerInSession; // 0x202 (0x1)
	bool bEnableThermometerUIForBattleLab; // 0x203 (0x1)
	bool bEnableSpatialThermometerForBattleLab; // 0x204 (0x1)
	bool bEnableHeatmapUIDisplayForCreative; // 0x205 (0x1)
	bool bEnableHeatmapUIDisplayForBattleLab; // 0x206 (0x1)
	bool bUseHeatmapHighPrecison; // 0x207 (0x1)
	bool bEnableBudgetTrackerSpatialTest; // 0x208 (0x1)
	bool bEnableSpatialThermometerForCreative; // 0x209 (0x1)
	bool bEnableSpatialSettingsForCreative; // 0x20a (0x1)
	bool bIsMatchmakingEnabledForPlayers; // 0x20b (0x1)
	float CreativeHeatmapThermometerCellSize; // 0x20c (0x4)
	bool bEnableThermomterCostPreviwer; // 0x210 (0x1)
	bool bEnableSlateVersionOfThermometer; // 0x211 (0x1)
	bool bEnableJoinInProgress; // 0x212 (0x1)
	bool bEnableSpectateAPartyMember; // 0x213 (0x1)
	bool bEnableJoinAndSpectate; // 0x214 (0x1)
	bool bEnableRequestToJoin; // 0x215 (0x1)
	unsigned char unreflected_216[0x2]; // 0x216 (0x2) 
	int MaxNumAlivePlayersForSpectateAPartyMember; // 0x218 (0x4)
	int MaxNumPartyMemberSpectatorsPerMatch; // 0x21c (0x4)
	struct TArray<struct FRuntimeOptionSpectateAPartyMemberOverride*> SpectateAPartyMemberPlaylistOverrides; // 0x220 (0x10)
	bool bEnableJoinInProgressInMatchmakingWidget; // 0x230 (0x1)
	bool bAnyPartyMemberAllowedToCancelMatchmakingV2; // 0x231 (0x1)
	bool bEnableLockerSearch; // 0x232 (0x1)
	bool bEnableLockerDirtySearch; // 0x233 (0x1)
	bool bEnableBattlePass; // 0x234 (0x1)
	bool bEnableBattlePassFAQ; // 0x235 (0x1)
	bool bShowBattlePassBangAfterPurchase; // 0x236 (0x1)
	bool bShowBattlePassBangEveryLevel; // 0x237 (0x1)
	bool bShowBattlePassBangs; // 0x238 (0x1)
	bool bShowBattlePassLandingPageBangs; // 0x239 (0x1)
	bool bBattlePassVideoDelay; // 0x23a (0x1)
	bool bShowBattlePassLandingPageInGame; // 0x23b (0x1)
	bool bEnableAthenaFavoriting; // 0x23c (0x1)
	bool bShowAthenaDailyQuests; // 0x23d (0x1)
	bool bEnableAthenaCustomPreviewActionForCosmetics; // 0x23e (0x1)
	bool bEnableAthenaItemRandomization; // 0x23f (0x1)
	bool bEnableProfileStatTracking; // 0x240 (0x1)
	bool bEnableProfileStatUI; // 0x241 (0x1)
	bool bEnableTrickUI; // 0x242 (0x1)
	bool bEnableMultiplayerTricks; // 0x243 (0x1)
	bool bCreateEpicAccountPinGrantDisabled; // 0x244 (0x1)
	bool bLoginEpicWeb; // 0x245 (0x1)
	bool bEnableClientSettingsSaveToCloud; // 0x246 (0x1)
	bool bEnableClientSettingsSaveToDisk; // 0x247 (0x1)
	bool bEnableClientSettingsRestoreInputPresets; // 0x248 (0x1)
	unsigned char unreflected_249[0x3]; // 0x249 (0x3) 
	int bDedServerEventServiceDownloadTryCount; // 0x24c (0x4)
	int TournamentRefreshPayoutMaxRateSeconds; // 0x250 (0x4)
	int TournamentRefreshEventsMaxRateSeconds; // 0x254 (0x4)
	int TournamentRefreshPlayerMaxRateSeconds; // 0x258 (0x4)
	float TournamentHUDPointCounterDelay; // 0x25c (0x4)
	int MaxNumDisplayNamesOnLiveGameList; // 0x260 (0x4)
	int LiveGameListInitialLimit; // 0x264 (0x4)
	int LiveGameListQueryIncreaseAmount; // 0x268 (0x4)
	bool bEnableLiveGamesScreen; // 0x26c (0x1)
	bool bLiveGameTimeDurationVisible; // 0x26d (0x1)
	bool bEnableFlagSelection; // 0x26e (0x1)
	unsigned char unreflected_26f[0x1]; // 0x26f (0x1) 
	struct FString DefaultFlagRegionId; // 0x270 (0x10)
	struct FString MixedNationTeamFlagRegionId; // 0x280 (0x10)
	struct TArray<struct FString> DisabledFlagSelections; // 0x290 (0x10)
	int FlagChangeCooldownDays; // 0x2a0 (0x4)
	bool bEnableEventServicePayouts; // 0x2a4 (0x1)
	bool bLiveGamesClientAnalyticsEnabled; // 0x2a5 (0x1)
	unsigned char unreflected_2a6[0x2]; // 0x2a6 (0x2) 
	float MinimumWaitTimeToRequestNewShowdownScoreForWindow; // 0x2a8 (0x4)
	int EventServicePayoutRefreshRateSeconds; // 0x2ac (0x4)
	int EventServicePayoutRefreshSpreadSeconds; // 0x2b0 (0x4)
	float BundleLoaderWidgetTimerInterval; // 0x2b4 (0x4)
	struct TArray<struct FString> CancelledEvents; // 0x2b8 (0x10)
	int SecondsShowStartingMatchMessageForScheduledMMEvents; // 0x2c8 (0x4)
	bool bEnableMatchAbandonProcess; // 0x2cc (0x1)
	unsigned char unreflected_2cd[0x3]; // 0x2cd (0x3) 
	float MatchAbandonTimeout; // 0x2d0 (0x4)
	bool bEnableMultidivisionTournamentEventIdQuorum; // 0x2d4 (0x1)
	unsigned char unreflected_2d5[0x3]; // 0x2d5 (0x3) 
	double CloudSaveIntervalConfig; // 0x2d8 (0x8)
	bool bSaveToCloudOnMapLoad; // 0x2e0 (0x1)
	bool bSaveToCloudOnSuspend; // 0x2e1 (0x1)
	bool bSaveToCloudOnDeactivate; // 0x2e2 (0x1)
	bool bSaveToCloudOnTerminate; // 0x2e3 (0x1)
	bool bSaveToCloudOnExit; // 0x2e4 (0x1)
	bool bSaveToCloudOnLogout; // 0x2e5 (0x1)
	unsigned char unreflected_2e6[0x2]; // 0x2e6 (0x2) 
	double GiftNotificationRefreshTimer; // 0x2e8 (0x8)
	bool bEnableUndoPurchase; // 0x2f0 (0x1)
	bool bMoveUndoToBottomBar; // 0x2f1 (0x1)
	bool bShowStoreBanner; // 0x2f2 (0x1)
	unsigned char unreflected_2f3[0x1]; // 0x2f3 (0x1) 
	float InGameStoreUpdateChance; // 0x2f4 (0x4)
	bool bEnableReplayBrowser; // 0x2f8 (0x1)
	unsigned char unreflected_2f9[0x7]; // 0x2f9 (0x7) 
	struct TArray<uint32_t> ReplayCompatAllowList; // 0x300 (0x10)
	bool bAllowAllReplays; // 0x310 (0x1)
	bool bEnableReplayRecording; // 0x311 (0x1)
	bool bEnableLargeTeamReplayRecording; // 0x312 (0x1)
	bool bEnableCreativeModeReplayRecording; // 0x313 (0x1)
	bool bEnablePlaygroundModeReplayRecording; // 0x314 (0x1)
	bool bEnableSplitscreenReplayRecording; // 0x315 (0x1)
	bool bEnableReplayDemoSplitting; // 0x316 (0x1)
	bool bStableReplayPlayback; // 0x317 (0x1)
	bool bEnableHearingAccessibility; // 0x318 (0x1)
	bool bDisableSpatializationInsteadOfMutingWhenHearingAccessibilityEnabled; // 0x319 (0x1)
	bool bAllowVisualizingSoundsWithStereoAudio; // 0x31a (0x1)
	bool bEnableMetaSoundTestCampfire; // 0x31b (0x1)
	bool bEnableMetaSoundTestSkydive; // 0x31c (0x1)
	bool bEnableMetaSoundTestNPCMusic; // 0x31d (0x1)
	bool bEnableMetaSoundTestGunfire; // 0x31e (0x1)
	bool bEnableMetaSoundTestIceSurface; // 0x31f (0x1)
	bool bEnableMetaSoundTestWindSpline; // 0x320 (0x1)
	bool bEnableMetaSoundTestTrickMusic; // 0x321 (0x1)
	bool bDisableGifting; // 0x322 (0x1)
	bool bImmediateClaimOfEmote; // 0x323 (0x1)
	bool bForceRestrictChat; // 0x324 (0x1)
	unsigned char unreflected_325[0x3]; // 0x325 (0x3) 
	int GiftLimitAmount; // 0x328 (0x4)
	bool bBattlePassGiftingEmergencyDisable; // 0x32c (0x1)
	bool bEnableBattlePassGiftingButton; // 0x32d (0x1)
	bool bEnableBattlePassGiftingButtonTokenOnly; // 0x32e (0x1)
	bool bShowBPGiftBoxPopup; // 0x32f (0x1)
	float EndBattleRoyalUpdateDelay; // 0x330 (0x4)
	float LightswitchDownLoginDelay; // 0x334 (0x4)
	bool bShowStatusButtonOnWaitingRoomScreen; // 0x338 (0x1)
	bool bInvertMotionOnUnattachedSwitchControllers; // 0x339 (0x1)
	bool bDisableTouchLookVelocityScaling; // 0x33a (0x1)
	bool bDisablePurchaseHistoryScreen; // 0x33b (0x1)
	bool bEnableRedeemOfflinePurchasesToasts; // 0x33c (0x1)
	bool bAllowProcessedPayoutsToRefreshProfile; // 0x33d (0x1)
	unsigned char unreflected_33e[0x2]; // 0x33e (0x2) 
	float TouchAimAssistStrengthScalar; // 0x340 (0x4)
	bool bDisableTouchAimAssistAutoTracking; // 0x344 (0x1)
	bool bProcessGamepadInputOnMobile; // 0x345 (0x1)
	bool bMobileForceGamepadHUDWhenAttached; // 0x346 (0x1)
	bool bDisableLegacyControls; // 0x347 (0x1)
	bool bFixAimAssistDeadzoneExploit; // 0x348 (0x1)
	enum ECrucibleWhitelistOverride CrucibleWhitelistOverride; // 0x349 (0x1)
	bool bDisableCrucibleStatUpload; // 0x34a (0x1)
	bool bDisableCrucibleStatDownload; // 0x34b (0x1)
	bool bDisableCrucibleGlobalLeaderboards; // 0x34c (0x1)
	bool bDisableCrucibleFriendLeaderboards; // 0x34d (0x1)
	bool bDisableCrucibleAnalyticsEvents; // 0x34e (0x1)
	bool bDisableCrucibleDestroyDeadBots; // 0x34f (0x1)
	bool bDisableCrucibleForcedGC; // 0x350 (0x1)
	bool bDisableCrucibleLeaderboardFilterText; // 0x351 (0x1)
	bool bDisableCrucibleLeaderboardSwitching; // 0x352 (0x1)
	bool bCrucibleLockToPlatform; // 0x353 (0x1)
	bool bCrucibleSendStatsEndOfSession; // 0x354 (0x1)
	bool bCrucibleSendStatsEndOfSessionOnShutdownEvent; // 0x355 (0x1)
	unsigned char unreflected_356[0x2]; // 0x356 (0x2) 
	int CrucibleMinValidStatScoreMilliseconds; // 0x358 (0x4)
	int CrucibleLeaderboardFriendQueryMaxSize; // 0x35c (0x4)
	bool bCrucibleLeaderboardEnableDisplayNameIcons; // 0x360 (0x1)
	bool bEnableFortLeaderboardHelperDisplayNonPlatformNames; // 0x361 (0x1)
	bool bEnableFortLeaderboardHelperConsolePlatformNameSearch; // 0x362 (0x1)
	bool bEnableFortLeaderboardHelperConsoleDisplayNameFallback; // 0x363 (0x1)
	bool bDisableCollectionStatsUpload; // 0x364 (0x1)
	bool bDisableCollectionStatsDownload; // 0x365 (0x1)
	unsigned char unreflected_366[0x2]; // 0x366 (0x2) 
	int CollectionStatsFriendQueryMaxSize; // 0x368 (0x4)
	bool bSoundIndicatorsAlwaysEnabled; // 0x36c (0x1)
	bool bSoundIndicatorsEnabledForTeammates; // 0x36d (0x1)
	bool bSoundIndicatorsPooled; // 0x36e (0x1)
	unsigned char unreflected_36f[0x1]; // 0x36f (0x1) 
	int SoundIndicatorMaxNum; // 0x370 (0x4)
	int TencentDefaultBookStatSeason; // 0x374 (0x4)
	bool bEquipFirstWeaponOnMobile; // 0x378 (0x1)
	bool bClearLastFireOnAbilityFailed; // 0x379 (0x1)
	bool bUsePrototypeSubGameLoadingScreen; // 0x37a (0x1)
	bool bForcePrototypeLoadingScreenScaling; // 0x37b (0x1)
	float ShowEliminationDistanceOver; // 0x37c (0x4)
	float FadeOutTeamIndicatorsAfter; // 0x380 (0x4)
	float FadeOutNPCEnemyIndicatorsAfter; // 0x384 (0x4)
	float FadeOutEnemyIndicatorsAfter; // 0x388 (0x4)
	float FadeOutWorldItemIndicatorsAfter; // 0x38c (0x4)
	float FadeOutHardCoreBeaconIndicatorsAfter; // 0x390 (0x4)
	float MapIndicatorTouchClearDistance; // 0x394 (0x4)
	struct FVector2D MapIndicatorOffset; // 0x398 (0x10)
	float AthenaMapZoomMax; // 0x3a8 (0x4)
	float BacchusMapIndicatorSizeMultiplier; // 0x3ac (0x4)
	float AthenaMapPanSpeedMultiplier; // 0x3b0 (0x4)
	float AthenaMapZoomSpeedMultiplier; // 0x3b4 (0x4)
	bool bAthenaMapMapIconsFlowEnabled; // 0x3b8 (0x1)
	unsigned char unreflected_3b9[0x3]; // 0x3b9 (0x3) 
	float WaitTimeBeforeShowingNewModeViolator; // 0x3bc (0x4)
	struct FRuntimeOptionLocalizableString FriendCodeShareWarningMessage; // 0x3c0 (0x10)
	struct FRuntimeOptionLocalizableString PlatformPlayAllowedErrorMessage; // 0x3d0 (0x10)
	bool bOnlyShareURLWithNoMessage; // 0x3e0 (0x1)
	bool bExcludeURLInShareMessage; // 0x3e1 (0x1)
	bool bEnableContextTutorial; // 0x3e2 (0x1)
	bool bDebugForcePlayerSurveys; // 0x3e3 (0x1)
	bool bFeedbackTextShown; // 0x3e4 (0x1)
	bool bEnableBadMatchPopup; // 0x3e5 (0x1)
	unsigned char unreflected_3e6[0x2]; // 0x3e6 (0x2) 
	int BadMatchIncidentThreshold; // 0x3e8 (0x4)
	float BadConnectionUpdateTime; // 0x3ec (0x4)
	int BadMatchPopupRecallInterval; // 0x3f0 (0x4)
	unsigned char unreflected_3f4[0x4]; // 0x3f4 (0x4) 
	struct FString AthenaCodeOfConductURL; // 0x3f8 (0x10)
	struct FString KairosCommunityRulesURL; // 0x408 (0x10)
	struct FString BacchusFriendCodeShareURL; // 0x418 (0x10)
	struct FString CreateAccountUrl; // 0x428 (0x10)
	struct FString GooglePlayRatingURL; // 0x438 (0x10)
	struct FString LinkAccountURL; // 0x448 (0x10)
	struct FString AccountMergeMoreInfoURL; // 0x458 (0x10)
	bool bEnableFactionTechScreen; // 0x468 (0x1)
	bool bRequireFactionChoiceOnInfiltrationPlay; // 0x469 (0x1)
	unsigned char unreflected_46a[0x2]; // 0x46a (0x2) 
	int TotalPlayerTechLevelsToShow; // 0x46c (0x4)
	struct FString SupportURL; // 0x470 (0x10)
	struct FString CheckStatusURL; // 0x480 (0x10)
	struct FString iOSAppStoreURL; // 0x490 (0x10)
	struct FString TurnOnMfaURL; // 0x4a0 (0x10)
	struct FString ArenaResetTime; // 0x4b0 (0x10)
	struct FString ListOfCreatorsURL; // 0x4c0 (0x10)
	bool bAllowCodeRedemptionInSubgameSelect; // 0x4d0 (0x1)
	bool bEnableAutomaticMOTD; // 0x4d1 (0x1)
	bool bShowMOTDInLobby; // 0x4d2 (0x1)
	bool bMOTDSameNewsForCreative; // 0x4d3 (0x1)
	bool bSkipSubgameSelect; // 0x4d4 (0x1)
	enum ENewsExternalURLMode BRUpdatesURLMode; // 0x4d5 (0x1)
	unsigned char unreflected_4d6[0x2]; // 0x4d6 (0x2) 
	struct FString BRUpdatesURL; // 0x4d8 (0x10)
	enum ENewsExternalURLMode STWUpdatesURLMode; // 0x4e8 (0x1)
	unsigned char unreflected_4e9[0x7]; // 0x4e9 (0x7) 
	struct FString STWUpdatesURL; // 0x4f0 (0x10)
	struct FString GiftingInfoURL; // 0x500 (0x10)
	struct FString PrivacyPolicyURL; // 0x510 (0x10)
	struct FString FanContentPolicyURL; // 0x520 (0x10)
	struct FString TermsOfServiceURL; // 0x530 (0x10)
	int GuardianChallengeLengthDays; // 0x540 (0x4)
	bool bAgeGateFlowEnabled; // 0x544 (0x1)
	bool bEnableContentControls; // 0x545 (0x1)
	unsigned char unreflected_546[0x2]; // 0x546 (0x2) 
	struct FString ContentControlsMoreInfoURL; // 0x548 (0x10)
	struct FString ContentControlsForgotPinURL; // 0x558 (0x10)
	struct FString ContentControlsVerifyEmailURL; // 0x568 (0x10)
	bool bEnableContentControlsPlaytimeReporting; // 0x578 (0x1)
	bool bEnableContentControlsPurchaseReporting; // 0x579 (0x1)
	bool bContentControlsViewUGCEnabled; // 0x57a (0x1)
	unsigned char unreflected_57b[0x1]; // 0x57b (0x1) 
	int bContentControlsFriendRequestPinLength; // 0x57c (0x4)
	int InitializeKWSWithCCSSettingsCount; // 0x580 (0x4)
	int TargetDeltaUpdateKWSWithCCSSettings; // 0x584 (0x4)
	int ShowSettingReviewModal; // 0x588 (0x4)
	unsigned char unreflected_58c[0x4]; // 0x58c (0x4) 
	struct TArray<struct FString> SettingsToAddToReviewModal; // 0x590 (0x10)
	int ShowParentalControlsUpdatedModal; // 0x5a0 (0x4)
	int ShowEnterCabinModeModal; // 0x5a4 (0x4)
	int MaxNumItemsInCreativeChests; // 0x5a8 (0x4)
	int MaxStackSizeForCreativeResources; // 0x5ac (0x4)
	int MaxStreamerMatchmakingDelay; // 0x5b0 (0x4)
	bool bEnableHiddenMatchmakingDelay; // 0x5b4 (0x1)
	unsigned char unreflected_5b5[0x3]; // 0x5b5 (0x3) 
	struct FString TencentStoreDetailsURL; // 0x5b8 (0x10)
	int PSALoadingScreenPercentChance; // 0x5c8 (0x4)
	unsigned char unreflected_5cc[0x4]; // 0x5cc (0x4) 
	struct FString StwDownloadLauncherOption; // 0x5d0 (0x10)
	struct FRuntimeOptionLocalizableString OverrideDefaultBonusXpEventTitleString; // 0x5e0 (0x10)
	struct FRuntimeOptionLocalizableString XBLDisableText; // 0x5f0 (0x10)
	struct FRuntimeOptionLocalizableString PSNDisableText; // 0x600 (0x10)
	struct FRuntimeOptionLocalizableString SwitchDisableText; // 0x610 (0x10)
	struct FRuntimeOptionReviewPromptCriteria ReviewPromptCriteria; // 0x620 (0x14)
	bool bDisableAllKnobs; // 0x634 (0x1)
	bool bDisableAllGameplayMessages; // 0x635 (0x1)
	bool bDisableMatchmakingKnobs; // 0x636 (0x1)
	bool bDisableMinigameKnobs; // 0x637 (0x1)
	bool bDisableGameOptionKnobs; // 0x638 (0x1)
	bool bDisableAffiliateFeature; // 0x639 (0x1)
	bool bUseHotfixedAffiliateNamesArray; // 0x63a (0x1)
	bool bEnablePrerollLlamas; // 0x63b (0x1)
	bool bEnableSubregionNetworkAccelerators; // 0x63c (0x1)
	unsigned char unreflected_63d[0x3]; // 0x63d (0x3) 
	struct TArray<struct FString> DisabledNetworkAcceleratedSubregions; // 0x640 (0x10)
	struct TArray<struct FString> AdvertisedNetworkAcceleratedSubregions; // 0x650 (0x10)
	bool bShowAccountItemWarningForVaultThreshold; // 0x660 (0x1)
	unsigned char unreflected_661[0x3]; // 0x661 (0x3) 
	int DaysBetweenAccountItemWarnings; // 0x664 (0x4)
	float VaultLimitThresholdForAccountItemWarning; // 0x668 (0x4)
	bool bShowAccountItemWarningForItemCount; // 0x66c (0x1)
	unsigned char unreflected_66d[0x3]; // 0x66d (0x3) 
	int AlwaysWarnAccountItemCount; // 0x670 (0x4)
	unsigned char unreflected_674[0x4]; // 0x674 (0x4) 
	struct TArray<struct FRuntimeOptionTabStateInfo*> DisabledFrontendNavigationTabs; // 0x678 (0x10)
	struct TArray<struct FRuntimeOptionTabStateInfo*> DisabledTabsForOutOfSeason; // 0x688 (0x10)
	struct TArray<struct FRuntimeOptionTabStateInfo*> TournamentDisabledFrontendNavigationTabs; // 0x698 (0x10)
	struct TArray<struct FString> DisabledMatchmakingKnobs; // 0x6a8 (0x10)
	struct TArray<struct FString> HiddenMatchmakingKnobs; // 0x6b8 (0x10)
	struct TArray<struct FRuntimeOptionDisabledGameplayMessage*> DisabledGameplayMessages; // 0x6c8 (0x10)
	int NumGameplayMessageChannels; // 0x6d8 (0x4)
	unsigned char unreflected_6dc[0x4]; // 0x6dc (0x4) 
	struct TArray<struct FString> AffiliateNames; // 0x6e0 (0x10)
	struct FDateTime* DPlusVBuckPromoStart; // 0x6f0 (0x8)
	struct FDateTime* DPlusVBuckPromoEnd; // 0x6f8 (0x8)
	struct TArray<struct FString> CountryCodesForDPlusVBuckOverride; // 0x700 (0x10)
	struct FDateTime* RockyRidgeStart; // 0x710 (0x8)
	struct TArray<struct FRuntimeOptionTournamentScoreThreshold*> SoloTournamentScoreThresholds; // 0x718 (0x10)
	struct TArray<struct FRuntimeOptionTournamentScoreThreshold*> DuoTournamentScoreThresholds; // 0x728 (0x10)
	struct TArray<struct FRuntimeOptionTournamentScoreThreshold*> SquadsTournamentScoreThresholds; // 0x738 (0x10)
	float PickingInteractDistance; // 0x748 (0x4)
	float PickingHighlightMovementUpdateDist; // 0x74c (0x4)
	float PickingHighlightUpdateTime; // 0x750 (0x4)
	float PickingTime; // 0x754 (0x4)
	float AutoPickingInteractDistanceFactor; // 0x758 (0x4)
	float AutoOpenDoorInputMagnitude; // 0x75c (0x4)
	float AutoOpenDoorTraceDistance; // 0x760 (0x4)
	bool bAutofireEnabled; // 0x764 (0x1)
	bool bShowXPWidgets; // 0x765 (0x1)
	bool bShowAccoladesListWidget; // 0x766 (0x1)
	bool bEnableInGameMatchmaking; // 0x767 (0x1)
	bool bUseNewFlowIngameMatchmaking; // 0x768 (0x1)
	bool bToggleIGMAnalytics; // 0x769 (0x1)
	unsigned char unreflected_76a[0x6]; // 0x76a (0x6) 
	struct TArray<struct FString> WhitelistedInGameMatchmakingRegions; // 0x770 (0x10)
	struct TArray<struct FString> WhitelistedInGameMatchmakingSubRegions; // 0x780 (0x10)
	struct TArray<struct FString> BlacklistedInGameMatchmakingSubRegions; // 0x790 (0x10)
	struct TArray<struct FName> BlacklistedInGameMatchmakingPlaylists; // 0x7a0 (0x10)
	struct TArray<struct FName> SubRegionWhitelistedInGameMatchmakingPlaylists; // 0x7b0 (0x10)
	bool bAllowPreserveSquad; // 0x7c0 (0x1)
	bool bAllowPreserveSquadMemberVoting; // 0x7c1 (0x1)
	bool bKeepPlayingTogether; // 0x7c2 (0x1)
	bool bPartyRift; // 0x7c3 (0x1)
	bool bAutofireUsesComponent; // 0x7c4 (0x1)
	bool bAutofireUsesAutoaimTarget; // 0x7c5 (0x1)
	bool bHoldToFireOnAutofireTarget; // 0x7c6 (0x1)
	unsigned char unreflected_7c7[0x1]; // 0x7c7 (0x1) 
	float DefaultAutofireRange; // 0x7c8 (0x4)
	float AutofireExtraTrackingRange; // 0x7cc (0x4)
	bool bServerNetDriverAnalytics; // 0x7d0 (0x1)
	bool bClientNetDriverAnalytics; // 0x7d1 (0x1)
	bool bDisableReplicationGraph; // 0x7d2 (0x1)
	unsigned char unreflected_7d3[0x1]; // 0x7d3 (0x1) 
	float BRServerMaxTickRate; // 0x7d4 (0x4)
	float DoubleTapOnEndTouchTime; // 0x7d8 (0x4)
	float DoubleTapOnStartTouchTime; // 0x7dc (0x4)
	float DoubleTapDistance; // 0x7e0 (0x4)
	float SingleTapDistance; // 0x7e4 (0x4)
	float TouchMoveStickRadius; // 0x7e8 (0x4)
	float TouchMoveStickRadiusTargeting; // 0x7ec (0x4)
	float TouchMoveStickRadiusScoped; // 0x7f0 (0x4)
	float TouchMoveStickRadiusDriving; // 0x7f4 (0x4)
	float AutorunLockZoneOffset; // 0x7f8 (0x4)
	float AutorunLockZoneDelay; // 0x7fc (0x4)
	float MoveOriginResetTime; // 0x800 (0x4)
	float MoveOriginResetDistance; // 0x804 (0x4)
	float MoveOriginFollowDistance; // 0x808 (0x4)
	bool bDisableTouchLookInertia; // 0x80c (0x1)
	unsigned char unreflected_80d[0x3]; // 0x80d (0x3) 
	float RotateInertiaMultiplier; // 0x810 (0x4)
	float RotateInertiaMinTime; // 0x814 (0x4)
	float RotateInertiaMinLength; // 0x818 (0x4)
	float RotateInertiaMinMagnitude; // 0x81c (0x4)
	int RotateInertiaNumAveragedTouches; // 0x820 (0x4)
	bool bTouchQuickbarTapToLockEnabled; // 0x824 (0x1)
	bool bTouchInteractInUIAvailable; // 0x825 (0x1)
	bool bTouchInteractInUIForced; // 0x826 (0x1)
	bool bEnableHUDLayoutTool; // 0x827 (0x1)
	bool bEnableHUDLayoutCloudSave; // 0x828 (0x1)
	bool bEnableHUDLayoutToolPanZoom; // 0x829 (0x1)
	bool bEnableMobileHUDV2; // 0x82a (0x1)
	bool bEnableHUDLayoutToolV2; // 0x82b (0x1)
	bool bEnableHUDLayoutToolV2GridSnap; // 0x82c (0x1)
	bool bEnableGFNSettingEditCondition; // 0x82d (0x1)
	unsigned char unreflected_82e[0x2]; // 0x82e (0x2) 
	float AthenaExternalRichPresenceDelayTimeSeconds; // 0x830 (0x4)
	bool bEnableExternalPresenceAthenaPlayersRemain; // 0x834 (0x1)
	unsigned char unreflected_835[0x3]; // 0x835 (0x3) 
	float MinimumTimeBetweenConsolePresenceUpdates; // 0x838 (0x4)
	float MinimumTimeBetweenMCPPresenceUpdates; // 0x83c (0x4)
	int PreloadMapUIDestructionVersion; // 0x840 (0x4)
	int TimeBetweenStorePatchCheckRequestsSeconds; // 0x844 (0x4)
	bool bInviteUIDisabled; // 0x848 (0x1)
	bool bEnableInGameMipsAnalyticsReporting; // 0x849 (0x1)
	unsigned char unreflected_84a[0x2]; // 0x84a (0x2) 
	float SecondsBetweenTextureStatsGathering; // 0x84c (0x4)
	bool bEnableMipsCapExperiment; // 0x850 (0x1)
	unsigned char unreflected_851[0x3]; // 0x851 (0x3) 
	int CurrentMipsCapExperimentVersion; // 0x854 (0x4)
	bool bEnableQualitySelectionScreen; // 0x858 (0x1)
	bool bEnableQualityLevelSelectScreenTimer; // 0x859 (0x1)
	bool bEnableDownloadAnalyticsReporting; // 0x85a (0x1)
	bool bEnableDownloadHeartbeat; // 0x85b (0x1)
	float DownloadHeartbeatIntervalInSeconds; // 0x85c (0x4)
	bool bEnableFriendsListButton; // 0x860 (0x1)
	bool bForceDisableCrossplatformSquadFill; // 0x861 (0x1)
	bool bRequireCrossplayOptIn; // 0x862 (0x1)
	bool bUseAccountCrossplayPermissions; // 0x863 (0x1)
	bool bSingleCrossplayOptInPrompt; // 0x864 (0x1)
	bool bImmediatelyDisplayCrossplayOptInSTW; // 0x865 (0x1)
	bool bImmediatelyDisplayCrossplayOptInBR; // 0x866 (0x1)
	bool bCrossplayOptInByDefault; // 0x867 (0x1)
	bool bShowIconForSamePlatformPlayers; // 0x868 (0x1)
	bool bObscuredPlatformIcons; // 0x869 (0x1)
	bool bEnableChatWidget; // 0x86a (0x1)
	bool bShowVoiceChatSettings; // 0x86b (0x1)
	bool bUseClientSettingsForControllerImage; // 0x86c (0x1)
	bool bPartyInProgress; // 0x86d (0x1)
	bool bEnableSidebarExit; // 0x86e (0x1)
	bool bEnableSidebarExpressYourSupport; // 0x86f (0x1)
	bool bEnableHotTamaleWithVeggies; // 0x870 (0x1)
	bool bUseJoinablePartyEntry2; // 0x871 (0x1)
	bool bEnableRebootRally; // 0x872 (0x1)
	bool bEnableRebootRallyData; // 0x873 (0x1)
	bool bEnableHotTamale; // 0x874 (0x1)
	bool bEnableHotTamaleWithCheese; // 0x875 (0x1)
	bool bEnableHotTamaleWithOnions; // 0x876 (0x1)
	bool bEnableHotTamaleWithRice; // 0x877 (0x1)
	bool bEnableReportPlayerFromSocialProfile; // 0x878 (0x1)
	bool bEnableHotTamaleWithTofu; // 0x879 (0x1)
	unsigned char unreflected_87a[0x2]; // 0x87a (0x2) 
	int HotTamaleWithVeggiesEditorTooltipDurationSeconds; // 0x87c (0x4)
	int HotTamaleWithVeggiesTabTooltipDurationSeconds; // 0x880 (0x4)
	int RebootRallyTooltipDurationSeconds; // 0x884 (0x4)
	bool HotTamaleWithVeggiesHidesLastInteraction; // 0x888 (0x1)
	unsigned char unreflected_889[0x3]; // 0x889 (0x3) 
	struct FName HotTamaleWithVeggiesStringTable; // 0x88c (0x4)
	int SidebarSupervisedSettingsTooltipDurationSeconds; // 0x890 (0x4)
	int SidebarVoiceChatPanelSupervisedSettingsTooltipDurationSeconds; // 0x894 (0x4)
	bool bEnableSocialNotificationSetting; // 0x898 (0x1)
	bool bShowPartyJoinabilityInSettingsAcount; // 0x899 (0x1)
	bool bEnablePRMTargetingSettings; // 0x89a (0x1)
	bool bEnableDiscoveryTargetingSettings; // 0x89b (0x1)
	bool bSkipCCSDownloadUser; // 0x89c (0x1)
	bool bShowHideSocialNamesSetting; // 0x89d (0x1)
	bool bShowSquadMembersNamesVisibilityInParentalControls; // 0x89e (0x1)
	bool bShouldAthenaQueryRecentPlayers; // 0x89f (0x1)
	bool bEnableAwayFriendsList; // 0x8a0 (0x1)
	bool bEnableRecentPlayerList; // 0x8a1 (0x1)
	bool bEnableSuggestedFriendList; // 0x8a2 (0x1)
	bool bEnableBlockedList; // 0x8a3 (0x1)
	bool bEnableFriendListInGame; // 0x8a4 (0x1)
	bool bPushJIPInfoToPlatformPresence; // 0x8a5 (0x1)
	bool bEnableStWInZonePrivacyChange; // 0x8a6 (0x1)
	bool bEnableSitoutOption; // 0x8a7 (0x1)
	bool bEnableSitoutOptionSTW; // 0x8a8 (0x1)
	bool bEnableSocialPanelLeaveParty; // 0x8a9 (0x1)
	bool bEnableMainMenuLeaveParty; // 0x8aa (0x1)
	unsigned char unreflected_8ab[0x1]; // 0x8ab (0x1) 
	int MinUSSNameLength; // 0x8ac (0x4)
	bool bEnableNewSocialPlayerAvatars; // 0x8b0 (0x1)
	bool bEnableNickname; // 0x8b1 (0x1)
	bool bAllowNicknameEmoji; // 0x8b2 (0x1)
	unsigned char unreflected_8b3[0x5]; // 0x8b3 (0x5) 
	struct TArray<struct FString> NicknameEmojiBlacklist; // 0x8b8 (0x10)
	bool bNicknameInFront; // 0x8c8 (0x1)
	bool bShowAccountBoosts; // 0x8c9 (0x1)
	bool bShowCustomerSupport; // 0x8ca (0x1)
	bool bEnableChannelChangePopup; // 0x8cb (0x1)
	bool bEnableVoiceSpeakerWidget; // 0x8cc (0x1)
	bool bEnableSpeakerWidgetZonePerfMode; // 0x8cd (0x1)
	bool bShowVoiceIndicatorsWhileLoading; // 0x8ce (0x1)
	bool bEnableVoiceChannelSelectionUI; // 0x8cf (0x1)
	bool bEnableGlobalChat; // 0x8d0 (0x1)
	bool bEnableAllTabInChat; // 0x8d1 (0x1)
	bool bEnableEULA; // 0x8d2 (0x1)
	bool bEnableEndOfZoneCinematic; // 0x8d3 (0x1)
	bool bEnableOnboardingCinematics; // 0x8d4 (0x1)
	unsigned char unreflected_8d5[0x3]; // 0x8d5 (0x3) 
	struct TArray<struct FName> VideoDisplayDataBlacklist; // 0x8d8 (0x10)
	bool bShowFounderBannerIcons; // 0x8e8 (0x1)
	bool bShowCurrentRegionInLobby; // 0x8e9 (0x1)
	bool bEnableFoundersDailyRewards; // 0x8ea (0x1)
	bool bEnableTwitchIntegration; // 0x8eb (0x1)
	bool bEnableMatchmakingRegionSetting; // 0x8ec (0x1)
	bool bEnableReadyupButtonWhileSittingout; // 0x8ed (0x1)
	bool bEnableEulaRequiredTournaments; // 0x8ee (0x1)
	bool bEnableMFARequiredTournaments; // 0x8ef (0x1)
	bool bAllTournamentsRequireMFA; // 0x8f0 (0x1)
	bool bSpectatorBroadcasterSkipMfaEulaCheck; // 0x8f1 (0x1)
	bool bEnableLiveSpectatorEulaCheck; // 0x8f2 (0x1)
	unsigned char unreflected_8f3[0x5]; // 0x8f3 (0x5) 
	struct FString LiveSpectatorEulaKey; // 0x8f8 (0x10)
	bool bEnableNaviationToChat; // 0x908 (0x1)
	bool bEnableLanguageSetting; // 0x909 (0x1)
	bool bEnableFriendCodeSetting; // 0x90a (0x1)
	bool bEnableEarlyAccessLoadingScreenBanner; // 0x90b (0x1)
	bool bClientIgnoreIsTournamentCheck; // 0x90c (0x1)
	unsigned char unreflected_90d[0x3]; // 0x90d (0x3) 
	int CampaignMatchEndRetryCount; // 0x910 (0x4)
	int StWTutorialDownloadAttempts; // 0x914 (0x4)
	bool bShopPurchaseConfirmation; // 0x918 (0x1)
	bool bShopPurchaseConfirmationJapanPS4; // 0x919 (0x1)
	bool bToyMessagingEnabled; // 0x91a (0x1)
	bool bAllowAccessToAllEmotesForTesting; // 0x91b (0x1)
	bool bAllowAccessToStWHeroOutfitsAndBackblingForTesting; // 0x91c (0x1)
	bool bEnableCosmeticItemShopInSTW; // 0x91d (0x1)
	bool bRequireEmoteOwnershipInPIE; // 0x91e (0x1)
	bool bEnableSTWLootDrops; // 0x91f (0x1)
	bool bEnableSTWContainerItemCacheDrops; // 0x920 (0x1)
	bool bEnableSTWEnemyItemCacheDrops; // 0x921 (0x1)
	bool bEnableHoldToPickupUI; // 0x922 (0x1)
	bool bSkipTrailerMovie; // 0x923 (0x1)
	bool bAlwaysPlayTrailerMovie; // 0x924 (0x1)
	bool bHideUnaffordableMtxPurchases; // 0x925 (0x1)
	bool bDisableCTAInMtxStoreSelection; // 0x926 (0x1)
	bool bAthenaFrontEndUsePushPopMTXStore; // 0x927 (0x1)
	bool bHidePlusOnVbucksButton; // 0x928 (0x1)
	bool bAllowXboxStwAccessDuringLiveStoreOutage; // 0x929 (0x1)
	bool bShowReplayTrailerButtonAthena; // 0x92a (0x1)
	bool bEnableAlterationModification; // 0x92b (0x1)
	bool bEnableSchematicRarityUpgrade; // 0x92c (0x1)
	bool bEnableMissionActivationVote; // 0x92d (0x1)
	bool bEnableLtmRetrieveTheData; // 0x92e (0x1)
	bool bEnableUpgradesVideos; // 0x92f (0x1)
	bool bEnableExternalRichPresence; // 0x930 (0x1)
	bool bShowEnableMFAModalAtStartupAthena; // 0x931 (0x1)
	bool bShowEnableMFAModalAtStartupSTW; // 0x932 (0x1)
	bool bEnableAIBuildingHitFX; // 0x933 (0x1)
	int LevelToStartShowingMFAModal; // 0x934 (0x4)
	int DaysBetweenEnableMFAModalPrompts; // 0x938 (0x4)
	float DelayGiftButtonWhenMFANotEnabledSeconds; // 0x93c (0x4)
	int LevelToAutoOpenBattlePassOnNewSeason; // 0x940 (0x4)
	int ForceSeasonRefreshCounter; // 0x944 (0x4)
	int ForceVideoRefreshCounter; // 0x948 (0x4)
	bool bForceBattlePassPreview; // 0x94c (0x1)
	bool bCanShowSTWUpsellInBR; // 0x94d (0x1)
	bool bShowLeaderboardPrivacySettings; // 0x94e (0x1)
	bool bEnableServerScoreboardLog; // 0x94f (0x1)
	bool bEnableAsyncScoreboardFlush; // 0x950 (0x1)
	bool bEnableInputBasedMatchmaking; // 0x951 (0x1)
	bool bUsingAlternateMatchmakingModel; // 0x952 (0x1)
	bool bNotifyBlockedInput; // 0x953 (0x1)
	int NumberOfFramesBeforeWarnInputBlocked; // 0x954 (0x4)
	bool bDisableVideoOptions; // 0x958 (0x1)
	bool bEnableBattlePassWatchVideoActionOnCell; // 0x959 (0x1)
	bool bEnableBattlePassReplayCinematicAction; // 0x95a (0x1)
	bool bEnableCareerReplayCinematicAction; // 0x95b (0x1)
	float RadioInputDebounceSeconds; // 0x95c (0x4)
	float RadioTuningRetryTime; // 0x960 (0x4)
	int RadioTuningRetryCount; // 0x964 (0x4)
	bool bEnableBattlePassSocialFriends; // 0x968 (0x1)
	bool bEnableBattlePassSocialFriendsOfDifferentPlatforms; // 0x969 (0x1)
	bool bEnableBattlePassSocialFriendsServerSide; // 0x96a (0x1)
	bool bEnableSimulatedXPForBattlePassSocialFriends; // 0x96b (0x1)
	bool bEnableBattlePassPreviewOnRewardScreen; // 0x96c (0x1)
	bool bEnableHoldToCloseOnRewardsScreen; // 0x96d (0x1)
	unsigned char unreflected_96e[0x2]; // 0x96e (0x2) 
	int BattleStarsNeededToShowRewardPreview; // 0x970 (0x4)
	int ShowBattlePassTracker; // 0x974 (0x4)
	bool bDisplayBattlePassRewardsIndividually; // 0x978 (0x1)
	bool bDisplayOnlyBattlePassFAQ; // 0x979 (0x1)
	bool bEnableBPVideo; // 0x97a (0x1)
	bool bEnableUEKGameSelect; // 0x97b (0x1)
	bool bCompletelyDisableUEKGameSelect; // 0x97c (0x1)
	bool bAlwaysPlayBPVideo; // 0x97d (0x1)
	bool bDisableGRL; // 0x97e (0x1)
	bool bShowBPPreviewVideo; // 0x97f (0x1)
	bool bShowBPTrackTimeLeft; // 0x980 (0x1)
	bool bDisplayAllCharactersOnBattlePassPreviewScreen; // 0x981 (0x1)
	bool bRefreshBattlePassCatalogOnSeasonDataLoaded; // 0x982 (0x1)
	bool bEnableChallengeHolidayVideo; // 0x983 (0x1)
	bool bEnableCareerScreenVideo; // 0x984 (0x1)
	bool bEnableSpecialEventVideo; // 0x985 (0x1)
	bool bEnableCNVideo; // 0x986 (0x1)
	bool bDisableElectraViaPlayerLimits; // 0x987 (0x1)
	bool bEnableWinterfestPurchaseButton; // 0x988 (0x1)
	bool bEnableWinterfestGiftButton; // 0x989 (0x1)
	bool bForceWinterfestInfoModalButtonVisible; // 0x98a (0x1)
	unsigned char unreflected_98b[0x1]; // 0x98b (0x1) 
	int NumViewsToDisplayWinterfestInfoModalButton; // 0x98c (0x4)
	bool bCheckForPatchUpdateOnMatchmakingPlayClick; // 0x990 (0x1)
	bool bCheckForPatchUpdateOnItemShopActivate; // 0x991 (0x1)
	unsigned char unreflected_992[0x6]; // 0x992 (0x6) 
	struct TArray<struct FString> HiddenSettings; // 0x998 (0x10)
	bool bDisplayPlayerReportingRoles; // 0x9a8 (0x1)
	bool bDisplayRelevantPlayersForPlayerReporting; // 0x9a9 (0x1)
	bool bPreventMultipleReportsOfSamePlayer; // 0x9aa (0x1)
	bool bAllowReportingFeaturedIslands; // 0x9ab (0x1)
	bool bForceGamepadPlaytest; // 0x9ac (0x1)
	bool bEnableNewFireModeSelection; // 0x9ad (0x1)
	bool bEnableHUDPresetSelection; // 0x9ae (0x1)
	bool bEnableAddFriendWhileSpectating; // 0x9af (0x1)
	bool bEnableFriendLink; // 0x9b0 (0x1)
	unsigned char unreflected_9b1[0x3]; // 0x9b1 (0x3) 
	float PlatformChatToastDisplaySeconds; // 0x9b4 (0x4)
	float HPMicrophoneToastDisplaySeconds; // 0x9b8 (0x4)
	unsigned char unreflected_9bc[0x4]; // 0x9bc (0x4) 
	struct FString FriendLinkURL; // 0x9c0 (0x10)
	bool bAllowForceTouchFire; // 0x9d0 (0x1)
	unsigned char unreflected_9d1[0x3]; // 0x9d1 (0x3) 
	float VehicleSessionMinTimeUsed; // 0x9d4 (0x4)
	float RebootChipExpirationTime; // 0x9d8 (0x4)
	float RebootDirectiveDisplayTime; // 0x9dc (0x4)
	bool bDonutIdleGameEnabled; // 0x9e0 (0x1)
	bool bRebootEnableInventoryDisplay; // 0x9e1 (0x1)
	bool bUseHordeStormShield; // 0x9e2 (0x1)
	unsigned char unreflected_9e3[0x1]; // 0x9e3 (0x1) 
	float HordeStormShieldStartingRadiusOverride; // 0x9e4 (0x4)
	float HordeStormShieldEndingRadiusOverride; // 0x9e8 (0x4)
	float HordeStormShieldBreatherRadiusOverride; // 0x9ec (0x4)
	bool bUseHordeRespawnAtLastPawnLocation; // 0x9f0 (0x1)
	bool bAllowHordePlayerTriggeredRespawn; // 0x9f1 (0x1)
	unsigned char unreflected_9f2[0x2]; // 0x9f2 (0x2) 
	int MaxQuickScopeAimAssistPulls; // 0x9f4 (0x4)
	float MaxQuickScopeAimAssistPullWatchTime; // 0x9f8 (0x4)
	bool bShouldDisablePickaxeFXFrontendPreview; // 0x9fc (0x1)
	bool bRegisterPawnsWithSignificanceManagerInFrontEnd; // 0x9fd (0x1)
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnPS4; // 0x9fe (0x1)
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnXB1; // 0x9ff (0x1)
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch; // 0xa00 (0x1)
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnPS4STWOnly; // 0xa01 (0x1)
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnXB1STWOnly; // 0xa02 (0x1)
	bool bHideExclusiveCosmeticsFromOtherPlatformsOnSwitchSTWOnly; // 0xa03 (0x1)
	bool bSimpleHeistVanEntrance; // 0xa04 (0x1)
	unsigned char unreflected_a05[0x3]; // 0xa05 (0x3) 
	struct FString LobbyGenericLinkButtonURL; // 0xa08 (0x10)
	bool bEnableLobbyGenericLinkButton; // 0xa18 (0x1)
	unsigned char unreflected_a19[0x7]; // 0xa19 (0x7) 
	struct FRuntimeOptionLocalizableString LobbyGenericLinkButtonText; // 0xa20 (0x10)
	int HighlightClipRewindTimeInSeconds; // 0xa30 (0x4)
	bool bEnableAntiTaxi; // 0xa34 (0x1)
	unsigned char unreflected_a35[0x3]; // 0xa35 (0x3) 
	float StopFlyingParachuteCooldownTime; // 0xa38 (0x4)
	float FlushLoadingScreenRefreshSeconds; // 0xa3c (0x4)
	bool bEnableVehicleSpawnMissionInStw; // 0xa40 (0x1)
	bool bEnableDownTierCraftingInStw; // 0xa41 (0x1)
	bool bShowBugReportsButton; // 0xa42 (0x1)
	bool bShowCommentReportsButton; // 0xa43 (0x1)
	bool bShowContentReportsButton; // 0xa44 (0x1)
	bool bEnableItemRefundingInStw; // 0xa45 (0x1)
	bool bDisableCareerStatsButton; // 0xa46 (0x1)
	bool bDisableCareerLeaderboardButton; // 0xa47 (0x1)
	bool bDisableCareerStatsPagePlatformProfileButton; // 0xa48 (0x1)
	bool bUsePlatformSpecificTextOnCareerPage; // 0xa49 (0x1)
	bool bDisableViewOtherProfilesFromCompLeaderboards; // 0xa4a (0x1)
	bool bShowOtherPlayerStatsOnCareerPage; // 0xa4b (0x1)
	bool bShowFeatsOnClient; // 0xa4c (0x1)
	bool bShowHardcoreModifiers; // 0xa4d (0x1)
	unsigned char unreflected_a4e[0x2]; // 0xa4e (0x2) 
	int InputMethodThrashingLimit; // 0xa50 (0x4)
	float InputMethodThrashingWindowInSeconds; // 0xa54 (0x4)
	bool bEnableLogUploadForTokenHolders; // 0xa58 (0x1)
	unsigned char unreflected_a59[0x3]; // 0xa59 (0x3) 
	float TokenHolderLogTailSizeKb; // 0xa5c (0x4)
	bool bAllowPartialBackgroundAudio; // 0xa60 (0x1)
	bool bDuplicateRemovedPlayersOnClient; // 0xa61 (0x1)
	unsigned char unreflected_a62[0x2]; // 0xa62 (0x2) 
	struct FPlayerMarkerConfig PlayerMarkerConfig; // 0xa64 (0x64)
	bool bIsCreativeMultiSelectEnabled; // 0xac8 (0x1)
	bool bEnableUserProfilePictures; // 0xac9 (0x1)
	bool bEnableChannelsServiceLoadTesting; // 0xaca (0x1)
	bool bAllowMimicingEmotes; // 0xacb (0x1)
	bool bAllowMimicingEmotesInFrontend; // 0xacc (0x1)
	bool bAllowAsyncTooltipLoading; // 0xacd (0x1)
	bool bAllowListViewAsyncLoading; // 0xace (0x1)
	bool bEnableBackToPartyHubButton; // 0xacf (0x1)
	bool bEnableMobileAvailableLootingListView; // 0xad0 (0x1)
	bool bEnableDisambiguateLoading; // 0xad1 (0x1)
	unsigned char unreflected_ad2[0x2]; // 0xad2 (0x2) 
	int NumDaysToSnoozeGooglePlayRating; // 0xad4 (0x4)
	int NumDaysAllowedToDelayGoogleRating; // 0xad8 (0x4)
	bool bEnableMobileInGameAppRating; // 0xadc (0x1)
	unsigned char unreflected_add[0x3]; // 0xadd (0x3) 
	int PreloadRevision; // 0xae0 (0x4)
	bool bEnableLiveStoreTilePreviews; // 0xae4 (0x1)
	bool bUseLegacyItemShopOfferDetails; // 0xae5 (0x1)
	bool bEnableLiveStoreTilePreviewsInGame; // 0xae6 (0x1)
	bool bAllowedToEnableUIGlobalInvalidation; // 0xae7 (0x1)
	bool bEnableAutoMulchInStW; // 0xae8 (0x1)
	bool bAllStWMoonbeamHUD; // 0xae9 (0x1)
	unsigned char unreflected_aea[0x2]; // 0xaea (0x2) 
	int MaxCharactersInTextEntry; // 0xaec (0x4)
	struct TArray<struct FString> IllegalIslandTitleCharacters; // 0xaf0 (0x10)
	struct TArray<int> IllegalIslandTitleChars; // 0xb00 (0x10)
	bool bEnableCreativeUserTextSanitizationWithToxicityService; // 0xb10 (0x1)
	bool bEnableCreativeUserTextSanitizationWithPlatformSanitizer; // 0xb11 (0x1)
	bool bEnableCreativeUserTextSanitizationWithChatSanitizer; // 0xb12 (0x1)
	bool bUseToxicityAsCreativeMainTextSanitizer; // 0xb13 (0x1)
	bool bUseLegacyAsyncSanitizationLogicInCreative; // 0xb14 (0x1)
	unsigned char unreflected_b15[0x3]; // 0xb15 (0x3) 
	float KeepPlayingTogetherDuration; // 0xb18 (0x4)
	float KeepPlayingTogetherTickFrequency; // 0xb1c (0x4)
	struct TMap<struct FGameplayTag, float> PawnVisibilityDurationOverrides; // 0xb20 (0x50)
	int HotfixVersionId; // 0xb70 (0x4)
	bool bCanTurboBuildOutsideBuildModeWithBuildTool; // 0xb74 (0x1)
	unsigned char unreflected_b75[0x3]; // 0xb75 (0x3) 
	float MaxBuildingIntoTerrainIntersectionPercentage; // 0xb78 (0x4)
	bool bUsingBuildingExtraPiece; // 0xb7c (0x1)
	unsigned char unreflected_b7d[0x3]; // 0xb7d (0x3) 
	int AnalyticsBuildingWallTooLowLocations; // 0xb80 (0x4)
	bool bDisableClientEngagementsAnalytics; // 0xb84 (0x1)
	unsigned char unreflected_b85[0x3]; // 0xb85 (0x3) 
	float AnalyticsClientEngagementsTimeoutSeconds; // 0xb88 (0x4)
	int AnalyticsClientEngagementsMaxSendPerMinute; // 0xb8c (0x4)
	int AnalyticsClientEngagementsMaxSendOnCleanup; // 0xb90 (0x4)
	bool bAnalyticsClientEngagementsRequireTimeToReturnFireToSend; // 0xb94 (0x1)
	unsigned char unreflected_b95[0x3]; // 0xb95 (0x3) 
	int AnalyticsClientEngagementsParticipationPercent; // 0xb98 (0x4)
	bool PublishingEnabledForWhitelistedAccounts; // 0xb9c (0x1)
	unsigned char unreflected_b9d[0x3]; // 0xb9d (0x3) 
	struct FString IslandCodeLinkMnemonicExampleText; // 0xba0 (0x10)
	struct FString IslandCodeLinkURLText; // 0xbb0 (0x10)
	struct FString FeaturedCreativeLTMAffiliateName; // 0xbc0 (0x10)
	bool bEnableCreativeLTMSupportCreator; // 0xbd0 (0x1)
	unsigned char unreflected_bd1[0x7]; // 0xbd1 (0x7) 
	struct FString CreativePublishCodeURLPrefix; // 0xbd8 (0x10)
	bool bCreativeMinimapRendering; // 0xbe8 (0x1)
	bool bCreativeMinimapCaptureLighting; // 0xbe9 (0x1)
	bool bCreativeMapRenderingInHub; // 0xbea (0x1)
	bool bCreativeMapWaitForVolumeReady; // 0xbeb (0x1)
	unsigned char unreflected_bec[0x4]; // 0xbec (0x4) 
	struct TArray<struct FString> CuratedLinkCodes; // 0xbf0 (0x10)
	struct TArray<struct FString> CuratedIslandTemplateCodes; // 0xc00 (0x10)
	struct TMap<struct FString, struct FFortPlaylistCuratedContent> PlaylistCuratedContent; // 0xc10 (0x50)
	bool bEnableIslandCheckpoints; // 0xc60 (0x1)
	bool bEnableIslandLoadNetSafeGuards; // 0xc61 (0x1)
	unsigned char unreflected_c62[0x6]; // 0xc62 (0x6) 
	struct TMap<struct FString, struct FString> PlaylistCuratedHub; // 0xc68 (0x50)
	struct TMap<struct FString, struct FString> CreativeIslandImageURLOverrides; // 0xcb8 (0x50)
	struct FString CreativeIslandGeneratedImageURLOverride; // 0xd08 (0x10)
	bool bLoadingScreenInputPreprocessorEnabled; // 0xd18 (0x1)
	bool AllowInputTypeFilterForAccessibility; // 0xd19 (0x1)
	bool AllowLockPrimaryInputMethodToMouseForAccessibility; // 0xd1a (0x1)
	bool bEnableLiveStream; // 0xd1b (0x1)
	bool bEnableLiveStreamCountdown; // 0xd1c (0x1)
	unsigned char unreflected_d1d[0x3]; // 0xd1d (0x3) 
	struct FDateTime* LiveStreamStartTime; // 0xd20 (0x8)
	bool bEnableLiveStreamInMatch; // 0xd28 (0x1)
	bool bShowLiveStreamInMatchByDefault; // 0xd29 (0x1)
	bool bCaptureTeamFrontendFlag; // 0xd2a (0x1)
	unsigned char unreflected_d2b[0x1]; // 0xd2b (0x1) 
	struct FName VideoHolidayName; // 0xd2c (0x4)
	struct FName VideoBattlePassName; // 0xd30 (0x4)
	struct FName VideoCareerScreenName; // 0xd34 (0x4)
	struct FName VideoChallengeScreenName; // 0xd38 (0x4)
	struct FName VideoFrontEndName; // 0xd3c (0x4)
	float FTUESeasonTrailerBoundary; // 0xd40 (0x4)
	float VideoDurationOffsetFromTransition; // 0xd44 (0x4)
	float VideoDurationOffsetFromEnd; // 0xd48 (0x4)
	unsigned char unreflected_d4c[0x4]; // 0xd4c (0x4) 
	struct FSeasonVideoIDs SeasonVideoIDs; // 0xd50 (0x40)
	int EOSGCVerticalRes; // 0xd90 (0x4)
	int EOSGCLength; // 0xd94 (0x4)
	bool bEnableGCBeforeVideoPlayback; // 0xd98 (0x1)
	unsigned char unreflected_d99[0x3]; // 0xd99 (0x3) 
	float EOneVideoLength; // 0xd9c (0x4)
	float ETwoVideoLength; // 0xda0 (0x4)
	unsigned char unreflected_da4[0x4]; // 0xda4 (0x4) 
	struct TArray<float> MediaCDNDistribution; // 0xda8 (0x10)
	int MaxNumberOfMediaDecoderResources; // 0xdb8 (0x4)
	unsigned char unreflected_dbc[0x4]; // 0xdbc (0x4) 
	struct TArray<struct FString> VideoEVMap; // 0xdc0 (0x10)
	struct FString MediaPartnerRegionControl; // 0xdd0 (0x10)
	int LiveStreamPiPMemoryRequired; // 0xde0 (0x4)
	unsigned char unreflected_de4[0x4]; // 0xde4 (0x4) 
	int64_t ShouldShowLiveStreamPiPInMatchCounter; // 0xde8 (0x8)
	bool bEnableNewPIP; // 0xdf0 (0x1)
	bool bEnableRiskyReelsStreaming; // 0xdf1 (0x1)
	bool bDisableBlastURLStreamSource; // 0xdf2 (0x1)
	unsigned char unreflected_df3[0x1]; // 0xdf3 (0x1) 
	int StreamPlaylistFetchMethodOrder; // 0xdf4 (0x4)
	bool bHiddenButEnabledLiveStreamInMatch; // 0xdf8 (0x1)
	unsigned char unreflected_df9[0x3]; // 0xdf9 (0x3) 
	float TimedEventsJIPStartDelay; // 0xdfc (0x4)
	bool bEnableEOSGC; // 0xe00 (0x1)
	bool bInputActionHolding; // 0xe01 (0x1)
	struct FPictureInPictureInfo PictureInPictureState; // 0xe02 (0x3)
	bool bEnableSplineReticulationById; // 0xe05 (0x1)
	bool bUseSingleHUDUpdatePerFrame; // 0xe06 (0x1)
	unsigned char unreflected_e07[0x1]; // 0xe07 (0x1) 
	int64_t MinInteractionScoreForFriendToBeConsideredClose; // 0xe08 (0x8)
	int64_t MinIntervalBetweenInviteToPartyNotificationsInSeconds; // 0xe10 (0x8)
	float DelayBetweenStartOfPostGameAndShowDelayedNotificationsInSeconds; // 0xe18 (0x4)
	unsigned char unreflected_e1c[0x4]; // 0xe1c (0x4) 
	struct TArray<struct FString> PlaylistConditionalFlags; // 0xe20 (0x10)
	bool bIsUserChoiceAllowedForForcedAndroidStore; // 0xe30 (0x1)
	unsigned char unreflected_e31[0x3]; // 0xe31 (0x3) 
	int AndroidStoreCounter; // 0xe34 (0x4)
	bool bHideCharacterCustomizationNullTile; // 0xe38 (0x1)
	bool bEnablePlaylistRequireCrossplay; // 0xe39 (0x1)
	bool bRequireCrossplayOptInForFill; // 0xe3a (0x1)
	bool bUseConcurrentCrossplayPromptGuard; // 0xe3b (0x1)
	int MaxSquadSize; // 0xe3c (0x4)
	int MaxPartySizeCampaign; // 0xe40 (0x4)
	int MaxPartySizeAthena; // 0xe44 (0x4)
	bool bShouldFollowersSendSquadMatchmakingInfo; // 0xe48 (0x1)
	bool bAllowAthenaNavSystemForCreative; // 0xe49 (0x1)
	bool bEnablePlayerSurveys; // 0xe4a (0x1)
	bool bEnablePlayerStatsPrecache; // 0xe4b (0x1)
	bool bEnableStreamingReplayViewingUI; // 0xe4c (0x1)
	unsigned char unreflected_e4d[0x3]; // 0xe4d (0x3) 
	float LiveReplayDiscoverabilityDelay; // 0xe50 (0x4)
	bool bReplayBattleMapCameraMode; // 0xe54 (0x1)
	bool bReplayKeepLocalClientEvents; // 0xe55 (0x1)
	bool bReplaySampleAthenaPawnMovement; // 0xe56 (0x1)
	unsigned char unreflected_e57[0x1]; // 0xe57 (0x1) 
	float ReplaySampleAthenaPawnTimeRate; // 0xe58 (0x4)
	float ReplaySampleAthenaPawnSpaceRate; // 0xe5c (0x4)
	float ReplaySampleAthenaPawnUpdateTimeRate; // 0xe60 (0x4)
	bool bDisablePartyJoinInOutpost; // 0xe64 (0x1)
	unsigned char unreflected_e65[0x3]; // 0xe65 (0x3) 
	struct TMap<struct FString, int> MashSpecialScores; // 0xe68 (0x50)
	bool bEnableMissedInvitesEntry; // 0xeb8 (0x1)
	bool bOnlyShowMissedInvitesEntryIfMissedInvites; // 0xeb9 (0x1)
	bool bEnableSidekick; // 0xeba (0x1)
	bool bEnableSidekickFeature1; // 0xebb (0x1)
	bool bEnableSidekickFOMO; // 0xebc (0x1)
	bool bEnableSidekickAvatars; // 0xebd (0x1)
	bool bSidekickDisablesScreenRecord; // 0xebe (0x1)
	bool bSidekickEnableExitFNButton; // 0xebf (0x1)
	bool bEnableSidekickFaceAreaInvalidation; // 0xec0 (0x1)
	bool bSidekickDisabledByNightNight; // 0xec1 (0x1)
	bool bSidekickForcesSingleChannelMode; // 0xec2 (0x1)
	bool bEnableCampaignBatchLevelingUI; // 0xec3 (0x1)
	bool bAllowSimultaneousChannelConnections; // 0xec4 (0x1)
	bool bExpandNotListeningChannels; // 0xec5 (0x1)
	unsigned char unreflected_ec6[0x2]; // 0xec6 (0x2) 
	uint32_t MaxSetFriendSubscriptionSettingsAttempts; // 0xec8 (0x4)
	uint32_t MaxQueryFriendSubscriptionSettingsAttempts; // 0xecc (0x4)
	int NumDaysBetweenPlayingNotifications; // 0xed0 (0x4)
	int NumHoursBetweenPlayingNotifications; // 0xed4 (0x4)
	int NumMinutesBetweenPlayingNotifications; // 0xed8 (0x4)
	bool bForceAutoChangeMaterialOn; // 0xedc (0x1)
	bool bActiveDisplayDeviceTemperature; // 0xedd (0x1)
	bool bAllowOfflineInvites; // 0xede (0x1)
	bool bEnablePlatformVoiceLeave; // 0xedf (0x1)
	bool bEnablePlatformVoicePrompts; // 0xee0 (0x1)
	bool bEnableVoiceChatEnablePrompt; // 0xee1 (0x1)
	unsigned char unreflected_ee2[0x2]; // 0xee2 (0x2) 
	float PlaylistGameVoiceChannelRecommendationDisplayTime; // 0xee4 (0x4)
	bool bEnablePlaylistGameChannelRecommendationToast; // 0xee8 (0x1)
	bool bEnableQuickHealing; // 0xee9 (0x1)
	bool bAllowDeferredPedestalPawnSpawn; // 0xeea (0x1)
	bool bRunUnicornOnServer; // 0xeeb (0x1)
	bool bShowSamsungSensorButtonWarning; // 0xeec (0x1)
	unsigned char unreflected_eed[0x3]; // 0xeed (0x3) 
	int SamsungSensorButtonGamesPerWarning; // 0xef0 (0x4)
	unsigned char unreflected_ef4[0x4]; // 0xef4 (0x4) 
	struct TArray<struct FString> CatabaExclusiveCountryCodes; // 0xef8 (0x10)
	bool bEnableItemShopDynamicBackground; // 0xf08 (0x1)
	bool EnableCommunityVotingScreen; // 0xf09 (0x1)
	unsigned char unreflected_f0a[0x2]; // 0xf0a (0x2) 
	int CommunityVotingTutorialVersion; // 0xf0c (0x4)
	float CommunityVotingRevealDelay; // 0xf10 (0x4)
	float CommunityVotingTimerRefreshDelay; // 0xf14 (0x4)
	bool ScrollToWinnerTileAfterReveal; // 0xf18 (0x1)
	bool EnableStandaloneStorefront; // 0xf19 (0x1)
	bool bEnableBattlePassStorefront; // 0xf1a (0x1)
	bool bEnableItemPreviewInStore; // 0xf1b (0x1)
	bool bEnableCurrencyInspectScreenBonusText; // 0xf1c (0x1)
	bool bEnableCurrencyBonusBanner; // 0xf1d (0x1)
	bool bEnableItemShopInvalidationBox; // 0xf1e (0x1)
	bool ScrollToStandaloneSectionOnPopupClosed; // 0xf1f (0x1)
	struct TArray<enum EFortItemShopSection> ItemShopOrdering; // 0xf20 (0x10)
	bool bEnableItemShopSectionBangs; // 0xf30 (0x1)
	bool bEnableItemShopCommunityVotingSectionBang; // 0xf31 (0x1)
	unsigned char unreflected_f32[0x6]; // 0xf32 (0x6) 
	struct TArray<struct FAthenaItemShopSectionPriority*> ItemShopDefaultLandingPriority; // 0xf38 (0x10)
	struct TArray<struct FAthenaItemShopSectionOverrideDisplayData> ItemShopOverrideDisplayDataList; // 0xf48 (0x10)
	enum EFortItemShopSection ItemShopDefaultLanding; // 0xf58 (0x1)
	unsigned char unreflected_f59[0x3]; // 0xf59 (0x3) 
	float ItemShopOfferSeenThreshold; // 0xf5c (0x4)
	bool CommunityVotingTileAnimated; // 0xf60 (0x1)
	bool ScrollToComTileOnEventPopupClosed; // 0xf61 (0x1)
	bool EnableThanksVotingPopup; // 0xf62 (0x1)
	bool bUseItemPresentationScreenOnItemPurchased; // 0xf63 (0x1)
	float CommunityVotingThanksPopupDelay; // 0xf64 (0x4)
	struct TArray<struct FString> ReloadMtxExclusiveCountryCodes; // 0xf68 (0x10)
	bool bEnableReloadMtx; // 0xf78 (0x1)
	bool bEnableDynamicReloadMtx; // 0xf79 (0x1)
	bool bEnableInGameReloadMtx; // 0xf7a (0x1)
	bool bEnableCrew; // 0xf7b (0x1)
	bool bEnableSubscriptionInspectScreen; // 0xf7c (0x1)
	bool bEnableBattlePassViolatorEarnedCurrency; // 0xf7d (0x1)
	unsigned char unreflected_f7e[0x2]; // 0xf7e (0x2) 
	float InGameCosmeticItemBangRefreshRate; // 0xf80 (0x4)
	bool bUseContentPatchingRestartFlow; // 0xf84 (0x1)
	bool bAthenaAutoPickupStackables; // 0xf85 (0x1)
	unsigned char unreflected_f86[0x2]; // 0xf86 (0x2) 
	struct TArray<struct FRuntimeOptionScheduledNotification> ScheduledNotifications; // 0xf88 (0x10)
	bool bEnableUnicornHighlightsOnClient; // 0xf98 (0x1)
	bool bEnableHighlightsPromptInCompeteScreen; // 0xf99 (0x1)
	bool bUseReturnToKairosLoadingScreen; // 0xf9a (0x1)
	bool bForceReturnToKairosLoadingScreen; // 0xf9b (0x1)
	bool bDebugForceLoginRelaunch; // 0xf9c (0x1)
	bool bEnableDADUpdateCheckOnRTMM; // 0xf9d (0x1)
	bool bShouldAllowNightNightMode; // 0xf9e (0x1)
	unsigned char unreflected_f9f[0x1]; // 0xf9f (0x1) 
	struct FString NightNightPluginName; // 0xfa0 (0x10)
	struct FString NightNightCalendarEventName; // 0xfb0 (0x10)
	bool bEnableFrontendMeshRockyRidgeCheck; // 0xfc0 (0x1)
	bool bForceAllowFrontendMeshRockyRidgeCheck; // 0xfc1 (0x1)
	unsigned char unreflected_fc2[0x6]; // 0xfc2 (0x6) 
	struct FString FrontendMeshRockyRidgeMetadataKey; // 0xfc8 (0x10)
	struct FString FrontendMeshRockyRidgeCanaryKey; // 0xfd8 (0x10)
	float FrontendMeshRockyRidgeInitialIntervalSeconds; // 0xfe8 (0x4)
	float FrontendMeshRockyRidgeFailureMultiplier; // 0xfec (0x4)
	float FrontendMeshRockyRidgeMaxIntervalSeconds; // 0xff0 (0x4)
	struct FName FrontendMeshRockyRidgeMeshName; // 0xff4 (0x4)
	bool bForceEverybodyToGoNightNight; // 0xff8 (0x1)
	bool bQueryKeychainBeforeGoingNightNight; // 0xff9 (0x1)
	bool bSkipSubGameDuringNightNight; // 0xffa (0x1)
	bool bAllowCampaignFrontendToGoNightNight; // 0xffb (0x1)
	bool bShouldAllowForcedIntro; // 0xffc (0x1)
	unsigned char unreflected_ffd[0x3]; // 0xffd (0x3) 
	struct FName ForcedIntroName; // 0x1000 (0x4)
	bool bShowMovieInGameplayIntro; // 0x1004 (0x1)
	bool bSkipSubgameSelectDuringForcedIntro; // 0x1005 (0x1)
	bool bForcedPlaylistEnabled; // 0x1006 (0x1)
	unsigned char unreflected_1007[0x1]; // 0x1007 (0x1) 
	struct FName ForcedPlaylistPluginName; // 0x1008 (0x4)
	unsigned char unreflected_100c[0x4]; // 0x100c (0x4) 
	struct FString FrontendMeshForcedPlaylistMetadataKey; // 0x1010 (0x10)
	bool bSkipToEndGameplayIntroOutroVideos; // 0x1020 (0x1)
	unsigned char unreflected_1021[0x3]; // 0x1021 (0x3) 
	float MaxGameplayCinematicLength; // 0x1024 (0x4)
	bool bUseAthenaArmory; // 0x1028 (0x1)
	bool bEnableLiveSpectateButton; // 0x1029 (0x1)
	bool bEnableGuidedTutorialDefensiveBuilding; // 0x102a (0x1)
	bool bEnableSafeZoneEditor; // 0x102b (0x1)
	bool bEnableSavedLoadouts; // 0x102c (0x1)
	bool bSavedLoadoutsUseGodTile; // 0x102d (0x1)
	bool bEnableSafeZoneEditorOnLogin; // 0x102e (0x1)
	bool bEnableSafeZoneEditorWhenNotInApolloIntro; // 0x102f (0x1)
	float LoginFlowCMSRefreshWaitTime; // 0x1030 (0x4)
	bool bEnableAppResumeCMSUpdate; // 0x1034 (0x1)
	bool bEnableMOTDAnalytics; // 0x1035 (0x1)
	bool bEnableTabTransitionMOTDAnalyticsEvent; // 0x1036 (0x1)
	bool bAllowStoreSkipOpenAnimation; // 0x1037 (0x1)
	bool bAllowInGameStore; // 0x1038 (0x1)
	bool bPostGameStoreNoLeto; // 0x1039 (0x1)
	bool bPostGameStoreTriggerIncrementalGC; // 0x103a (0x1)
	bool bAllowInGameLocker; // 0x103b (0x1)
	bool bAllowInGameCareer; // 0x103c (0x1)
	bool bAllowInGameActivityBrowser; // 0x103d (0x1)
	bool bEnableGuidedTutorialDirectFlush; // 0x103e (0x1)
	bool bEnableGuidedTutorialABTesting; // 0x103f (0x1)
	bool bEnableHighlightPlayButtonABTesting; // 0x1040 (0x1)
	bool bEnableSkipGuidedTutorialABTesting; // 0x1041 (0x1)
	unsigned char unreflected_1042[0x2]; // 0x1042 (0x2) 
	int MaxFrontendFlowStatQueries; // 0x1044 (0x4)
	bool ApolloIntroShowMovie; // 0x1048 (0x1)
	bool bRunDeimosSpawnTimelines; // 0x1049 (0x1)
	bool bEnableAddFriendUserSearchDarkTraffic; // 0x104a (0x1)
	bool bEnableExtendedUserSearchUI; // 0x104b (0x1)
	bool bEnableRecursiveMatchAssignmentSearchForTeam; // 0x104c (0x1)
	bool bEnableBackfillCheckForHighestTeamScore; // 0x104d (0x1)
	bool bEnableBackfillCheckForTeamScoreDifference; // 0x104e (0x1)
	unsigned char unreflected_104f[0x1]; // 0x104f (0x1) 
	struct TMap<struct FString, int> BackfillCheckForHighestTeamScorePlaylistOverrides; // 0x1050 (0x50)
	struct TMap<struct FString, float> BackfillCheckForScoreDiscrepancyPlaylistOverrides; // 0x10a0 (0x50)
	bool bDisableTdmBackfilledPlayerTeleport; // 0x10f0 (0x1)
	bool bDisableWarmupRequiredPlayerCountCheck; // 0x10f1 (0x1)
	bool bAIDirectorTreatBotsAsPlayersForLOD; // 0x10f2 (0x1)
	bool bEnablePhoenix; // 0x10f3 (0x1)
	bool bBuildingPossessionShown; // 0x10f4 (0x1)
	unsigned char unreflected_10f5[0x3]; // 0x10f5 (0x3) 
	struct FSoftObjectPath LoadingContentModalWidget; // 0x10f8 (0x18)
	bool bBacchusFrontendEnabled; // 0x1110 (0x1)
	unsigned char unreflected_1111[0x7]; // 0x1111 (0x7) 
	struct TArray<struct FName> InvalidCreativeItemTags; // 0x1118 (0x10)
	struct FString ValkyrieMajMinPatchQueryParams; // 0x1128 (0x10)
	bool bSprintingStrafeSnapEnabled; // 0x1138 (0x1)
	bool bExplicitSprintableInputRange; // 0x1139 (0x1)
	unsigned char unreflected_113a[0x2]; // 0x113a (0x2) 
	float MinForwardForSprint; // 0x113c (0x4)
	float MinForwardForSprintSnapping; // 0x1140 (0x4)
	float AccelerationStrafeMultiplierSprintOverride; // 0x1144 (0x4)
	float KeyboardDiagonalSprintForwardOverride; // 0x1148 (0x4)
	float KeyboardSprintInputWindUpTime; // 0x114c (0x4)
	float KeyboardMoveInputWindUpTime; // 0x1150 (0x4)
	bool bPlayerControlledKeyboardDiagonalsEnabled; // 0x1154 (0x1)
	bool bPlayerControlledKeyboardStrafeDirectionEnabled; // 0x1155 (0x1)
	bool bEnableWebAuthFNMobileOnClassicBuild; // 0x1156 (0x1)
	bool bPortraitWebAuthFNMobileOnClassicBuild; // 0x1157 (0x1)
	bool bAllowPortraitModePurchaseScreenForMobile; // 0x1158 (0x1)
	bool bBacchusFrontendLabelShown; // 0x1159 (0x1)
	unsigned char unreflected_115a[0x2]; // 0x115a (0x2) 
	int NoWeaponZoneMaxDestroyCount; // 0x115c (0x4)
	float NoWeaponZoneResetDestroyCountRate; // 0x1160 (0x4)
	bool bAllowCurieIfCreativeOrPlayground; // 0x1164 (0x1)
	bool bEnableServerSendPlayerInteractions; // 0x1165 (0x1)
	unsigned char unreflected_1166[0x2]; // 0x1166 (0x2) 
	float ServerSendPlayerInteractionsIntervalSeconds; // 0x1168 (0x4)
	bool bEnableServerSendPlayerInteractionsRankInCreativeMode; // 0x116c (0x1)
	bool bEnableServerPlayerInteractionIdleTracking; // 0x116d (0x1)
	bool bEnableNonFriendSquadInteractionTracking; // 0x116e (0x1)
	unsigned char unreflected_116f[0x1]; // 0x116f (0x1) 
	double MinInteractionDurationForDispatch; // 0x1170 (0x8)
	struct TWeakObjectPtr<class UClass> DefaultMissionGen; // 0x1178 (0x28)
	bool bGyroV2Enabled; // 0x11a0 (0x1)
	bool bFlickStickEnabled; // 0x11a1 (0x1)
	unsigned char unreflected_11a2[0x2]; // 0x11a2 (0x2) 
	int GyroAimAssistMode; // 0x11a4 (0x4)
	bool bJoyConSelectEnabled; // 0x11a8 (0x1)
	bool bForceMotionControlsEnabled; // 0x11a9 (0x1)
	bool bAdvancedCameraResetEnabled; // 0x11aa (0x1)
	bool bEnableBacchusDialogSystem; // 0x11ab (0x1)
	bool bBacchusDialogSystemSkipConfirmationStep; // 0x11ac (0x1)
	bool bMobileDisableResolutionReset; // 0x11ad (0x1)
	bool bMotionAxisMobileDefaultToYaw; // 0x11ae (0x1)
	bool bFollowCameraOptionAvailable; // 0x11af (0x1)
	bool bAutoCenterOptionAvailable; // 0x11b0 (0x1)
	bool bShouldRestartCreativeServersForCalendarEventChanges; // 0x11b1 (0x1)
	bool bCreativeEmoteControllerUseWhitelist; // 0x11b2 (0x1)
	unsigned char unreflected_11b3[0x5]; // 0x11b3 (0x5) 
	struct TArray<struct FString> CreativeEmoteControllerWhitelist; // 0x11b8 (0x10)
	struct TArray<struct FVector4> CreativeRoyaleSafeZoneBlockList; // 0x11c8 (0x10)
	bool bPreventLateJoiningPlayersAfterAircraft; // 0x11d8 (0x1)
	unsigned char unreflected_11d9[0x7]; // 0x11d9 (0x7) 
	struct TArray<struct FString> AllowedPMRStatuses; // 0x11e0 (0x10)
	bool bShowRMTPurchaseSpecialInfo; // 0x11f0 (0x1)
	bool bQuickWeaponBindAvailable; // 0x11f1 (0x1)
	bool bHoldToBuildBindAvailable; // 0x11f2 (0x1)
	bool bVehicleStickAccelerationSettingEnabled; // 0x11f3 (0x1)
	bool bVehiclesUse2DSteering; // 0x11f4 (0x1)
	unsigned char unreflected_11f5[0x3]; // 0x11f5 (0x3) 
	float OuterDeadzone2DSteering; // 0x11f8 (0x4)
	bool bMobileRebootToReconnect; // 0x11fc (0x1)
	bool bWaitForServerToBeInitializedBeforeTravelingFeatureEnabled; // 0x11fd (0x1)
	unsigned char unreflected_11fe[0x2]; // 0x11fe (0x2) 
	float MatchMakingMaxWaitingForServerInitializationTimeSeconds; // 0x1200 (0x4)
	bool bEnableCosmeticDownloadSpinner; // 0x1204 (0x1)
	bool bAthenaGCAllowEliminatingGarbageReferences; // 0x1205 (0x1)
	bool bCampaignGCAllowEliminatingGarbageReferences; // 0x1206 (0x1)
	bool bEnableFireModeDataCloudSave; // 0x1207 (0x1)
	bool bEnableFireModeSelectionReminder; // 0x1208 (0x1)
	unsigned char unreflected_1209[0x3]; // 0x1209 (0x3) 
	int MatchesBeforeDisplayingFireModeSelectionReminder; // 0x120c (0x4)
	struct TArray<enum ECommonPlatformType> PlatformMovieDenyList; // 0x1210 (0x10)
	struct TArray<struct FString> ActivityMovieDenyList; // 0x1220 (0x10)

	/* Functions */

	// Function /Script/FortniteGame.FortRuntimeOptions.ShouldShowLeaderboardPrivacySettings (Underlying native function: ShouldShowLeaderboardPrivacySettings 0x8c95c8c)
	bool ShouldShowLeaderboardPrivacySettings(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.SetEnableMainMenuSocialButton (Underlying native function: SetEnableMainMenuSocialButton 0x8c95c0c)
	void SetEnableMainMenuSocialButton(bool& NewValue); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsSitoutOptionEnabled (Underlying native function: IsSitoutOptionEnabled 0x8c95be8)
	static bool IsSitoutOptionEnabled(); // (Final | 0x00000002 | Native | Static | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsShippingBuild (Underlying native function: IsShippingBuild 0x27c9608)
	bool IsShippingBuild(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsPartyInProgressEnabled (Underlying native function: IsPartyInProgressEnabled 0x8c95bc4)
	static bool IsPartyInProgressEnabled(); // (Final | 0x00000002 | Native | Static | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsMatchmakingKnobVisible (Underlying native function: IsMatchmakingKnobVisible 0x8c95a60)
	bool IsMatchmakingKnobVisible(struct FString& KnobName); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsMatchmakingKnobEnabled (Underlying native function: IsMatchmakingKnobEnabled 0x8c958fc)
	bool IsMatchmakingKnobEnabled(struct FString& KnobName); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsGiftingDisabled (Underlying native function: IsGiftingDisabled 0x8c958e4)
	bool IsGiftingDisabled(); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsGameplayMessageEnabled (Underlying native function: IsGameplayMessageEnabled 0x8c957fc)
	bool IsGameplayMessageEnabled(struct FName& MessageOwnerClassName, struct FName& MessageName); // (Final | Native | Public | HasOutParms | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.IsForcedIntroEnabled (Underlying native function: IsForcedIntroEnabled 0x8c957dc)
	bool IsForcedIntroEnabled(); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetValidAffiliateNames (Underlying native function: GetValidAffiliateNames 0x8c9565c)
	struct TArray<struct FString> GetValidAffiliateNames(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetShowReplayTrailerButton_Athena (Underlying native function: GetShowReplayTrailerButton_Athena 0x8c95644)
	bool GetShowReplayTrailerButtonAthena(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetRuntimeOptions (Underlying native function: GetRuntimeOptions 0x24e1088)
	static class UFortRuntimeOptions* GetRuntimeOptions(); // (Final | 0x00000002 | Native | Static | Public | BlueprintCallable | BlueprintPure)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetRebootShowInInventory (Underlying native function: GetRebootShowInInventory 0x8c9562c)
	bool GetRebootShowInInventory(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetRebootDirectiveDisplayTime (Underlying native function: GetRebootDirectiveDisplayTime 0x8c95614)
	float GetRebootDirectiveDisplayTime(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetRebootChipExpirationTime (Underlying native function: GetRebootChipExpirationTime 0x8c955fc)
	float GetRebootChipExpirationTime(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetOverrideBonusEventXpTitleText (Underlying native function: GetOverrideBonusEventXpTitleText 0x8c95580)
	struct FText GetOverrideBonusEventXpTitleText(); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetNumGameplayMessageChannels (Underlying native function: GetNumGameplayMessageChannels 0x8c95568)
	int GetNumGameplayMessageChannels(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetLobbyGenericLinkButtonURL (Underlying native function: GetLobbyGenericLinkButtonURL 0x8c9541c)
	struct FString GetLobbyGenericLinkButtonURL(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetLobbyGenericLinkButtonOverrideText (Underlying native function: GetLobbyGenericLinkButtonOverrideText 0x263d694)
	struct FText GetLobbyGenericLinkButtonOverrideText(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetIsFriendLinkEnabled (Underlying native function: GetIsFriendLinkEnabled 0x8c95404)
	bool GetIsFriendLinkEnabled(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetIsDonutIdleGameEnabled (Underlying native function: GetIsDonutIdleGameEnabled 0x8c953ec)
	bool GetIsDonutIdleGameEnabled(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetInvalidCreativeItemTags (Underlying native function: GetInvalidCreativeItemTags 0x8c952f4)
	struct FGameplayTagContainer GetInvalidCreativeItemTags(struct FGameplayTagContainer& AdditionalInvalidCreativeItemTags); // (Final | Native | Public | HasOutParms | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetHPMicrophoneToastDisplaySeconds (Underlying native function: GetHPMicrophoneToastDisplaySeconds 0x8c952dc)
	float GetHPMicrophoneToastDisplaySeconds(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetGameVersion (Underlying native function: GetGameVersion 0x26c87dc)
	struct FString GetGameVersion(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetExternalNewsURL (Underlying native function: GetExternalNewsURL 0x8c95098)
	void GetExternalNewsURL(enum ESubGame& CurrentMode, bool& bHasValidExternalURL, struct FString& ExternalURL, enum ENewsExternalURLMode& ButtonMode); // (Final | 0x00000002 | Native | Public | HasOutParms | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetEnableSplitWalletTextNotice (Underlying native function: GetEnableSplitWalletTextNotice 0x8c95080)
	bool GetEnableSplitWalletTextNotice(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetEnableMainMenuSocialButton (Underlying native function: GetEnableMainMenuSocialButton 0x8c95068)
	bool GetEnableMainMenuSocialButton(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetEnableLobbyGenericLinkButton (Underlying native function: GetEnableLobbyGenericLinkButton 0x8c95050)
	bool GetEnableLobbyGenericLinkButton(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetEnableLFG (Underlying native function: GetEnableLFG 0x76c2bdc)
	bool GetEnableLFG(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetEliminationMarkerTTL (Underlying native function: GetEliminationMarkerTTL 0x8c95038)
	float GetEliminationMarkerTTL(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetDisablePurchaseHistoryScreen (Underlying native function: GetDisablePurchaseHistoryScreen 0x8c95020)
	bool GetDisablePurchaseHistoryScreen(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetDisabledFrontendNavigationTabs (Underlying native function: GetDisabledFrontendNavigationTabs 0x1c2b37c)
	struct TArray<struct FRuntimeOptionTabStateInfo*> GetDisabledFrontendNavigationTabs(); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.GetDelayGiftButtonWhenMFANotEnabledSeconds (Underlying native function: GetDelayGiftButtonWhenMFANotEnabledSeconds 0x8c95008)
	float GetDelayGiftButtonWhenMFANotEnabledSeconds(); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.AllowInGameMatchmakingOnPlaylist (Underlying native function: AllowInGameMatchmakingOnPlaylist 0x8c94f54)
	bool AllowInGameMatchmakingOnPlaylist(class UFortPlaylistAthena*& PlaylistAthena); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteGame.FortRuntimeOptions.AllowInGameMatchmaking (Underlying native function: AllowInGameMatchmaking 0x8c94ec4)
	bool AllowInGameMatchmaking(class UObject*& WorldContextObject); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)
};

