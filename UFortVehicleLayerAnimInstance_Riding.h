// Class /Script/RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding
// Size: 0xac0
class UFortVehicleLayerAnimInstance_Riding : public UFortVehicleOccupantAnimInstance
{
	struct FCachedAnimRelevancyData IntoVehicleCachedData; // 0x808 (0x14)
	struct FCachedAnimRelevancyData OutOfVehicleCachedData; // 0x81c (0x14)
	float InTime; // 0x830 (0x4)
	float OutTime; // 0x834 (0x4)
	float BodyYawOffset; // 0x838 (0x4)
	unsigned char unreflected_83c[0x4]; // 0x83c (0x4) 
	struct FRotator BodyCounterRotation; // 0x840 (0x18)
	float BodyCounterRotationAlpha; // 0x858 (0x4)
	bool bIsReloading; // 0x85c (0x1)
	bool bIsTargeting; // 0x85d (0x1)
	bool bIsFiring; // 0x85e (0x1)
	bool bIsUsingConsumable; // 0x85f (0x1)
	bool bIsInAction; // 0x860 (0x1)
	bool bIsThrowConsumable; // 0x861 (0x1)
	bool bIsTargetingOrThrowingConsumable; // 0x862 (0x1)
	bool bIsTurningInPlace; // 0x863 (0x1)
	bool bIsRidingSprinting; // 0x864 (0x1)
	bool bIsRidingPetting; // 0x865 (0x1)
	unsigned char unreflected_866[0x2]; // 0x866 (0x2) 
	float TurnInPlaceRotationSpeed; // 0x868 (0x4)
	float TurnInPlaceAngleDelta; // 0x86c (0x4)
	bool bIsRidingMovingBackward; // 0x870 (0x1)
	bool bIsSlopeSliding; // 0x871 (0x1)
	unsigned char unreflected_872[0x2]; // 0x872 (0x2) 
	float SlopeSlidingPitch; // 0x874 (0x4)
	float SlopeSlidingRoll; // 0x878 (0x4)
	float RiderReferentialRidableYaw; // 0x87c (0x4)
	float AimYawDegreesCoverage; // 0x880 (0x4)
	float SmoothedAimYaw; // 0x884 (0x4)
	bool bJustEntered; // 0x888 (0x1)
	bool bIsRidableMoving; // 0x889 (0x1)
	bool bIsRideMode; // 0x88a (0x1)
	unsigned char unreflected_88b[0x1]; // 0x88b (0x1) 
	float RidableVelocity; // 0x88c (0x4)
	float BodyYaw; // 0x890 (0x4)
	float BoostPlayRate; // 0x894 (0x4)
	float RidingMovePlayRate; // 0x898 (0x4)
	float FalseBlendTime; // 0x89c (0x4)
	float CombatToRideYaw; // 0x8a0 (0x4)
	float InPlaceYaw; // 0x8a4 (0x4)
	float HeadAOAlpha; // 0x8a8 (0x4)
	unsigned char unreflected_8ac[0x4]; // 0x8ac (0x4) 
	struct FRotator MeleeTwistRot; // 0x8b0 (0x18)
	bool bIsDualWield; // 0x8c8 (0x1)
	bool bIsOneHandedDualWield; // 0x8c9 (0x1)
	bool bIsTwoHandedSword; // 0x8ca (0x1)
	bool bShouldAdjustBodyTwistForMelee; // 0x8cb (0x1)
	unsigned char unreflected_8cc[0x4]; // 0x8cc (0x4) 
	struct FVector PlayerOffset; // 0x8d0 (0x18)
	float NoiseAlpha; // 0x8e8 (0x4)
	bool bIsLobsterBlockActive; // 0x8ec (0x1)
	unsigned char unreflected_8ed[0x3]; // 0x8ed (0x3) 
	float SlopePitch; // 0x8f0 (0x4)
	float RiderHeightAdjustmentSpringConstant; // 0x8f4 (0x4)
	float MinSlopePitchForRiderHeightAdjustment; // 0x8f8 (0x4)
	float MaxSlopePitchForRiderHeightAdjustment; // 0x8fc (0x4)
	float RiderHeightAdjustmentForMinSlopePitch; // 0x900 (0x4)
	float RiderHeightAdjustmentForMaxSlopePitch; // 0x904 (0x4)
	float PettingRotAlpha; // 0x908 (0x4)
	unsigned char unreflected_90c[0x4]; // 0x90c (0x4) 
	struct FRotator PettingRot; // 0x910 (0x18)
	float PettingPitchFactor; // 0x928 (0x4)
	float PettingRollFactor; // 0x92c (0x4)
	struct FVector HandAttachLeft; // 0x930 (0x18)
	struct FVector HandAttachRight; // 0x948 (0x18)
	float HandAttachAlpha; // 0x960 (0x4)
	enum ERidingFootPhase FootPhase; // 0x964 (0x1)
	bool bIsFootPhaseFeetInAir; // 0x965 (0x1)
	bool bIsFootPhaseFrontFeetPlanted; // 0x966 (0x1)
	bool bIsFootPhaseBackFeetPlanted; // 0x967 (0x1)
	bool bIsFootPhaseLeftBackFeetForward; // 0x968 (0x1)
	bool bIsFootPhaseRightBackFeetForward; // 0x969 (0x1)
	bool bIsFootPhaseLeftPlantedRightPass; // 0x96a (0x1)
	bool bIsFootPhaseRightPlantedLeftPass; // 0x96b (0x1)
	float TurnInPlaceModulatedSpeed; // 0x96c (0x4)
	bool bIsTurnInPlaceAngleDeltaPositive; // 0x970 (0x1)
	unsigned char unreflected_971[0x3]; // 0x971 (0x3) 
	float SlopeRoll; // 0x974 (0x4)
	float MovingVelocityLowerBound; // 0x978 (0x4)
	float JustEnteredDelayTimeSec; // 0x97c (0x4)
	float FalseBlendTimeMoving; // 0x980 (0x4)
	float FalseBlendTimeNotMoving; // 0x984 (0x4)
	struct FVector PlayerOffsetMale; // 0x988 (0x18)
	struct FVector PlayerOffsetFemale; // 0x9a0 (0x18)
	struct FSoftObjectPath ScytheMontage; // 0x9b8 (0x18)
	struct FSoftObjectPath BRSwordMontage; // 0x9d0 (0x18)
	struct TEnumAsByte<EFortWeaponCoreAnimation> MeleeDualWieldCoreAnimation; // 0x9e8 (0x1)
	unsigned char unreflected_9e9[0x7]; // 0x9e9 (0x7) 
	struct FVector SlopePitchTraceStart; // 0x9f0 (0x18)
	struct FVector SlopePitchTraceEnd; // 0xa08 (0x18)
	struct FVector HandAttachLocationLeftMale; // 0xa20 (0x18)
	struct FVector HandAttachLocationRightMale; // 0xa38 (0x18)
	struct FVector HandAttachLocationLeftFemale; // 0xa50 (0x18)
	struct FVector HandAttachLocationRightFemale; // 0xa68 (0x18)
	struct FName PlayerHandAttachLeft; // 0xa80 (0x4)
	struct FName PlayerHandAttachRight; // 0xa84 (0x4)
	struct FName DisableHandAttachCurveName; // 0xa88 (0x4)
	struct FName AllowRidingNoiseAdditiveCurveName; // 0xa8c (0x4)
	unsigned char padding_a90[0x30]; // 0xa90 (0x30)

	/* Functions */

	// Function /Script/RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.UpdateSlopePitchForRiding (Underlying native function: UpdateSlopePitchForRiding 0x721ce4c)
	void UpdateSlopePitchForRiding(); // (Native | Event | Protected | BlueprintEvent)

	// Function /Script/RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.UpdateBoostPlayRate (Underlying native function: UpdateBoostPlayRate 0x721cf5c)
	void UpdateBoostPlayRate(); // (Native | Event | Protected | BlueprintEvent)

	// Function /Script/RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.SetFootPhase (Underlying native function: SetFootPhase 0x735d6a4)
	void SetFootPhase(enum ERidingFootPhase& InFootPhase); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.PlaceHandIKTargets (Underlying native function: PlaceHandIKTargets 0x6e180a8)
	void PlaceHandIKTargets(); // (Native | Event | Protected | BlueprintEvent)

	// Function /Script/RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.BlueprintCollectRidableAnimBPData (Has no native function)
	void BlueprintCollectRidableAnimBPData(class UAnimInstance*& RidableAnimInstance); // (Event | Protected | BlueprintEvent)
};

