// ScriptStruct /Script/FortniteGame.FortBaseWeaponStats
// Size: 0x148
struct FFortBaseWeaponStats : FTableRowBase
{
	unsigned char unreflected_8[0x4]; // 0x8 (0x4) 
	int BaseLevel; // 0xc (0x4)
	struct FName NamedWeightRow; // 0x10 (0x4)
	float DmgPB; // 0x14 (0x4)
	float DmgMid; // 0x18 (0x4)
	float DmgLong; // 0x1c (0x4)
	float DmgMaxRange; // 0x20 (0x4)
	float EnvDmgPB; // 0x24 (0x4)
	float EnvDmgMid; // 0x28 (0x4)
	float EnvDmgLong; // 0x2c (0x4)
	float EnvDmgMaxRange; // 0x30 (0x4)
	float ImpactDmgPB; // 0x34 (0x4)
	float ImpactDmgMid; // 0x38 (0x4)
	float ImpactDmgLong; // 0x3c (0x4)
	float ImpactDmgMaxRange; // 0x40 (0x4)
	bool bForceControl; // 0x44 (0x1)
	unsigned char unreflected_45[0x3]; // 0x45 (0x3) 
	float RngPB; // 0x48 (0x4)
	float RngMid; // 0x4c (0x4)
	float RngLong; // 0x50 (0x4)
	float RngMax; // 0x54 (0x4)
	class UCurveTable* DmgScaleTable; // 0x58 (0x8)
	struct FName DmgScaleTableRow; // 0x60 (0x4)
	float DmgScale; // 0x64 (0x4)
	class UCurveTable* EnvDmgScaleTable; // 0x68 (0x8)
	struct FName EnvDmgScaleTableRow; // 0x70 (0x4)
	float EnvDmgScale; // 0x74 (0x4)
	class UCurveTable* ImpactDmgScaleTable; // 0x78 (0x8)
	struct FName ImpactDmgScaleTableRow; // 0x80 (0x4)
	float ImpactDmgScale; // 0x84 (0x4)
	struct FName SurfaceRatioRowName; // 0x88 (0x4)
	float DamageZoneLight; // 0x8c (0x4)
	float DamageZoneNormal; // 0x90 (0x4)
	float DamageZoneCritical; // 0x94 (0x4)
	float DamageZoneVulnerability; // 0x98 (0x4)
	float DamageZoneInvulnerability; // 0x9c (0x4)
	float KnockbackMagnitude; // 0xa0 (0x4)
	float MidRangeKnockbackMagnitude; // 0xa4 (0x4)
	float LongRangeKnockbackMagnitude; // 0xa8 (0x4)
	float KnockbackZAngle; // 0xac (0x4)
	float ShortRangeHitImpulseMagnitude; // 0xb0 (0x4)
	float MidRangeHitImpulseMagnitude; // 0xb4 (0x4)
	float LongRangeHitImpulseMagnitude; // 0xb8 (0x4)
	float HitImpulseZBias; // 0xbc (0x4)
	float StunTime; // 0xc0 (0x4)
	float StunScale; // 0xc4 (0x4)
	class UDataTable* Durability; // 0xc8 (0x8)
	struct FName DurabilityRowName; // 0xd0 (0x4)
	float DurabilityScale; // 0xd4 (0x4)
	float DurabilityPerUse; // 0xd8 (0x4)
	float FullChargeDurabilityPerUse; // 0xdc (0x4)
	float DiceCritChance; // 0xe0 (0x4)
	float DiceCritDamageMultiplier; // 0xe4 (0x4)
	float ReloadTime; // 0xe8 (0x4)
	float ReloadScale; // 0xec (0x4)
	enum EFortWeaponReloadType ReloadType; // 0xf0 (0x1)
	bool bAllowReloadInterrupt; // 0xf1 (0x1)
	bool bReloadInterruptIsImmediate; // 0xf2 (0x1)
	unsigned char unreflected_f3[0x1]; // 0xf3 (0x1) 
	int NumIndividualBulletsToReload; // 0xf4 (0x4)
	int ClipSize; // 0xf8 (0x4)
	float ClipScale; // 0xfc (0x4)
	int InitialClips; // 0x100 (0x4)
	int CartridgePerFire; // 0x104 (0x4)
	int AmmoCostPerFire; // 0x108 (0x4)
	int MaxAmmoCostPerFire; // 0x10c (0x4)
	float MinChargeTime; // 0x110 (0x4)
	float MaxChargeTime; // 0x114 (0x4)
	float ChargeDownTime; // 0x118 (0x4)
	bool bAutoDischarge; // 0x11c (0x1)
	unsigned char unreflected_11d[0x3]; // 0x11d (0x3) 
	float MaxChargeTimeUntilDischarge; // 0x120 (0x4)
	float MinChargeDamageMultiplier; // 0x124 (0x4)
	float MaxChargeDamageMultiplier; // 0x128 (0x4)
	unsigned char unreflected_12c[0x4]; // 0x12c (0x4) 
	class UCurveFloat* ChargeDamageMultiplierCurve; // 0x130 (0x8)
	float EquipAnimRate; // 0x138 (0x4)
	float QuickBarSlotCooldownDuration; // 0x13c (0x4)
	unsigned char padding_140[0x8]; // 0x140 (0x8)
};

