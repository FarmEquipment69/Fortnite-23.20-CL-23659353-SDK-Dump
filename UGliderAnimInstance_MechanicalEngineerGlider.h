// Class /Script/FortniteGame.GliderAnimInstance_MechanicalEngineerGlider
// Size: 0x610
class UGliderAnimInstance_MechanicalEngineerGlider : public UFortGliderAnimInstance
{
	struct TWeakObjectPtr<class USkeletalMesh> BackpackSkeletalMesh; // 0x4d0 (0x28)
	class UBlendSpace* FlapBS; // 0x4f8 (0x8)
	struct FPoseSnapshot BackpackSnapshotPose; // 0x500 (0x30)
	struct FVector AttachLocation; // 0x530 (0x18)
	struct FRotator AttachRotation; // 0x548 (0x18)
	struct FVector WeaponAttachLocation; // 0x560 (0x18)
	struct FRotator WeaponAttrachRotation; // 0x578 (0x18)
	struct FVector WrenchOffsetLoc; // 0x590 (0x18)
	struct FRotator WrenchOffsetRot; // 0x5a8 (0x18)
	struct FVector BackpackOwlSnapshotLocation; // 0x5c0 (0x18)
	struct FRotator BackpackOwlSnapshotRotation; // 0x5d8 (0x18)
	float FlapPlayRate; // 0x5f0 (0x4)
	float FeatherSpeed; // 0x5f4 (0x4)
	float DeployAnimAlpha; // 0x5f8 (0x4)
	float WingPoseAdditiveAlpha; // 0x5fc (0x4)
	float BackPackPoseCurveValue; // 0x600 (0x4)
	float BackpackCurveValue; // 0x604 (0x4)
	unsigned char bBackpacksMatch; // 0x608 (0x1)
	unsigned char bIsCosmeticPreview; // 0x608 (0x1)
	unsigned char bUseClosedFromPack; // 0x608 (0x1)
	unsigned char bHideBackpackOwl; // 0x608 (0x1)
	unsigned char bSkydiveFreefall; // 0x608 (0x1)
	unsigned char bTransitionClosedToOpenIntoGliderItem; // 0x608 (0x1)
	unsigned char bTransitionClosedToOpenIntoGeyserVent; // 0x608 (0x1)
	unsigned char bTransitionClosedToOpenInto; // 0x608 (0x1)
	unsigned char bTransitionIdleOpenToFlap; // 0x609 (0x1)
	unsigned char bTransitionToClosed; // 0x609 (0x1)
	unsigned char bTransitionOpenIntoToFlap; // 0x609 (0x1)
	unsigned char bFlapGateIsAccelerating; // 0x609 (0x1)
	unsigned char bFlapGateIsNotAccelerating; // 0x609 (0x1)
	unsigned char bGateFlapEnable; // 0x609 (0x1)
	unsigned char bGateLookoff; // 0x609 (0x1)
	unsigned char bGateBlinkOff; // 0x609 (0x1)
	unsigned char bCanFlap; // 0x60a (0x1)
	unsigned char bIsFlapping; // 0x60a (0x1)
	unsigned char bCanFlapTransition; // 0x60a (0x1)
	unsigned char bCanLook; // 0x60a (0x1)
	unsigned char bCanCaw; // 0x60a (0x1)
	unsigned char bCanBlink; // 0x60a (0x1)
	unsigned char padding_60b[0x5]; // 0x60b (0x5)
};

