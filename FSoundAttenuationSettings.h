// ScriptStruct /Script/Engine.SoundAttenuationSettings
// Size: 0x3c8
struct FSoundAttenuationSettings : FBaseAttenuationSettings
{
	unsigned char bAttenuate; // 0xc0 (0x1)
	unsigned char bSpatialize; // 0xc0 (0x1)
	unsigned char bAttenuateWithLPF; // 0xc0 (0x1)
	unsigned char bEnableListenerFocus; // 0xc0 (0x1)
	unsigned char bEnableFocusInterpolation; // 0xc0 (0x1)
	unsigned char bEnableOcclusion; // 0xc0 (0x1)
	unsigned char bUseComplexCollisionForOcclusion; // 0xc0 (0x1)
	unsigned char bEnableReverbSend; // 0xc0 (0x1)
	unsigned char bEnablePriorityAttenuation; // 0xc1 (0x1)
	unsigned char bApplyNormalizationToStereoSounds; // 0xc1 (0x1)
	unsigned char bEnableLogFrequencyScaling; // 0xc1 (0x1)
	unsigned char bEnableSubmixSends; // 0xc1 (0x1)
	unsigned char bEnableSourceDataOverride; // 0xc1 (0x1)
	unsigned char bEnableSendToAudioLink; // 0xc1 (0x1)
	struct TEnumAsByte<ESoundSpatializationAlgorithm> SpatializationAlgorithm; // 0xc2 (0x1)
	unsigned char unreflected_c3[0x5]; // 0xc3 (0x5) 
	class UAudioLinkSettingsAbstract* AudioLinkSettingsOverride; // 0xc8 (0x8)
	float BinauralRadius; // 0xd0 (0x4)
	unsigned char unreflected_d4[0x4]; // 0xd4 (0x4) 
	struct FRuntimeFloatCurve CustomLowpassAirAbsorptionCurve; // 0xd8 (0x88)
	struct FRuntimeFloatCurve CustomHighpassAirAbsorptionCurve; // 0x160 (0x88)
	enum EAirAbsorptionMethod AbsorptionMethod; // 0x1e8 (0x1)
	struct TEnumAsByte<ECollisionChannel> OcclusionTraceChannel; // 0x1e9 (0x1)
	enum EReverbSendMethod ReverbSendMethod; // 0x1ea (0x1)
	enum EPriorityAttenuationMethod PriorityAttenuationMethod; // 0x1eb (0x1)
	float OmniRadius; // 0x1ec (0x4)
	float StereoSpread; // 0x1f0 (0x4)
	float LPFRadiusMin; // 0x1f4 (0x4)
	float LPFRadiusMax; // 0x1f8 (0x4)
	float LPFFrequencyAtMin; // 0x1fc (0x4)
	float LPFFrequencyAtMax; // 0x200 (0x4)
	float HPFFrequencyAtMin; // 0x204 (0x4)
	float HPFFrequencyAtMax; // 0x208 (0x4)
	float FocusAzimuth; // 0x20c (0x4)
	float NonFocusAzimuth; // 0x210 (0x4)
	float FocusDistanceScale; // 0x214 (0x4)
	float NonFocusDistanceScale; // 0x218 (0x4)
	float FocusPriorityScale; // 0x21c (0x4)
	float NonFocusPriorityScale; // 0x220 (0x4)
	float FocusVolumeAttenuation; // 0x224 (0x4)
	float NonFocusVolumeAttenuation; // 0x228 (0x4)
	float FocusAttackInterpSpeed; // 0x22c (0x4)
	float FocusReleaseInterpSpeed; // 0x230 (0x4)
	float OcclusionLowPassFilterFrequency; // 0x234 (0x4)
	float OcclusionVolumeAttenuation; // 0x238 (0x4)
	float OcclusionInterpolationTime; // 0x23c (0x4)
	float ReverbWetLevelMin; // 0x240 (0x4)
	float ReverbWetLevelMax; // 0x244 (0x4)
	float ReverbDistanceMin; // 0x248 (0x4)
	float ReverbDistanceMax; // 0x24c (0x4)
	float ManualReverbSendLevel; // 0x250 (0x4)
	float PriorityAttenuationMin; // 0x254 (0x4)
	float PriorityAttenuationMax; // 0x258 (0x4)
	float PriorityAttenuationDistanceMin; // 0x25c (0x4)
	float PriorityAttenuationDistanceMax; // 0x260 (0x4)
	float ManualPriorityAttenuation; // 0x264 (0x4)
	struct FRuntimeFloatCurve CustomReverbSendCurve; // 0x268 (0x88)
	struct TArray<struct FAttenuationSubmixSendSettings> SubmixSendSettings; // 0x2f0 (0x10)
	struct FRuntimeFloatCurve CustomPriorityAttenuationCurve; // 0x300 (0x88)
	struct FSoundAttenuationPluginSettings PluginSettings; // 0x388 (0x40)
};

