// Class /Script/HoagieRuntime.FortHoagieVehicleAnimInstance
// Size: 0x7e0
class UFortHoagieVehicleAnimInstance : public UFortVehicleAnimInstance
{
	unsigned char unreflected_5f0[0x130]; // 0x5f0 (0x130) 
	struct FRotator EngineRotation; // 0x720 (0x18)
	struct FRotator MainRotorRotation; // 0x738 (0x18)
	struct FRotator TailRotorRotaton; // 0x750 (0x18)
	struct FRotator BoosterFanRotation; // 0x768 (0x18)
	enum EFortCardinalDirection BoostCardinalDirection; // 0x780 (0x1)
	unsigned char unreflected_781[0x1b]; // 0x781 (0x1b) 
	float EngineRotationInterpSpeed; // 0x79c (0x4)
	float EngineRotationDuringBoostInterpSpeed; // 0x7a0 (0x4)
	float EngineFlipSpeedThreshold; // 0x7a4 (0x4)
	float BoostDirectionDeadzone; // 0x7a8 (0x4)
	float EngineFlipDeadzone; // 0x7ac (0x4)
	float DriverRoll; // 0x7b0 (0x4)
	float DriverYaw; // 0x7b4 (0x4)
	float VerticalSpeed; // 0x7b8 (0x4)
	float FwdSpeed; // 0x7bc (0x4)
	float LocalBoostDirection; // 0x7c0 (0x4)
	float YawBlendSpaceInput; // 0x7c4 (0x4)
	float NormalizedAcceleration; // 0x7c8 (0x4)
	unsigned char unreflected_7cc[0x1]; // 0x7cc (0x1) 
	bool bShouldHideBlades; // 0x7cd (0x1)
	bool bIsBoostOnCD; // 0x7ce (0x1)
	bool bIsBoostReady; // 0x7cf (0x1)
	bool bIsMovingForward; // 0x7d0 (0x1)
	bool bIsReversing; // 0x7d1 (0x1)
	bool bIsMovingAnyDirection; // 0x7d2 (0x1)
	bool bIsBoosting; // 0x7d3 (0x1)
	bool bShouldReverse; // 0x7d4 (0x1)
	bool bShouldGoBackToIdle; // 0x7d5 (0x1)
	bool bShouldApplyBoostAdditive; // 0x7d6 (0x1)
	bool bIsEngineShuttingOff; // 0x7d7 (0x1)
	bool bTransitionDefaultReverseStart; // 0x7d8 (0x1)
	bool bTransitionBoostLoopReverse; // 0x7d9 (0x1)
	unsigned char padding_7da[0x6]; // 0x7da (0x6)
};

