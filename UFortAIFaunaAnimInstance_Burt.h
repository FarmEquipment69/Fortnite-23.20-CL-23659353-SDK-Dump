// Class /Script/IrwinRuntime.FortAIFaunaAnimInstance_Burt
// Size: 0x780
class UFortAIFaunaAnimInstance_Burt : public UFortAIFaunaAnimInstance
{
	float MovingPlayRate; // 0x6d0 (0x4)
	float LocomotionPoseAdditiveAlpha; // 0x6d4 (0x4)
	bool bEnableHeadTiltUpAdditive; // 0x6d8 (0x1)
	bool bTurnAngleIsNegative; // 0x6d9 (0x1)
	unsigned char unreflected_6da[0x2]; // 0x6da (0x2) 
	struct FName DisableLocomotionAdditiveCurveName; // 0x6dc (0x4)
	struct FName InterruptibleCurveName; // 0x6e0 (0x4)
	bool bIsIdleShuffleTurn; // 0x6e4 (0x1)
	unsigned char unreflected_6e5[0x3]; // 0x6e5 (0x3) 
	float IdleShuffleBodyBend; // 0x6e8 (0x4)
	float IdleShufflePlayRate; // 0x6ec (0x4)
	bool bIdleShuffleTurnDirection; // 0x6f0 (0x1)
	bool bIsMoving; // 0x6f1 (0x1)
	bool bCanTransitionIdleToApex; // 0x6f2 (0x1)
	bool bCanTransitionIdleToMoving; // 0x6f3 (0x1)
	bool bCanTransitionMovingToIdle; // 0x6f4 (0x1)
	bool bCanTransitionLandToIdle; // 0x6f5 (0x1)
	bool bCanTransitionLandToJumpStart; // 0x6f6 (0x1)
	bool bCanTransitionJumpStartToApex; // 0x6f7 (0x1)
	bool bCanTransitionApexToFall; // 0x6f8 (0x1)
	bool bCanTransitionFallToLand; // 0x6f9 (0x1)
	bool bCanTransitionIdleTurnToIdle; // 0x6fa (0x1)
	bool bCanTransitionLocomotionTurnToIdle; // 0x6fb (0x1)
	bool bCanTransitionLocomotionTurnToMoving; // 0x6fc (0x1)
	bool bCanTransitionIdleTurnToMoving; // 0x6fd (0x1)
	bool bCanTransitionFallToMoving; // 0x6fe (0x1)
	bool bCanTransitionFallToIdle; // 0x6ff (0x1)
	float MovingPlayRateSpeedThreshold; // 0x700 (0x4)
	float MovingPlayRateSlowSpeedDivisor; // 0x704 (0x4)
	float MovingPlayRateFastSpeedDivisor; // 0x708 (0x4)
	float MovingPlayRateMinClamp; // 0x70c (0x4)
	float MovingPlayRateMaxClamp; // 0x710 (0x4)
	float MovingPlayRateInterpSpeed; // 0x714 (0x4)
	float LocomotionPoseAdditiveAlphaInterpSpeed; // 0x718 (0x4)
	float EnableHeadTiltUpAdditivePawnUniqueIDMultiplier; // 0x71c (0x4)
	float EnableHeadTiltUpAdditiveModOperand; // 0x720 (0x4)
	float InterruptibleCurveValueLargeThreshold; // 0x724 (0x4)
	float InterruptibleCurveValueTurnAngleThreshold; // 0x728 (0x4)
	float SpeedMovingThreshold; // 0x72c (0x4)
	float SpeedIdleThreshold; // 0x730 (0x4)
	float TurnAngleLargeThreshold; // 0x734 (0x4)
	float SpeedRidingMovingThreshold; // 0x738 (0x4)
	float SpeedRidingIdleThreshold; // 0x73c (0x4)
	float IdleShuffleBodyBendMultiplier; // 0x740 (0x4)
	float IdleShuffleTurnThreshold; // 0x744 (0x4)
	float IdleShuffleTurnDirectionThreshold; // 0x748 (0x4)
	float IdleShufflePlayRateInRangeA; // 0x74c (0x4)
	float IdleShufflePlayRateInRangeB; // 0x750 (0x4)
	float IdleShufflePlayRateOutRangeA; // 0x754 (0x4)
	float IdleShufflePlayRateOutRangeB; // 0x758 (0x4)
	float MinSpeedSlowRidingMovePlayRate; // 0x75c (0x4)
	float SpeedSlowDivisorRidingMovePlayRate; // 0x760 (0x4)
	struct FMapRangeClamped_Ranges RidingMovePlayRateRanges; // 0x764 (0x10)
	unsigned char padding_774[0xc]; // 0x774 (0xc)
};

