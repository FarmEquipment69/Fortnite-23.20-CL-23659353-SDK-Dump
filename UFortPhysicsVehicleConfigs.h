// Class /Script/FortniteGame.FortPhysicsVehicleConfigs
// Size: 0x890
class UFortPhysicsVehicleConfigs : public UFortVehicleConfigs
{
	float WaterTestFrequency; // 0x308 (0x4)
	float MinLinearSpeedRunningVarianceSq; // 0x30c (0x4)
	float MinAngularSpeedRunningVarianceSq; // 0x310 (0x4)
	float VehicleErrorPerDistanceCentimeters; // 0x314 (0x4)
	float VehicleErrorPerDistanceCentimetersPerSecond; // 0x318 (0x4)
	float VehicleErrorPerAngleDegrees; // 0x31c (0x4)
	float VehicleErrorPerAngleDegreesPerSecond; // 0x320 (0x4)
	float VehicleErrorPerUpdate; // 0x324 (0x4)
	float VehicleInvalidErrorPerSecondTolerance; // 0x328 (0x4)
	float VehicleInvalidErrorMaxSeconds; // 0x32c (0x4)
	float VehicleInvalidErrorMinSeconds; // 0x330 (0x4)
	float InPlaceRotationStrength; // 0x334 (0x4)
	float IdleBrakeForce; // 0x338 (0x4)
	float TooFastBrakeForce; // 0x33c (0x4)
	float BrakeForce; // 0x340 (0x4)
	float AutoBrakeSpeed; // 0x344 (0x4)
	float WaterDragCoefficient; // 0x348 (0x4)
	float WaterDragCoefficient2; // 0x34c (0x4)
	float LateralFriction; // 0x350 (0x4)
	float VehicleCameraMaxSteerAlpha; // 0x354 (0x4)
	float MaxForwardSpeedToSwapReverseControls; // 0x358 (0x4)
	float MinSpeedSteeringAngle; // 0x35c (0x4)
	float MaxSpeedSteeringAngle; // 0x360 (0x4)
	bool bSteerWithFrontWheels; // 0x364 (0x1)
	bool bInvertSteeringWhenReversing; // 0x365 (0x1)
	unsigned char unreflected_366[0x2]; // 0x366 (0x2) 
	float InvertSteeringMinSpeedKmh; // 0x368 (0x4)
	float SteerBrakeMultiplier; // 0x36c (0x4)
	float PoppedTireTractionMultiplierStageOne; // 0x370 (0x4)
	float PoppedTireTractionMultiplierStageTwo; // 0x374 (0x4)
	float PoppedTireTractionMultiplierMin; // 0x378 (0x4)
	float MaxRestSpeed; // 0x37c (0x4)
	float ImpactDamageSafeDegrees; // 0x380 (0x4)
	float MinSpeedToDamage; // 0x384 (0x4)
	float MaxSpeedToDamage; // 0x388 (0x4)
	float MinSpeedDamage; // 0x38c (0x4)
	float MaxSpeedDamage; // 0x390 (0x4)
	float MinSpeedDamageNoPlayer; // 0x394 (0x4)
	float MaxSpeedDamageNoPlayer; // 0x398 (0x4)
	float MinSpeedAIDamage; // 0x39c (0x4)
	float MaxSpeedAIDamage; // 0x3a0 (0x4)
	float MinSpeedAIDamageNoPlayer; // 0x3a4 (0x4)
	float MaxSpeedAIDamageNoPlayer; // 0x3a8 (0x4)
	float MinSpeedBuildingDamage; // 0x3ac (0x4)
	float MaxSpeedBuildingDamage; // 0x3b0 (0x4)
	float MinSpeedBuildingDamageNoPlayer; // 0x3b4 (0x4)
	float MaxSpeedBuildingDamageNoPlayer; // 0x3b8 (0x4)
	float VehicleOnVehicleImpactVelocityMultiplier; // 0x3bc (0x4)
	float MinImpactMagnitudeToDealDamageKmH; // 0x3c0 (0x4)
	float MaxImpactDamage; // 0x3c4 (0x4)
	float ImpactDamagePerImpulse; // 0x3c8 (0x4)
	float ImpactReductionPerTransverseVelocity; // 0x3cc (0x4)
	float MaxImpactDamageReduction; // 0x3d0 (0x4)
	float PlayerImpactDamageMultiplier; // 0x3d4 (0x4)
	float IgnorePawnForDamageTimeout; // 0x3d8 (0x4)
	unsigned char unreflected_3dc[0x4]; // 0x3dc (0x4) 
	struct TArray<struct FFortPhysicsVehicleDamageOverrideConfigs> DamageOverrideList; // 0x3e0 (0x10)
	float MinSpeedForRimScrapeDamage; // 0x3f0 (0x4)
	float RimScrapeDamageRate; // 0x3f4 (0x4)
	float VehicleFlipCooldown; // 0x3f8 (0x4)
	float MinSpringHitNormal; // 0x3fc (0x4)
	float VehicleCameraGraceZone; // 0x400 (0x4)
	float VehicleLeftAnalogSteeringDeadZone; // 0x404 (0x4)
	float VehicleCameraLeftAnalogMultiplier; // 0x408 (0x4)
	float WaterTopSpeedMultiplier; // 0x40c (0x4)
	float VehicleInPlaceThreshold; // 0x410 (0x4)
	float VehicleWeightShiftPitchStrength; // 0x414 (0x4)
	float VehicleWeightShiftRollStrength; // 0x418 (0x4)
	float VehicleWeightShiftYawStrength; // 0x41c (0x4)
	float JumpRateMultiplier; // 0x420 (0x4)
	float VehicleDebugStrafeMultiplier; // 0x424 (0x4)
	float GravityVelocitySteerForwardThreshold; // 0x428 (0x4)
	float GravityVelocitySteerErrorThreshold; // 0x42c (0x4)
	float GravitySteerMultiplier; // 0x430 (0x4)
	float InWaterPushMultiplier; // 0x434 (0x4)
	float MinWheelRotationSpeed; // 0x438 (0x4)
	float WheelRotationAcceleration; // 0x43c (0x4)
	float WheelRotationDampingPerSecond; // 0x440 (0x4)
	float VehicleLookAheadLength; // 0x444 (0x4)
	float VehicleLookAheadInAirLength; // 0x448 (0x4)
	float VehicleLookAheadMinSpeed; // 0x44c (0x4)
	bool bEnableLookahead; // 0x450 (0x1)
	unsigned char unreflected_451[0x3]; // 0x451 (0x3) 
	float VehicleLookAheadMinNormal; // 0x454 (0x4)
	float VehicleLookAheadStiff; // 0x458 (0x4)
	float VehicleLookAheadDamp; // 0x45c (0x4)
	float VehicleLookAheadInAirStiff; // 0x460 (0x4)
	float VehicleLookAheadInAirDamp; // 0x464 (0x4)
	float VehicleLookAheadMaxAccel; // 0x468 (0x4)
	float VehicleLookAheadMaxAccelInAir; // 0x46c (0x4)
	float VehicleAirControlStiff; // 0x470 (0x4)
	float VehicleAirControlDamp; // 0x474 (0x4)
	float VehicleAirYawStrength; // 0x478 (0x4)
	float VehicleAirPitchStrength; // 0x47c (0x4)
	float DragCoefficient; // 0x480 (0x4)
	float DragCoefficient2; // 0x484 (0x4)
	float MaxDragSpeed; // 0x488 (0x4)
	float MinLinearSpeedToWake; // 0x48c (0x4)
	float MinAngularSpeedToWake; // 0x490 (0x4)
	float MaxDriveInclineAngle; // 0x494 (0x4)
	float MaxAntigravityInclineAngle; // 0x498 (0x4)
	bool bAlwaysApplyAntiGravityInRightDir; // 0x49c (0x1)
	unsigned char unreflected_49d[0x3]; // 0x49d (0x3) 
	float MaxDriveTiltAngle; // 0x4a0 (0x4)
	float AxleOffsetZ; // 0x4a4 (0x4)
	float SpringStiffMultiplier; // 0x4a8 (0x4)
	float SpringDampMultiplier; // 0x4ac (0x4)
	float SpringStiffMultiplierWater; // 0x4b0 (0x4)
	float SpringDampMultiplierWater; // 0x4b4 (0x4)
	float SpringMaxAccelMultiplier; // 0x4b8 (0x4)
	float SpringLengthMultiplier; // 0x4bc (0x4)
	float HasGroundSweepLengthMultiplier; // 0x4c0 (0x4)
	float AngularDragCoefficient; // 0x4c4 (0x4)
	float PitchAngularDrag; // 0x4c8 (0x4)
	float RollAngularDrag; // 0x4cc (0x4)
	float AngularDragCoefficientWater; // 0x4d0 (0x4)
	float PitchAngularDragWater; // 0x4d4 (0x4)
	float RollAngularDragWater; // 0x4d8 (0x4)
	float YawAngularDragWater; // 0x4dc (0x4)
	float VehicleAnalogReverse; // 0x4e0 (0x4)
	float VehicleLookAheadMinSpeedInAir; // 0x4e4 (0x4)
	float VehicleAutoAirPitchStrength; // 0x4e8 (0x4)
	float VehicleAutoAirYawStrength; // 0x4ec (0x4)
	float VehicleAutoAirRollStrength; // 0x4f0 (0x4)
	float VehicleMinVelAlongContactNormal; // 0x4f4 (0x4)
	float VehicleMaxVelAlongContactNormal; // 0x4f8 (0x4)
	float MinSameDirCollision; // 0x4fc (0x4)
	float MinCollisionSpeedToCorrect; // 0x500 (0x4)
	float MinCollisionBoostNormal; // 0x504 (0x4)
	float CollisionSpeedBoostAlpha; // 0x508 (0x4)
	float CancelIgnoreForwardThreshold; // 0x50c (0x4)
	float AngularDragCoefficientRampedUp; // 0x510 (0x4)
	float PitchAngularDragRampedUp; // 0x514 (0x4)
	float VehicleAirYawStrengthRampedUp; // 0x518 (0x4)
	float VehicleAirPitchStrengthRampedUp; // 0x51c (0x4)
	float WheelRadiusF; // 0x520 (0x4)
	float WheelRadiusB; // 0x524 (0x4)
	float PitchLeanStrength; // 0x528 (0x4)
	float MaxForwardVelAccelLean; // 0x52c (0x4)
	float MaxReverseVelAccelLean; // 0x530 (0x4)
	float MaxSteerForAccelLean; // 0x534 (0x4)
	float MinYawSpeedForLean; // 0x538 (0x4)
	float YawLeanStrength; // 0x53c (0x4)
	float AccelerationPitchCooldown; // 0x540 (0x4)
	float YawLeanCooldown; // 0x544 (0x4)
	float MaxAccelPitch; // 0x548 (0x4)
	float MaxYawLean; // 0x54c (0x4)
	float ContactModificationOffset; // 0x550 (0x4)
	float VehicleFloorFriction; // 0x554 (0x4)
	float VehicleSideScrapeFriction; // 0x558 (0x4)
	float VehicleSideScrapeMaxCosAngle; // 0x55c (0x4)
	float GroundCheckSweepRadius; // 0x560 (0x4)
	float GroundTraceLength; // 0x564 (0x4)
	float SMSleepCounter; // 0x568 (0x4)
	float CorrectOrientationTimeout; // 0x56c (0x4)
	float NudgeOrientationTimeout; // 0x570 (0x4)
	float NudgeDistance; // 0x574 (0x4)
	struct FVector CorrectOrientationCenterOfMassOffset; // 0x578 (0x18)
	float CorrectOrientationLinearCoefficient; // 0x590 (0x4)
	float CorrectOrientationAngularCoefficient; // 0x594 (0x4)
	struct TEnumAsByte<ECollisionChannel> SpringCollisionChannel; // 0x598 (0x1)
	unsigned char unreflected_599[0x3]; // 0x599 (0x3) 
	struct FName SpringCollisionProfile; // 0x59c (0x4)
	bool bShouldLandscapeCheckUseCapsuleOffset; // 0x5a0 (0x1)
	bool bShouldUseTerrainHandlingInfo; // 0x5a1 (0x1)
	unsigned char unreflected_5a2[0x2]; // 0x5a2 (0x2) 
	int NumWheelsOnSurfaceRequired; // 0x5a4 (0x4)
	struct FRuntimeTerrainHandlingInfo RoadBehavior; // 0x5a8 (0x14)
	struct FRuntimeTerrainHandlingInfo DirtBehavior; // 0x5bc (0x14)
	struct FRuntimeTerrainHandlingInfo GrassBehavior; // 0x5d0 (0x14)
	struct FRuntimeTerrainHandlingInfo SnowBehavior; // 0x5e4 (0x14)
	struct FRuntimeTerrainHandlingInfo IceBehavior; // 0x5f8 (0x14)
	bool bVehicleCameraSteering; // 0x60c (0x1)
	bool bVehicleCameraSteeringForKBM; // 0x60d (0x1)
	bool bVehicleCameraSteeringForGamepad; // 0x60e (0x1)
	bool bVehicleCameraSteeringForTouch; // 0x60f (0x1)
	bool bVehicleCameraBoostForGamepad; // 0x610 (0x1)
	bool bVehicleScreenSpaceSteering; // 0x611 (0x1)
	bool bVehicleCameraLeftAnalogSteering; // 0x612 (0x1)
	bool bUseKinematicReplicationWhenNotRendered; // 0x613 (0x1)
	float PawnLaunchVerticalVelocityScale; // 0x614 (0x4)
	float PawnLaunchForwardVelocityScale; // 0x618 (0x4)
	enum EPawnLaunchMinVelocityApply PawnLaunchMinVelocityApply; // 0x61c (0x1)
	unsigned char unreflected_61d[0x3]; // 0x61d (0x3) 
	float PawnLaunchMinVerticalVelocity; // 0x620 (0x4)
	float PawnLaunchMinForwardVelocity; // 0x624 (0x4)
	float PawnLaunchMaxSpeed; // 0x628 (0x4)
	float PawnLaunchAngleAdjustment; // 0x62c (0x4)
	float PawnLaunchMinDirection; // 0x630 (0x4)
	bool bPushoutPlayers; // 0x634 (0x1)
	bool bProbeShapeSetup; // 0x635 (0x1)
	unsigned char unreflected_636[0x2]; // 0x636 (0x2) 
	float PushoutPlayersUsingMovementMaxDepth; // 0x638 (0x4)
	float PushoutPlayersUsingMovementMinStrength; // 0x63c (0x4)
	float PushoutPlayersUsingMovementMaxStrength; // 0x640 (0x4)
	float PushoutPlayersUsingUsingHardSnapMaxDistance; // 0x644 (0x4)
	float PushoutPlayersUsingUsingHardSnapMinDistance; // 0x648 (0x4)
	float HitRequiredMinSpeed; // 0x64c (0x4)
	float MaxHealthToDestroyProp; // 0x650 (0x4)
	float MaxHealthToDestroyPropFast; // 0x654 (0x4)
	float MaxHealthToDestroyPropSpeedThreshold; // 0x658 (0x4)
	float PropImpactImpulseMagnitude; // 0x65c (0x4)
	float RadiusForPropOverlapCheck; // 0x660 (0x4)
	float MaxMultiplierForVelocityOverlap; // 0x664 (0x4)
	float MinMultiplierForVelocityOverlap; // 0x668 (0x4)
	float PropOverlapMinMoveDistSquared; // 0x66c (0x4)
	bool bForceUseImminentCollision; // 0x670 (0x1)
	unsigned char unreflected_671[0x3]; // 0x671 (0x3) 
	float DestructionTraceAheadMinSpeed; // 0x674 (0x4)
	float DestructionTraceAheadAmount; // 0x678 (0x4)
	float PropDestructionImpulseAmount; // 0x67c (0x4)
	struct FVector DestructionTraceHalfSize; // 0x680 (0x18)
	bool bCanDestroyProps; // 0x698 (0x1)
	unsigned char unreflected_699[0x3]; // 0x699 (0x3) 
	float ImminentHitRequiredMinSpeed; // 0x69c (0x4)
	float MaxHealthToDestroyPropBoosting; // 0x6a0 (0x4)
	bool bShouldUseLocalIgnoreListForDestroyedBuildings; // 0x6a4 (0x1)
	unsigned char unreflected_6a5[0x3]; // 0x6a5 (0x3) 
	int MaxBudgetForActorTick; // 0x6a8 (0x4)
	int MinBudgetForReducedSpring; // 0x6ac (0x4)
	bool bShouldServerRunReducedSprings; // 0x6b0 (0x1)
	unsigned char unreflected_6b1[0x3]; // 0x6b1 (0x3) 
	int MaxReducedSpringsPerTick; // 0x6b4 (0x4)
	bool bDontApplyDragInAir; // 0x6b8 (0x1)
	bool bDriverCanDamageVehicle; // 0x6b9 (0x1)
	unsigned char unreflected_6ba[0x6]; // 0x6ba (0x6) 
	struct FGameplayTagQuery DriverCannotDamageVehicleExceptionQuery; // 0x6c0 (0x48)
	float MaxWheelSpinWound; // 0x708 (0x4)
	bool bUseRechargeableFuel; // 0x70c (0x1)
	unsigned char unreflected_70d[0x3]; // 0x70d (0x3) 
	float BuoyancyCoefficient; // 0x710 (0x4)
	float BuoyancyDamp; // 0x714 (0x4)
	float BuoyancyDamp2; // 0x718 (0x4)
	float BuoyancyRampMinVelocity; // 0x71c (0x4)
	float BuoyancyRampMaxVelocity; // 0x720 (0x4)
	float BuoyancyRampMax; // 0x724 (0x4)
	float MaxBuoyantForce; // 0x728 (0x4)
	float UprightSpringWaterPitchStiff; // 0x72c (0x4)
	float UprightSpringWaterPitchDamp; // 0x730 (0x4)
	float UprightSpringWaterRollStiff; // 0x734 (0x4)
	float UprightSpringWaterRollDamp; // 0x738 (0x4)
	bool bModifyShocksInWater; // 0x73c (0x1)
	bool bApplyPushForceAtSocket; // 0x73d (0x1)
	unsigned char unreflected_73e[0x2]; // 0x73e (0x2) 
	float WaterVelocityStrength; // 0x740 (0x4)
	float MaxWaterForce; // 0x744 (0x4)
	int NumPontoonsForFullyInWater; // 0x748 (0x4)
	float WaterIdleTimeForRiverPush; // 0x74c (0x4)
	float WaterIdleTimeForSleep; // 0x750 (0x4)
	int VelocityPontoonIndex; // 0x754 (0x4)
	float WaterShorePushFactor; // 0x758 (0x4)
	float YawAngularDragIdleMultiplier; // 0x75c (0x4)
	float YawAngularDragWaterEmpty; // 0x760 (0x4)
	float WaterBodyTraceTimer; // 0x764 (0x4)
	float WaterBodyOverlapSphereRadius; // 0x768 (0x4)
	float WaterBodyOverlapSphereCenterZOffset; // 0x76c (0x4)
	bool bUseBoxBasedWaterOverlapChecks; // 0x770 (0x1)
	unsigned char unreflected_771[0x7]; // 0x771 (0x7) 
	struct FVector WaterBoxSizeForOverlaps; // 0x778 (0x18)
	struct FVector WaterBoxOffsetForOverlaps; // 0x790 (0x18)
	float WaterSubmergedDelay; // 0x7a8 (0x4)
	float MaxWaterDepth; // 0x7ac (0x4)
	float WaterDestructionDelay; // 0x7b0 (0x4)
	float ImminentCollisDestructionAngle; // 0x7b4 (0x4)
	float ImminentCollisUpForwardMinProtected; // 0x7b8 (0x4)
	float ImminentCollisUpNormalMinProtected; // 0x7bc (0x4)
	float DebasePlayerLaunchSpeed; // 0x7c0 (0x4)
	bool bExplodeOnImpactAtCriticalHealth; // 0x7c4 (0x1)
	unsigned char unreflected_7c5[0x3]; // 0x7c5 (0x3) 
	struct FScalableFloat MetalOnHit; // 0x7c8 (0x28)
	bool bOverrideErrorCorrection; // 0x7f0 (0x1)
	unsigned char unreflected_7f1[0x3]; // 0x7f1 (0x3) 
	struct FRigidBodyErrorCorrection ErrorCorrectionOverride; // 0x7f4 (0x34)
	class UClass* BoundsXYSplineClass; // 0x828 (0x8)
	struct FScalableFloat bEnableDormantOnSleep; // 0x830 (0x28)
	float MinVehicleDamage; // 0x858 (0x4)
	float MaxVehicleDamage; // 0x85c (0x4)
	float MinVehicleDamageSpeedKmh; // 0x860 (0x4)
	float MaxVehicleDamageSpeedKmh; // 0x864 (0x4)
	float MinVehicleDamageWhileBoosting; // 0x868 (0x4)
	float MaxVehicleDamageWhileBoosting; // 0x86c (0x4)
	float MinVehicleDamageSpeedWhileBoostingKmh; // 0x870 (0x4)
	float MaxVehicleDamageSpeedWhileBoostingKmh; // 0x874 (0x4)
	float MinBumpinessSpringHitTimeMultiplier; // 0x878 (0x4)
	float MaxBumpinessSpringHitTimeMultiplier; // 0x87c (0x4)
	float BumpinessExponentForShocks; // 0x880 (0x4)
	float DirtRoadFakeBumpinessMultiplier; // 0x884 (0x4)
	bool bApplyGameplayImpulseAtCOM; // 0x888 (0x1)
	bool bApplyPawnSpeedOnEntry; // 0x889 (0x1)
	unsigned char unreflected_88a[0x2]; // 0x88a (0x2) 
	float MaxAppliedPawnSpeedOnEntry; // 0x88c (0x4)
};

