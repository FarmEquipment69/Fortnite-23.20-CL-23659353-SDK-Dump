// ScriptStruct /Script/MotoSynth.MotoSynthRuntimeSettings
// Size: 0x138
struct FMotoSynthRuntimeSettings
{
	bool bSynthToneEnabled; // 0x0 (0x1)
	unsigned char unreflected_1[0x7]; // 0x1 (0x7) 
	struct FVector2D SynthToneVolumeRange; // 0x8 (0x10)
	struct FVector2D SynthToneFilterFrequencyRange; // 0x18 (0x10)
	bool bSynthToneEnvelopeEnabled; // 0x28 (0x1)
	unsigned char unreflected_29[0x7]; // 0x29 (0x7) 
	struct FVector2D SynthToneAttackTimeMsecRange; // 0x30 (0x10)
	struct FVector2D SynthToneAttackCurveRange; // 0x40 (0x10)
	struct FVector2D SynthToneDecayTimeMsecRange; // 0x50 (0x10)
	struct FVector2D SynthToneDecayCurveRange; // 0x60 (0x10)
	int SynthOctaveShift; // 0x70 (0x4)
	bool bNoiseEnabled; // 0x74 (0x1)
	unsigned char unreflected_75[0x3]; // 0x75 (0x3) 
	struct FVector2D NoiseVolumeRange; // 0x78 (0x10)
	bool bNoiseEnvelopeEnabled; // 0x88 (0x1)
	unsigned char unreflected_89[0x7]; // 0x89 (0x7) 
	struct FVector2D NoiseLPFRange; // 0x90 (0x10)
	struct FVector2D NoiseAttackTimeMsecRange; // 0xa0 (0x10)
	struct FVector2D NoiseAttackCurveRange; // 0xb0 (0x10)
	struct FVector2D NoiseDecayTimeMsecRange; // 0xc0 (0x10)
	struct FVector2D NoiseDecayCurveRange; // 0xd0 (0x10)
	bool bGranularEngineEnabled; // 0xe0 (0x1)
	unsigned char unreflected_e1[0x3]; // 0xe1 (0x3) 
	float GranularEngineVolume; // 0xe4 (0x4)
	float GranularEnginePitchScale; // 0xe8 (0x4)
	int NumSamplesToCrossfadeBetweenGrains; // 0xec (0x4)
	int NumGrainTableEntriesPerGrain; // 0xf0 (0x4)
	int GrainTableRandomOffsetForConstantRPMs; // 0xf4 (0x4)
	int GrainCrossfadeSamplesForConstantRPMs; // 0xf8 (0x4)
	unsigned char unreflected_fc[0x4]; // 0xfc (0x4) 
	class UMotoSynthSource* AccelerationSource; // 0x100 (0x8)
	class UMotoSynthSource* DecelerationSource; // 0x108 (0x8)
	bool bStereoWidenerEnabled; // 0x110 (0x1)
	unsigned char unreflected_111[0x3]; // 0x111 (0x3) 
	float StereoDelayMsec; // 0x114 (0x4)
	float StereoFeedback; // 0x118 (0x4)
	float StereoWidenerWetlevel; // 0x11c (0x4)
	float StereoWidenerDryLevel; // 0x120 (0x4)
	float StereoWidenerDelayRatio; // 0x124 (0x4)
	bool bStereoWidenerFilterEnabled; // 0x128 (0x1)
	unsigned char unreflected_129[0x3]; // 0x129 (0x3) 
	float StereoWidenerFilterFrequency; // 0x12c (0x4)
	float StereoWidenerFilterQ; // 0x130 (0x4)
	unsigned char padding_134[0x4]; // 0x134 (0x4)
};

