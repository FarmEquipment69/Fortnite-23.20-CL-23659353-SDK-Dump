// Class /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider
// Size: 0x850
class UFortPlayerAnimInstance_MotorcycleRider : public UFortBaseLayerAnimInstance
{
	class AFortMotorcycleVehicle* Motorcycle; // 0x440 (0x8)
	class UFortMotorcycleVehicleAnimInstance* MotorcycleAnimInstance; // 0x448 (0x8)
	struct FFortAnimInput_Motorcycle MotorcycleInput; // 0x450 (0x54)
	unsigned char unreflected_4a4[0x4]; // 0x4a4 (0x4) 
	class AFortPlayerPawn* FortPlayerPawn; // 0x4a8 (0x8)
	struct FVector WorldVelocity; // 0x4b0 (0x18)
	struct FVector LocalVelocity; // 0x4c8 (0x18)
	float RightHandIKAlpha; // 0x4e0 (0x4)
	float LeftHandIKAlpha; // 0x4e4 (0x4)
	float Speed2D; // 0x4e8 (0x4)
	enum EFortCardinalDirection LocomotionCardinalDirection; // 0x4ec (0x1)
	enum EFortCardinalDirection PrePivotCardinalDirection; // 0x4ed (0x1)
	unsigned char bShouldPlayJogPivotTransition; // 0x4ee (0x1)
	unsigned char bPivotTransitionDoOnceTriggered; // 0x4ee (0x1)
	unsigned char bIsJumping; // 0x4ee (0x1)
	unsigned char bIsReloading; // 0x4ee (0x1)
	unsigned char unreflected_4ef[0x1]; // 0x4ef (0x1) 
	struct FRotator RiderCatchupRotation; // 0x4f0 (0x18)
	unsigned char unreflected_508[0x8]; // 0x508 (0x8) 
	float RiderZDisplacement; // 0x510 (0x4)
	float RiderDisplacementDampUpFactor; // 0x514 (0x4)
	float RiderDisplacementDampDownFactor; // 0x518 (0x4)
	float RiderDisplacementLandingFallDistanceThreshold; // 0x51c (0x4)
	float RiderMinDisplacement; // 0x520 (0x4)
	float RiderMaxDisplacement; // 0x524 (0x4)
	float RiderDisplacementRampPerSecond; // 0x528 (0x4)
	float RiderRotationInterpSpeed; // 0x52c (0x4)
	struct FFortAnimInput_VelocityImpact VelocityImpact; // 0x530 (0xf0)
	struct FVector ImpactDisplacement; // 0x620 (0x18)
	float AbsSteerAngle; // 0x638 (0x4)
	float FallDistanceValue; // 0x63c (0x4)
	struct FVector FootTraceLocation; // 0x640 (0x18)
	float FootTraceSideOffset; // 0x658 (0x4)
	float MaxFootLocationDistance; // 0x65c (0x4)
	bool bHasFootTrace; // 0x660 (0x1)
	bool bInAir; // 0x661 (0x1)
	bool bIsInRollAngleThreshold; // 0x662 (0x1)
	bool bIsDriveStarting; // 0x663 (0x1)
	unsigned char unreflected_664[0x4]; // 0x664 (0x4) 
	struct FVector LocalLeftOffset; // 0x668 (0x18)
	struct FVector WorldPosLeft; // 0x680 (0x18)
	struct FRotator LocalRotLeftOffset; // 0x698 (0x18)
	struct FRotator WorldRotLeft; // 0x6b0 (0x18)
	struct FVector LocalRightOffset; // 0x6c8 (0x18)
	struct FVector WorldPosRight; // 0x6e0 (0x18)
	struct FRotator LocalRotRightOffset; // 0x6f8 (0x18)
	struct FRotator WorldRotRight; // 0x710 (0x18)
	bool bIsSteeringRotating; // 0x728 (0x1)
	bool bIsStopped; // 0x729 (0x1)
	bool bIsIdle; // 0x72a (0x1)
	unsigned char unreflected_72b[0x1]; // 0x72b (0x1) 
	float IdleSpeedKmh; // 0x72c (0x4)
	bool bIsSlowingDown; // 0x730 (0x1)
	bool bIsDrivingFast; // 0x731 (0x1)
	bool bIsTurningRightHard; // 0x732 (0x1)
	bool bIsTurningLeftHard; // 0x733 (0x1)
	bool bIsBraking; // 0x734 (0x1)
	unsigned char unreflected_735[0x1]; // 0x735 (0x1) 
	bool bIsBoosting; // 0x736 (0x1)
	bool bIsJumpTrick; // 0x737 (0x1)
	float JumpPlayRate; // 0x738 (0x4)
	bool bIsJumpFlipping; // 0x73c (0x1)
	bool bShouldEnableAO; // 0x73d (0x1)
	bool bIsBodyDragging; // 0x73e (0x1)
	unsigned char unreflected_73f[0x1]; // 0x73f (0x1) 
	float FallDistanceJumpingThreshold; // 0x740 (0x4)
	float FallDistanceJumpTrickThreshold; // 0x744 (0x4)
	float RollAngleThreshold; // 0x748 (0x4)
	float StartSpeedThreshold; // 0x74c (0x4)
	float SlowingSpeedThreshold; // 0x750 (0x4)
	float FastSpeedThreshold; // 0x754 (0x4)
	float BrakingDeltaThreshold; // 0x758 (0x4)
	float SteerHardAngleThreshold; // 0x75c (0x4)
	float GroundTraceUpOffset; // 0x760 (0x4)
	float GroundTraceLength; // 0x764 (0x4)
	struct FVector2D JumpPlayRateInRange; // 0x768 (0x10)
	struct FVector2D JumpPlayRateOutRange; // 0x778 (0x10)
	float JumpChargeFactor; // 0x788 (0x4)
	bool bIsChargingJump; // 0x78c (0x1)
	bool bIsMotorcycleJumping; // 0x78d (0x1)
	bool bMotorcycleLaunchedJump; // 0x78e (0x1)
	bool bWheelie; // 0x78f (0x1)
	bool bStoppie; // 0x790 (0x1)
	enum EFortMotorcycleAirTrickType AirTrickType; // 0x791 (0x1)
	bool bIsJumpingAndNotRolling; // 0x792 (0x1)
	bool bIsOnGroundAndNotRolling; // 0x793 (0x1)
	bool bIsOnGroundAndBoosting; // 0x794 (0x1)
	bool bPlayPivotOnGroundAndNotBoosting; // 0x795 (0x1)
	bool bIsPowerSliding; // 0x796 (0x1)
	unsigned char unreflected_797[0x1]; // 0x797 (0x1) 
	float PowerSlideSteeringAngleThreshold; // 0x798 (0x4)
	float PowerSlideSpeedThreshold; // 0x79c (0x4)
	unsigned char unreflected_7a0[0x8]; // 0x7a0 (0x8) 
	struct FVector2D LandStartPosInRange; // 0x7a8 (0x10)
	struct FVector2D LandStartPosOutRange; // 0x7b8 (0x10)
	float LandStartPosition; // 0x7c8 (0x4)
	bool bShouldPawnStandUp; // 0x7cc (0x1)
	bool bIsSmoothingYaw; // 0x7cd (0x1)
	unsigned char unreflected_7ce[0x2]; // 0x7ce (0x2) 
	float AimPitch; // 0x7d0 (0x4)
	float AimYaw; // 0x7d4 (0x4)
	float AimYawLastFrame; // 0x7d8 (0x4)
	float AimYawSmoothed; // 0x7dc (0x4)
	float BodyAimYaw; // 0x7e0 (0x4)
	float NegativeBodyAimYaw; // 0x7e4 (0x4)
	float ForwardSpeed; // 0x7e8 (0x4)
	float PreviousForwardSpeed; // 0x7ec (0x4)
	float TotalSpeed; // 0x7f0 (0x4)
	bool bIsReversing; // 0x7f4 (0x1)
	bool bIsMoving; // 0x7f5 (0x1)
	bool bIsInAir; // 0x7f6 (0x1)
	bool bIsUsingConsumable; // 0x7f7 (0x1)
	struct FCachedAnimRelevancyData IntroCachedTime; // 0x7f8 (0x14)
	float StoppieLandTime; // 0x80c (0x4)
	bool bShouldPlayHitReact; // 0x810 (0x1)
	bool bIsPlayingMontage; // 0x811 (0x1)
	unsigned char unreflected_812[0x2]; // 0x812 (0x2) 
	float VehiclePitch; // 0x814 (0x4)
	float VehicleRoll; // 0x818 (0x4)
	unsigned char unreflected_81c[0x4]; // 0x81c (0x4) 
	struct FRotator MeleeTwistRot; // 0x820 (0x18)
	bool bStateTransitionRuleToMovingLoop; // 0x838 (0x1)
	unsigned char unreflected_839[0x3]; // 0x839 (0x3) 
	float UpperBodyAdditiveAlpha; // 0x83c (0x4)
	float UpperBodyAdditiveStrength; // 0x840 (0x4)
	float MovingNoisePlayRate; // 0x844 (0x4)
	bool bIsFemale; // 0x848 (0x1)
	unsigned char padding_849[0x7]; // 0x849 (0x7)

	/* Functions */

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleStartWheelie (Underlying native function: HandleStartWheelie 0x738c0ec)
	void HandleStartWheelie(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleStartStoppie (Underlying native function: HandleStartStoppie 0x738c0d4)
	void HandleStartStoppie(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleStartChargingJump (Underlying native function: HandleStartChargingJump 0x471dd9c)
	void HandleStartChargingJump(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleStartAirTrick (Underlying native function: HandleStartAirTrick 0x738c058)
	void HandleStartAirTrick(enum EFortMotorcycleAirTrickType& TrickType); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleReleaseWheelie (Underlying native function: HandleReleaseWheelie 0x738c040)
	void HandleReleaseWheelie(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleReleaseStoppie (Underlying native function: HandleReleaseStoppie 0x738c028)
	void HandleReleaseStoppie(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleJump (Underlying native function: HandleJump 0x2d0a634)
	void HandleJump(float& InJumpChargeFactor); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleFinishAirTrick (Underlying native function: HandleFinishAirTrick 0x738c010)
	void HandleFinishAirTrick(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleChargingJump (Underlying native function: HandleChargingJump 0x296d84c)
	void HandleChargingJump(float& InJumpChargeFactor); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.HandleCancelChargingJump (Underlying native function: HandleCancelChargingJump 0x738bff8)
	void HandleCancelChargingJump(); // (Final | Native | Public)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.CollapsedAimYawSmoothed (Underlying native function: CollapsedAimYawSmoothed 0x738bf48)
	void CollapsedAimYawSmoothed(float& DeltaSeconds); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.CalculateNoiseAlpha (Underlying native function: CalculateNoiseAlpha 0x738be8c)
	void CalculateNoiseAlpha(); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/MotorcycleRuntime.FortPlayerAnimInstance_MotorcycleRider.AnimNotify_JumpEntered (Underlying native function: AnimNotify_JumpEntered 0x738be6c)
	void AnimNotifyJumpEntered(); // (Final | Native | Public)
};

