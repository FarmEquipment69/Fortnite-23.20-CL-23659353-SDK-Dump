// Class /Script/IrwinRuntime.FortAIFaunaAnimInstance_Nug
// Size: 0x760
class UFortAIFaunaAnimInstance_Nug : public UFortAIFaunaAnimInstance
{
	bool bIsBeingHeld; // 0x6d0 (0x1)
	bool bIsBeingThrown; // 0x6d1 (0x1)
	unsigned char unreflected_6d2[0x2]; // 0x6d2 (0x2) 
	float LowerBodyMaskAlpha; // 0x6d4 (0x4)
	bool bShouldExitJump; // 0x6d8 (0x1)
	unsigned char unreflected_6d9[0x3]; // 0x6d9 (0x3) 
	float MovingPlayRate; // 0x6dc (0x4)
	bool bShouldLean; // 0x6e0 (0x1)
	unsigned char unreflected_6e1[0x3]; // 0x6e1 (0x3) 
	float LeanDirection; // 0x6e4 (0x4)
	bool bTurnAngleIsNegative; // 0x6e8 (0x1)
	unsigned char unreflected_6e9[0x3]; // 0x6e9 (0x3) 
	struct FName InterruptibleCurveName; // 0x6ec (0x4)
	bool bIsIdleShuffleTurn; // 0x6f0 (0x1)
	unsigned char unreflected_6f1[0x3]; // 0x6f1 (0x3) 
	float IdleShuffleBodyBend; // 0x6f4 (0x4)
	float IdleShufflePlayRate; // 0x6f8 (0x4)
	bool bIdleShuffleTurnDirection; // 0x6fc (0x1)
	bool bCanTransitionIdleToIdleTurn; // 0x6fd (0x1)
	bool bCanTransitionIdleToLocomotionTurn; // 0x6fe (0x1)
	bool bCanTransitionIdleToMoving; // 0x6ff (0x1)
	bool bCanTransitionIdleToJumpApex; // 0x700 (0x1)
	bool bCanTransitionMovingToIdle; // 0x701 (0x1)
	bool bCanTransitionJumpStartToJumpApex; // 0x702 (0x1)
	bool bCanTransitionJumpApexToJumpLoop; // 0x703 (0x1)
	bool bCanTransitionLocomotionTurnToIdle; // 0x704 (0x1)
	bool bCanTransitionLocomotionTurnToMoving; // 0x705 (0x1)
	bool bCanTransitionIdleTurnToMoving; // 0x706 (0x1)
	bool bCanTransitionIdleTurnToIdle; // 0x707 (0x1)
	bool bCanTransitionJumpLoopToJumpLand; // 0x708 (0x1)
	bool bCanTransitionIsBeingHeldToChickenChuck; // 0x709 (0x1)
	unsigned char unreflected_70a[0x2]; // 0x70a (0x2) 
	float ShouldExitJumpSpeedThreshold; // 0x70c (0x4)
	float MovingPlayRateSpeedThreshold; // 0x710 (0x4)
	float MovingPlayRateSlowSpeedDivisor; // 0x714 (0x4)
	float MovingPlayRateFastSpeedDivisor; // 0x718 (0x4)
	float MovingPlayRateInterpSpeed; // 0x71c (0x4)
	float MovingPlayRateMinClamp; // 0x720 (0x4)
	float MovingPlayRateMaxClamp; // 0x724 (0x4)
	float LeanDirectionSpeedThreshold; // 0x728 (0x4)
	float ShouldLeanSpeedThreshold; // 0x72c (0x4)
	float InterruptibleCurveValueLargeThreshold; // 0x730 (0x4)
	float SpeedMovingThreshold; // 0x734 (0x4)
	float SpeedIdleThreshold; // 0x738 (0x4)
	float IdleTurnTransitionSpeedThreshold; // 0x73c (0x4)
	float LocomotionTurnTransitionSpeedThreshold; // 0x740 (0x4)
	float IdleShuffleBodyBendMultiplier; // 0x744 (0x4)
	float IdleShuffleTurnThreshold; // 0x748 (0x4)
	float IdleShuffleTurnDirectionThreshold; // 0x74c (0x4)
	float IdleShufflePlayRateInRangeA; // 0x750 (0x4)
	float IdleShufflePlayRateInRangeB; // 0x754 (0x4)
	float IdleShufflePlayRateOutRangeA; // 0x758 (0x4)
	float IdleShufflePlayRateOutRangeB; // 0x75c (0x4)
};

