// Class /Script/WindRuntime.WindSplineComponent
// Size: 0x1410
class UWindSplineComponent : public USplineComponent
{
	unsigned char unreflected_640[0x20]; // 0x640 (0x20) 
	struct FScalableFloat DisableSafeZonePhaseIndex; // 0x660 (0x28)
	class UStaticMesh* StaticMesh; // 0x688 (0x8)
	class UStaticMesh* StartStaticMesh; // 0x690 (0x8)
	class UStaticMesh* EndStaticMesh; // 0x698 (0x8)
	struct TEnumAsByte<ESplineMeshAxis> MeshForwardAxis; // 0x6a0 (0x1)
	unsigned char unreflected_6a1[0x7]; // 0x6a1 (0x7) 
	struct FScalableFloat MeshRollVariance; // 0x6a8 (0x28)
	struct FName ActiveSectionStartMaterialParamName; // 0x6d0 (0x4)
	struct FName ActiveSectionEndMaterialParamName; // 0x6d4 (0x4)
	struct FScalableFloat TargetingRefreshRate; // 0x6d8 (0x28)
	struct FScalableFloat TargetingRadius; // 0x700 (0x28)
	struct TArray<struct TEnumAsByte<EObjectTypeQuery>> TargetObjectTypes; // 0x728 (0x10)
	struct FGameplayTagQuery TargetTagQuery; // 0x738 (0x48)
	struct FGameplayTagQuery BlockageTagQuery; // 0x780 (0x48)
	struct FScalableFloat BlockageSubdivisions; // 0x7c8 (0x28)
	struct TArray<struct FWindSplineTargetEffects> TargetEffects; // 0x7f0 (0x10)
	struct TMap<enum EFortPhysicsObjectType, struct FScalableFloat> ObjectTypeToMaxTargetCount; // 0x800 (0x50)
	struct FScalableFloat MaxTargetCountReachedExpelDuration; // 0x850 (0x28)
	struct FScalableFloat SkydivingLandingAngle; // 0x878 (0x28)
	struct FScalableFloat RampUpSpeed; // 0x8a0 (0x28)
	struct FScalableFloat RampDownSpeed; // 0x8c8 (0x28)
	struct FScalableFloat ForwardForceFallOffStartDistance; // 0x8f0 (0x28)
	struct FScalableFloat ForwardForceMagnitude; // 0x918 (0x28)
	struct FScalableFloat ReverseForceMagnitude; // 0x940 (0x28)
	struct FScalableFloat ForwardForceDistanceFallOffExponent; // 0x968 (0x28)
	struct FScalableFloat InwardForceInnerRadius; // 0x990 (0x28)
	struct FScalableFloat InwardForceOuterRadiusAcceleration; // 0x9b8 (0x28)
	struct FScalableFloat InwardForceInnerRadiusDeceleration; // 0x9e0 (0x28)
	struct FScalableFloat InwardForceInnerRadiusSpeedThreshold; // 0xa08 (0x28)
	struct FScalableFloat InwardForceOuterRadiusSpeedThreshold; // 0xa30 (0x28)
	struct FScalableFloat InwardForceMaxReductionFromSteering; // 0xa58 (0x28)
	struct FScalableFloat InwardForceMaxMultiplierWhenSteering; // 0xa80 (0x28)
	struct FScalableFloat InwardForceMaxSteerAngle; // 0xaa8 (0x28)
	struct FScalableFloat InwardForceLowVelocityThreshold; // 0xad0 (0x28)
	struct FScalableFloat InwardForceLowVelocityMinValue; // 0xaf8 (0x28)
	struct FScalableFloat InwardForceSteeringReduceAccelerationPower; // 0xb20 (0x28)
	struct FScalableFloat InwardForceSteeringReduceDecelerationPower; // 0xb48 (0x28)
	struct TMap<enum EFortPhysicsSimSize, struct FWindSplineForceModifiers> SizeForceModifiers; // 0xb70 (0x50)
	struct TMap<enum EFortPhysicsObjectType, struct FWindSplineForceModifiers> ObjectTypeForceModifiers; // 0xbc0 (0x50)
	struct TArray<struct FWindSplineTagBasedForceModifiers> QueryBasedForceModifiers; // 0xc10 (0x10)
	struct FGameplayTagQuery PawnSkydivingTimeLimitQuery; // 0xc20 (0x48)
	struct FScalableFloat PawnSkydivingTimeLimit; // 0xc68 (0x28)
	struct FScalableFloat PawnSkydivingMinDistanceAboveGround; // 0xc90 (0x28)
	struct FScalableFloat AutoWakeUpPhysicsObjects; // 0xcb8 (0x28)
	struct FScalableFloat FieldMagnitudeBase; // 0xce0 (0x28)
	struct FScalableFloat FieldMinMagnitudeAfterFalloff; // 0xd08 (0x28)
	struct FScalableFloat FieldMaxMagnitudeAfterFalloff; // 0xd30 (0x28)
	class UClass* PlayerWindAnimationLayer; // 0xd58 (0x8)
	struct FMulticastInlineDelegate OnWindSplineDisabled; // 0xd60 (0x10)
	struct FMulticastInlineDelegate OnWindSplineEnabled; // 0xd70 (0x10)
	struct FWindSplineTargetData TargetData; // 0xd80 (0x1b8)
	struct FWindSplineBlockageArray Blockages; // 0xf38 (0x118)
	class UFieldSystemComponent* FieldSystemComponent; // 0x1050 (0x8)
	class UUniformVector* UniformVector; // 0x1058 (0x8)
	class UBoxFalloff* BoxFalloff; // 0x1060 (0x8)
	class UOperatorField* BoxOperatorField; // 0x1068 (0x8)
	struct TArray<struct FWindSplineMeshData> MeshDataArray; // 0x1070 (0x10)
	struct TArray<class UFXSystemComponent*> FXComponents; // 0x1080 (0x10)
	unsigned char padding_1090[0x380]; // 0x1090 (0x380)

	/* Functions */

	// Function /Script/WindRuntime.WindSplineComponent.OnRep_TargetData (Underlying native function: OnRep_TargetData 0x77e8168)
	void OnRepTargetData(); // (Final | Native | Protected)

	// Function /Script/WindRuntime.WindSplineComponent.OnRep_Blockages (Underlying native function: OnRep_Blockages 0x77e8168)
	void OnRepBlockages(); // (Final | Native | Protected)

	// Function /Script/WindRuntime.WindSplineComponent.HandleSafeZoneUpdated (Underlying native function: HandleSafeZoneUpdated 0x5b65ef0)
	void HandleSafeZoneUpdated(); // (Final | Native | Protected)

	// Function /Script/WindRuntime.WindSplineComponent.GetWindDataAtLocation (Underlying native function: GetWindDataAtLocation 0x77e7d04)
	void GetWindDataAtLocation(struct FVector& InTargetLocation, struct FVector& OutDirection, float& OutAttenuation); // (Final | Native | Public | HasOutParms | HasDefaults | BlueprintCallable | Const)

	// Function /Script/WindRuntime.WindSplineComponent.GetTargetingRadius (Underlying native function: GetTargetingRadius 0x77e7cd0)
	float GetTargetingRadius(); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/WindRuntime.WindSplineComponent.GetClosestActiveLocations (Underlying native function: GetClosestActiveLocations 0x5b65cf0)
	void GetClosestActiveLocations(struct FVector& InTargetLocation, bool& bIsClosestPointActive, struct FVector& ClosestPointOnSpline, struct TArray<struct FVector>& ClosestActiveLocations); // (Final | Native | Public | HasOutParms | HasDefaults | BlueprintCallable | Const)

	// Function /Script/WindRuntime.WindSplineComponent.Enable (Underlying native function: Enable 0x5b65c80)
	void Enable(); // (Final | Native | Protected)

	// Function /Script/WindRuntime.WindSplineComponent.Disable (Underlying native function: Disable 0x5b65c60)
	void Disable(); // (Final | Native | Protected)
};

