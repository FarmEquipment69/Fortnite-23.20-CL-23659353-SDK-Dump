// Class /Script/FortniteAI.FortAIDirector
// Size: 0x1040
class AFortAIDirector : public AActor
{
	unsigned char unreflected_288[0x10]; // 0x288 (0x10) 
	struct FCurveTableRowHandle MaxAliveCurve; // 0x298 (0x10)
	struct FCurveTableRowHandle MinAliveCurve; // 0x2a8 (0x10)
	struct FIntensityData IntensityInfo; // 0x2b8 (0x30)
	struct FFortAIEncounterPIDController AIDirectorPIDController; // 0x2e8 (0x68)
	struct FFortAIEncounterPIDControllerSettings PIDControllerSettings; // 0x350 (0x30)
	struct FUtilityData UtilityContributionData[0x10]; // 0x380 (0x40) (ARRAY) 
	float UnreachableLocationPathCost; // 0x780 (0x4)
	unsigned char unreflected_784[0x4]; // 0x784 (0x4) 
	struct FFortPlayerPerformanceEstimateSettings PlayerPerformanceEstimateSettings; // 0x788 (0x40)
	unsigned char bUsePrototypeEnemies; // 0x7c8 (0x1)
	unsigned char unreflected_7c9[0x3]; // 0x7c9 (0x3) 
	bool bForceByPassNavMeshForAISpawning; // 0x7cc (0x1)
	unsigned char unreflected_7cd[0x3]; // 0x7cd (0x3) 
	struct TArray<struct TEnumAsByte<EFortEncounterDirection>> DebugEncounterDirections; // 0x7d0 (0x10)
	enum EDespawnAIType DespawnAIType; // 0x7e0 (0x1)
	unsigned char unreflected_7e1[0x3]; // 0x7e1 (0x3) 
	float DespawnDistance; // 0x7e4 (0x4)
	float DespawnInterval; // 0x7e8 (0x4)
	unsigned char unreflected_7ec[0x4]; // 0x7ec (0x4) 
	struct FGameplayTagContainer DebugSpawnAIGroupTags; // 0x7f0 (0x20)
	struct FGameplayTagContainer DebugEncounterTags; // 0x810 (0x20)
	float BurstSpawnThreatVisualsEndDelay; // 0x830 (0x4)
	unsigned char unreflected_834[0x4]; // 0x834 (0x4) 
	struct TArray<struct FFortAIEncounterSpawnGroupCapsProfile> EncounterSpawnGroupCapSettings; // 0x838 (0x10)
	struct TArray<struct FFortAIEncounterSpawnPointsProfile> EncounterSpawnPointsSettings; // 0x848 (0x10)
	struct TArray<struct FFortAIEncounterPawnDifficultyLevelModifier> EncounterPawnDifficultyLevelModifiers; // 0x858 (0x10)
	struct TArray<struct FFortAISpawnGroupUpgradeData> SpawnGroupUpgrades; // 0x868 (0x10)
	float GuaranteedUpgradeGroupUtilityBonus; // 0x878 (0x4)
	float DiscreteEncounterUtilityDesireMappings[0x4]; // 0x87c (0x4) (ARRAY) 
	struct TEnumAsByte<EFortAIUtility> InitialDynamicUtilities[0x4]; // 0x88c (0x1) (ARRAY) 
	struct FEncounterEnvironmentQueryInfo SpawnLocationPlacementQueries[0x4]; // 0x890 (0x28) (ARRAY) 
	struct FEncounterEnvironmentQueryInfo SpawnLocationActorSearchQueries[0x4]; // 0x930 (0x28) (ARRAY) 
	class UFortAIDirectorDataTrackingSettings* DataTrackingSettings; // 0x9d0 (0x8)
	struct TArray<struct FDataTableRowHandle> BaseLootDropData; // 0x9d8 (0x10)
	struct TArray<struct FFortAILootDropModifiers> LootDropModifiers; // 0x9e8 (0x10)
	struct FGameplayTagQuery LootDropDenialQuery; // 0x9f8 (0x48)
	unsigned char bDebugEncounterQueries; // 0xa40 (0x1)
	unsigned char unreflected_a41[0x17]; // 0xa41 (0x17) 
	struct TArray<class AFortPlayerControllerZone*> PlayerControllersForBVTree; // 0xa58 (0x10)
	struct TArray<class AFortPlayerPawn*> PlayerPawnsForBVTree; // 0xa68 (0x10)
	unsigned char unreflected_a78[0x40]; // 0xa78 (0x40) 
	struct TArray<class AFortAIController*> AIControllersForBVTree; // 0xab8 (0x10)
	struct TArray<class AFortAIPawn*> AIPawnsForBVTree; // 0xac8 (0x10)
	unsigned char unreflected_ad8[0x40]; // 0xad8 (0x40) 
	struct TArray<class AFortAthenaAIBotController*> AIPlayerBotControllersForBVTree; // 0xb18 (0x10)
	struct TArray<class AFortPlayerPawn*> AIPlayerBotPawnsForBVTree; // 0xb28 (0x10)
	unsigned char unreflected_b38[0x40]; // 0xb38 (0x40) 
	struct TArray<class AFortAthenaAIBotController*> AINonPlayerBotControllersForBVTree; // 0xb78 (0x10)
	struct TArray<class AFortPlayerPawn*> AINonPlayerBotPawnsForBVTree; // 0xb88 (0x10)
	unsigned char unreflected_b98[0x40]; // 0xb98 (0x40) 
	struct TArray<class AFortPlayerPawn*> NonPlayerBotPawns; // 0xbd8 (0x10)
	struct TArray<class AFortPlayerPawn*> PlayerBotPawns; // 0xbe8 (0x10)
	struct TArray<class AFortPlayerPawn*> PlayerPawns; // 0xbf8 (0x10)
	struct TArray<class AFortAIPawn*> FortAIPawns; // 0xc08 (0x10)
	unsigned char unreflected_c18[0x100]; // 0xc18 (0x100) 
	bool bUseLODSettings; // 0xd18 (0x1)
	unsigned char unreflected_d19[0x6f]; // 0xd19 (0x6f) 
	struct TScriptInterface<class IFortAthenaAILODSettings> CachedLODSettingsManager; // 0xd88 (0x10)
	bool bAsyncProcessUpdateAliveAIs; // 0xd98 (0x1)
	bool bAllowProcessPlayerTargeting; // 0xd99 (0x1)
	unsigned char unreflected_d9a[0x2]; // 0xd9a (0x2) 
	int MaxNumLODAIProcessPerFrame; // 0xd9c (0x4)
	struct FFortEncounterPawnNumberCaps DefaultEncounterPawnCaps; // 0xda0 (0x18)
	unsigned char unreflected_db8[0x8]; // 0xdb8 (0x8) 
	class UReporterGraph* IntensityGraph; // 0xdc0 (0x8)
	class UReporterGraph* UtilitiesGraph; // 0xdc8 (0x8)
	class UReporterGraph* PIDValuesGraph; // 0xdd0 (0x8)
	class UReporterGraph* PIDContributionsGraph; // 0xdd8 (0x8)
	unsigned char bNightActive; // 0xde0 (0x1)
	unsigned char bAIDisabled; // 0xde0 (0x1)
	unsigned char bRegisteredForDayPhaseChange; // 0xde0 (0x1)
	unsigned char bUseSpawnCap; // 0xde0 (0x1)
	unsigned char unreflected_de1[0x3]; // 0xde1 (0x3) 
	int NightCount; // 0xde4 (0x4)
	float NightEncounterFailureBreatherTime; // 0xde8 (0x4)
	float EncounterPawnSpawnInterval; // 0xdec (0x4)
	class UClass* DefaultNightEncounter; // 0xdf0 (0x8)
	class UClass* DummyDebugEncounter; // 0xdf8 (0x8)
	class UClass* BaseEncounterClass; // 0xe00 (0x8)
	int MaxActiveAlive; // 0xe08 (0x4)
	int NumActiveAlive; // 0xe0c (0x4)
	int NumPendingCapRelevantAI; // 0xe10 (0x4)
	unsigned char unreflected_e14[0x54]; // 0xe14 (0x54) 
	struct TArray<struct FPendingSpawnInfo> PendingSpawns; // 0xe68 (0x10)
	int MaxAISpawnedPerFrame; // 0xe78 (0x4)
	int MaxAIDespawnedPerFrame; // 0xe7c (0x4)
	int DespawnAllAIMaxAIDespawnedPerFrame; // 0xe80 (0x4)
	unsigned char unreflected_e84[0x4]; // 0xe84 (0x4) 
	struct TArray<struct TWeakObjectPtr<class AFortAIPawn>> PendingDespawns; // 0xe88 (0x10)
	unsigned char unreflected_e98[0x8]; // 0xe98 (0x8) 
	int NumWorldSubdivides; // 0xea0 (0x4)
	float MinAISpawnDistanceFromPlayers; // 0xea4 (0x4)
	struct FGameplayTagContainer AmbientThreatPreferredPlacementActorTags; // 0xea8 (0x20)
	struct FGameplayTagContainer AmbientThreatRequiredPlacementActorTags; // 0xec8 (0x20)
	struct TArray<class UFortAIEncounterInfo*> ActiveEncounters; // 0xee8 (0x10)
	struct TArray<class UFortAIEncounterInfo*> InactiveEncounters; // 0xef8 (0x10)
	struct TArray<struct FFortPendingStoppedEncounterData> PendingStoppedEncounters; // 0xf08 (0x10)
	class UFortAIEncounterInfo* ActiveDefaultEncounter; // 0xf18 (0x8)
	class UFortAIEncounterInfo* ActiveDummyDebugEncounter; // 0xf20 (0x8)
	struct TArray<class UFortAIEncounterSequence*> EncounterSequences; // 0xf28 (0x10)
	class UEQSRenderingComponent* EQSRenderingComp; // 0xf38 (0x8)
	int DebugGraphUpdateFrequency; // 0xf40 (0x4)
	float MaxNormalLODDistanceToPlayer; // 0xf44 (0x4)
	float AIRelevantDistanceToPlayer; // 0xf48 (0x4)
	float EncounterRelevantDistanceToPlayer; // 0xf4c (0x4)
	float EncounterRelevantDistanceToDefender; // 0xf50 (0x4)
	unsigned char unreflected_f54[0x4]; // 0xf54 (0x4) 
	struct TArray<struct TScriptInterface<class IFortPatrolWardInterface>> PatrolWards; // 0xf58 (0x10)
	unsigned char unreflected_f68[0x4]; // 0xf68 (0x4) 
	int MaxTotalActiveAliveAI; // 0xf6c (0x4)
	int MaxEncounterActiveAliveAI; // 0xf70 (0x4)
	int MaxSPUsed; // 0xf74 (0x4)
	unsigned char unreflected_f78[0x8]; // 0xf78 (0x8) 
	struct TArray<struct FUtilityTypeFloatPair*> DebugEncounterTopUtilityPercentages; // 0xf80 (0x10)
	struct TArray<class UCurveFloat*> DebugEncounterSpawnPointsCurves; // 0xf90 (0x10)
	unsigned char bDebugAllowEncounterModifierTags; // 0xfa0 (0x1)
	unsigned char unreflected_fa1[0x3]; // 0xfa1 (0x3) 
	int SimulatedNumberOfPlayersForAIEncounters; // 0xfa4 (0x4)
	unsigned char unreflected_fa8[0x78]; // 0xfa8 (0x78) 
	int MaxNumberOfEncounterGroups; // 0x1020 (0x4)
	unsigned char unreflected_1024[0x4]; // 0x1024 (0x4) 
	struct TArray<class ABuildingProp_AISpawner*> RegisteredAISpawners; // 0x1028 (0x10)
	unsigned char padding_1038[0x8]; // 0x1038 (0x8)

	/* Functions */

	// Function /Script/FortniteAI.FortAIDirector.UnregisterPatrolWard (Underlying native function: UnregisterPatrolWard 0xa268d7c)
	void UnregisterPatrolWard(struct TScriptInterface<class IFortPatrolWardInterface>& PatrolWard); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteAI.FortAIDirector.StartEncounter (Underlying native function: StartEncounter 0xa2687a8)
	class UFortAIEncounterInfo* StartEncounter(struct FString& EncounterInstigator, class UFortDifficultyEncounterSettings*& DifficultyEncounterSettings, struct FFortAIEncounterQueryData& OptionalQueryData); // (Final | 0x00000002 | Native | Public | HasOutParms | BlueprintCallable)

	// Function /Script/FortniteAI.FortAIDirector.RegisterPatrolWard (Underlying native function: RegisterPatrolWard 0xa2678b0)
	void RegisterPatrolWard(struct TScriptInterface<class IFortPatrolWardInterface>& PatrolWard); // (Final | Native | Public | BlueprintCallable)

	// Function /Script/FortniteAI.FortAIDirector.ReceivePawnSpawned (Has no native function)
	void ReceivePawnSpawned(class AFortPawn*& SpawnedPawn); // (BlueprintAuthorityOnly | Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.PostDayPhaseChanged (Has no native function)
	void PostDayPhaseChanged(enum EFortDayPhase& CurrentDayPhase, enum EFortDayPhase& PreviousDayPhase, bool& bAtCreation); // (BlueprintAuthorityOnly | Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnRestStarted (Has no native function)
	void OnRestStarted(); // (Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnRampStarted (Has no native function)
	void OnRampStarted(); // (Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnPlayerSpawn (Has no native function)
	void OnPlayerSpawn(class AFortPlayerPawn*& PlayerPawn); // (0x00000002 | BlueprintAuthorityOnly | Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnPlayerDied (Has no native function)
	void OnPlayerDied(class AFortPlayerPawn*& PlayerPawn); // (0x00000002 | BlueprintAuthorityOnly | Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnPeakStarted (Has no native function)
	void OnPeakStarted(); // (Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnPawnDied (Has no native function)
	void OnPawnDied(class AFortAIPawn*& KilledPawn); // (BlueprintAuthorityOnly | Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnFadeStarted (Has no native function)
	void OnFadeStarted(); // (Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnDirectorDeactivated (Has no native function)
	void OnDirectorDeactivated(); // (BlueprintAuthorityOnly | Event | Public | BlueprintEvent)

	// Function /Script/FortniteAI.FortAIDirector.OnDayPhaseChanged (Underlying native function: OnDayPhaseChanged 0xa266424)
	void OnDayPhaseChanged(enum EFortDayPhase& CurrentDayPhase, enum EFortDayPhase& PreviousDayPhase, bool& bAtCreation); // (Native | Public)

	// Function /Script/FortniteAI.FortAIDirector.IsPointTooCloseToPatrolWards (Underlying native function: IsPointTooCloseToPatrolWards 0xa265fcc)
	bool IsPointTooCloseToPatrolWards(struct FVector& Point, enum EWardAffectType& WardEffectTypeFilter); // (Final | Native | Public | HasOutParms | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.IsLineTooCloseToPatrolWards (Underlying native function: IsLineTooCloseToPatrolWards 0xa265edc)
	bool IsLineTooCloseToPatrolWards(struct FVector& LineStart, struct FVector& LineEnd); // (Final | Native | Public | HasOutParms | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.IsAnyEncounterGoalWithinDistanceOfPoint (Underlying native function: IsAnyEncounterGoalWithinDistanceOfPoint 0xa265dd4)
	bool IsAnyEncounterGoalWithinDistanceOfPoint(struct FVector& Point, float& Distance, bool& bOnlyActiveEncounters); // (Final | Native | Public | HasOutParms | HasDefaults | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.IsAnyAIRelevantToPlayer (Underlying native function: IsAnyAIRelevantToPlayer 0xa265684)
	bool IsAnyAIRelevantToPlayer(class AFortPlayerPawn*& Player); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.IsAnyActiveEncounterRelevantToPlayer (Underlying native function: IsAnyActiveEncounterRelevantToPlayer 0xa265d30)
	bool IsAnyActiveEncounterRelevantToPlayer(class AFortPlayerPawn*& Player); // (Final | 0x00000002 | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.IsAnyActiveEncounterRelevantToDefender (Underlying native function: IsAnyActiveEncounterRelevantToDefender 0xa265c8c)
	bool IsAnyActiveEncounterRelevantToDefender(class AFortAIPawn*& Defender); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.GetVectorFromEncounterDirection (Underlying native function: GetVectorFromEncounterDirection 0xa2651c8)
	static struct FVector GetVectorFromEncounterDirection(struct TEnumAsByte<EFortEncounterDirection>& Direction); // (Final | 0x00000002 | Native | Static | Public | HasDefaults | BlueprintCallable | BlueprintPure)

	// Function /Script/FortniteAI.FortAIDirector.GetRiftsFromClosestActiveEncounterTo (Underlying native function: GetRiftsFromClosestActiveEncounterTo 0xa264fd0)
	struct TArray<class ABuildingRift*> GetRiftsFromClosestActiveEncounterTo(class AActor*& Target); // (Final | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.GetNumPlayers (Underlying native function: GetNumPlayers 0x8b08bdc)
	int GetNumPlayers(); // (BlueprintAuthorityOnly | Native | Public | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.GetNumActiveEncounters (Underlying native function: GetNumActiveEncounters 0x8606d74)
	int GetNumActiveEncounters(); // (Final | 0x00000002 | BlueprintAuthorityOnly | Native | Public | BlueprintCallable)

	// Function /Script/FortniteAI.FortAIDirector.GetEncounterDirectionFromVector (Underlying native function: GetEncounterDirectionFromVector 0xa264a58)
	static struct TEnumAsByte<EFortEncounterDirection> GetEncounterDirectionFromVector(struct FVector& DirectionVector); // (Final | Native | Static | Public | HasDefaults | BlueprintCallable | BlueprintPure)

	// Function /Script/FortniteAI.FortAIDirector.GetAmbientThreatEncounterSpawnLocations (Underlying native function: GetAmbientThreatEncounterSpawnLocations 0xa264824)
	void GetAmbientThreatEncounterSpawnLocations(struct TArray<struct FVector>& AmbientThreatEncounterSpawnLocations); // (Final | BlueprintAuthorityOnly | Native | Public | HasOutParms | BlueprintCallable | BlueprintPure | Const)

	// Function /Script/FortniteAI.FortAIDirector.Deactivate (Underlying native function: Deactivate 0x22c0e58)
	void Deactivate(); // (BlueprintAuthorityOnly | Native | Public | BlueprintCallable)

	// Function /Script/FortniteAI.FortAIDirector.ConvertInvalidDirectionsToValidDirections (Underlying native function: ConvertInvalidDirectionsToValidDirections 0xa2642f8)
	static struct TArray<struct TEnumAsByte<EFortEncounterDirection>> ConvertInvalidDirectionsToValidDirections(struct TArray<struct TEnumAsByte<EFortEncounterDirection>>& InvalidDirections); // (Final | Native | Static | Public | BlueprintCallable | BlueprintPure)

	// Function /Script/FortniteAI.FortAIDirector.Activate (Underlying native function: Activate 0x23eff98)
	void Activate(); // (BlueprintAuthorityOnly | Native | Public | BlueprintCallable)
};

