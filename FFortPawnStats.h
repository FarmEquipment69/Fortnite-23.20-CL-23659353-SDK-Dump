// ScriptStruct /Script/FortniteGame.FortPawnStats
// Size: 0xc0
struct FFortPawnStats : FTableRowBase
{
	float MaximumHealth; // 0x8 (0x4)
	float SpeedWalk; // 0xc (0x4)
	float SpeedRun; // 0x10 (0x4)
	float SpeedSprint; // 0x14 (0x4)
	float SpeedFly; // 0x18 (0x4)
	float SpeedRidden; // 0x1c (0x4)
	float SpeedCrouchedRun; // 0x20 (0x4)
	float SpeedCrouchedSprint; // 0x24 (0x4)
	float SpeedBackwardsMultiplier; // 0x28 (0x4)
	float SpeedDBNO; // 0x2c (0x4)
	float SpeedClassicDBNO; // 0x30 (0x4)
	float AccelerationStrafeMultiplierSprint; // 0x34 (0x4)
	float MinAnalogWalkSpeed; // 0x38 (0x4)
	float GroundFriction; // 0x3c (0x4)
	float BrakingDecelerationWalking; // 0x40 (0x4)
	float BrakingDecelerationFalling; // 0x44 (0x4)
	float BrakingDecelerationFlying; // 0x48 (0x4)
	float BrakingFrictionFactor; // 0x4c (0x4)
	float MaxAcceleration; // 0x50 (0x4)
	float MaxAccelerationFlying; // 0x54 (0x4)
	float JumpZVelocity; // 0x58 (0x4)
	unsigned char unreflected_5c[0x4]; // 0x5c (0x4) 
	class UCurveTable* FallingDamageTable; // 0x60 (0x8)
	struct FName FallingDamageTableRow; // 0x68 (0x4)
	unsigned char unreflected_6c[0x4]; // 0x6c (0x4) 
	class UCurveTable* VehicleEjectDamageTable; // 0x70 (0x8)
	float HealthRegenRate; // 0x78 (0x4)
	float HealthRegenDelay; // 0x7c (0x4)
	float HealthRegenThreshold; // 0x80 (0x4)
	float MaxShield; // 0x84 (0x4)
	float ShieldRegenRate; // 0x88 (0x4)
	float ShieldRegenDelay; // 0x8c (0x4)
	float ShieldRegenThreshold; // 0x90 (0x4)
	float MaxOvershield; // 0x94 (0x4)
	float MaxControlResistance; // 0x98 (0x4)
	float ControlResistanceRegenRate; // 0x9c (0x4)
	float ControlResistanceRegenDelay; // 0xa0 (0x4)
	float ControlResistanceRegenThreshold; // 0xa4 (0x4)
	float KnockbackMultiplier; // 0xa8 (0x4)
	float KnockbackThreshold; // 0xac (0x4)
	float PawnDamagedTeamNotificationDistance; // 0xb0 (0x4)
	bool bAllowChainStun; // 0xb4 (0x1)
	enum EFortControlRecoveryBehavior ControlRecoveryBehavior; // 0xb5 (0x1)
	unsigned char unreflected_b6[0x2]; // 0xb6 (0x2) 
	struct FGameplayTag CurieMaterialIdentifier; // 0xb8 (0x4)
	unsigned char padding_bc[0x4]; // 0xbc (0x4)
};

